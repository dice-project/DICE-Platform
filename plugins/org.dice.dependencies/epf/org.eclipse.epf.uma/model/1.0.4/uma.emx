<?xml version="1.0" encoding="UTF-8"?>
<!--xtools2_universal_type_manager-->
<?com.ibm.xtools.emf.core.signature <signature id="com.ibm.xtools.uml.msl.model" version="7.0.0"><feature description="" name="com.ibm.xtools.ruml.feature" url="" version="7.0.0"/></signature>?>
<?com.ibm.xtools.emf.core.signature <signature id="com.ibm.xtools.mmi.ui.signatures.diagram" version="7.0.0"><feature description="" name="Rational Modeling Platform (com.ibm.xtools.rmp)" url="" version="7.0.0"/></signature>?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Default="http:///schemas/Default/1" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/3" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/2.0.0/UML" xsi:schemaLocation="http:///schemas/Default/1 pathmap://UML2_MSL_PROFILES/Default.epx#_IN8k8MmBEdqBcN1R6EvWUw?Default/Default? http://www.eclipse.org/uml2/schemas/Ecore/3 pathmap://UML_PROFILES/Ecore.profile.uml#_vy-HUYinEdqtvbnfB2L_5w">
  <uml:Model xmi:id="_J7tG0OyCEdu5-vVjlfVsfQ" name="uma">
    <eAnnotations xmi:id="_J7tG0eyCEdu5-vVjlfVsfQ" source="uml2.diagrams"/>
    <eAnnotations xmi:id="_zTl18O-sEduH59KSHV8vgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <eAnnotations xmi:id="_zTl18e-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UML2InfrastructureMini::Constructs" references="_yxKfCu-sEduH59KSHV8vgA _yxKfDe-sEduH59KSHV8vgA _yxKfEu-sEduH59KSHV8vgA _yxKfD--sEduH59KSHV8vgA _yxKfFu-sEduH59KSHV8vgA _yxUPUO-sEduH59KSHV8vgA _yxUPVO-sEduH59KSHV8vgA _yxUPWO-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl18u-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UML2InfrastructureMini::PrimitiveTypes" references="_yxUPZO-sEduH59KSHV8vgA _yxUPZu-sEduH59KSHV8vgA _yxUPaO-sEduH59KSHV8vgA _yxUPau-sEduH59KSHV8vgA _yxUPa--sEduH59KSHV8vgA _yxUPbO-sEduH59KSHV8vgA _yxUPbu-sEduH59KSHV8vgA _yxUPcO-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl18--sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::BasicElements" references="_yxw7RO-sEduH59KSHV8vgA _yxw7Se-sEduH59KSHV8vgA _yxw7Tu-sEduH59KSHV8vgA _yxw7Ue-sEduH59KSHV8vgA _yxw7Qe-sEduH59KSHV8vgA _yxw7VO-sEduH59KSHV8vgA _yxw7Wu-sEduH59KSHV8vgA _yxw7X--sEduH59KSHV8vgA _yxw7V--sEduH59KSHV8vgA _yxw7Ze-sEduH59KSHV8vgA _yxw7au-sEduH59KSHV8vgA _yxw7b--sEduH59KSHV8vgA _yxw7Yu-sEduH59KSHV8vgA _yxw7de-sEduH59KSHV8vgA _yxw7cu-sEduH59KSHV8vgA _yxw7fu-sEduH59KSHV8vgA _yxw7g--sEduH59KSHV8vgA _yxw7eu-sEduH59KSHV8vgA _yxw7iO-sEduH59KSHV8vgA _yxw7hu-sEduH59KSHV8vgA _yxw7ju-sEduH59KSHV8vgA _yxw7jO-sEduH59KSHV8vgA _yxw7ke-sEduH59KSHV8vgA _yxw7j--sEduH59KSHV8vgA _yxw7lu-sEduH59KSHV8vgA _yxw7lO-sEduH59KSHV8vgA _yxw7m--sEduH59KSHV8vgA _yxw7me-sEduH59KSHV8vgA _yx6FMe-sEduH59KSHV8vgA _yx6FMO-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl19O-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodPlugin" references="_yxw7Qe-sEduH59KSHV8vgA _yxw7VO-sEduH59KSHV8vgA _yxw7Yu-sEduH59KSHV8vgA _y7mMsO-sEduH59KSHV8vgA _zGLFBO-sEduH59KSHV8vgA _zGLFBu-sEduH59KSHV8vgA _zGLFCe-sEduH59KSHV8vgA _zGLFAO-sEduH59KSHV8vgA _zGLFD--sEduH59KSHV8vgA _zGLFEu-sEduH59KSHV8vgA _zGLFF--sEduH59KSHV8vgA _zGLFJ--sEduH59KSHV8vgA _zGLFKu-sEduH59KSHV8vgA _zGLFJO-sEduH59KSHV8vgA _zGLFL--sEduH59KSHV8vgA _zGU2Au-sEduH59KSHV8vgA _zGU2AO-sEduH59KSHV8vgA _zGU2B--sEduH59KSHV8vgA _zGU2Be-sEduH59KSHV8vgA _zGU2DO-sEduH59KSHV8vgA _zGU2Cu-sEduH59KSHV8vgA _zGU2Ee-sEduH59KSHV8vgA _zGU2D--sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl19e-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::GuidanceTypes" references="_yxw7VO-sEduH59KSHV8vgA _yyzdGu-sEduH59KSHV8vgA _yyzdMO-sEduH59KSHV8vgA _yz1-4e-sEduH59KSHV8vgA _yz1-5O-sEduH59KSHV8vgA _yz1-5--sEduH59KSHV8vgA _yz1-6u-sEduH59KSHV8vgA _yz1-7e-sEduH59KSHV8vgA _yz1-8O-sEduH59KSHV8vgA _yz1-8--sEduH59KSHV8vgA _yz1-9u-sEduH59KSHV8vgA _yz1--e-sEduH59KSHV8vgA _yz1-_O-sEduH59KSHV8vgA _yz1_Au-sEduH59KSHV8vgA _yz1_Be-sEduH59KSHV8vgA _yz1-_--sEduH59KSHV8vgA _yz1_Ce-sEduH59KSHV8vgA _yz1_DO-sEduH59KSHV8vgA _yz1_D--sEduH59KSHV8vgA _yz1_Eu-sEduH59KSHV8vgA _yz_v4O-sEduH59KSHV8vgA _yz_v4--sEduH59KSHV8vgA _yz_v5--sEduH59KSHV8vgA _yz_v6u-sEduH59KSHV8vgA _yz_v7e-sEduH59KSHV8vgA _yz_v8O-sEduH59KSHV8vgA _yz_v8--sEduH59KSHV8vgA _yz_v9u-sEduH59KSHV8vgA _yz_v-e-sEduH59KSHV8vgA _yz_v_O-sEduH59KSHV8vgA _yz_v_--sEduH59KSHV8vgA _yz_wBO-sEduH59KSHV8vgA _yz_wAu-sEduH59KSHV8vgA _yz_wCe-sEduH59KSHV8vgA _yz_wB--sEduH59KSHV8vgA _yz_wDu-sEduH59KSHV8vgA _yz_wDO-sEduH59KSHV8vgA _yz_wE--sEduH59KSHV8vgA _yz_wEe-sEduH59KSHV8vgA _yz_wGO-sEduH59KSHV8vgA _yz_wFu-sEduH59KSHV8vgA _yz_wHe-sEduH59KSHV8vgA _yz_wG--sEduH59KSHV8vgA _yz_wIu-sEduH59KSHV8vgA _yz_wIO-sEduH59KSHV8vgA _yz_wJ--sEduH59KSHV8vgA _yz_wJe-sEduH59KSHV8vgA _yz_wLO-sEduH59KSHV8vgA _yz_wKu-sEduH59KSHV8vgA _y0Jg4u-sEduH59KSHV8vgA _y0Jg4O-sEduH59KSHV8vgA _y0Jg5--sEduH59KSHV8vgA _y0Jg5e-sEduH59KSHV8vgA _y0Jg6--sEduH59KSHV8vgA _y0Jg6u-sEduH59KSHV8vgA _y0Jg7--sEduH59KSHV8vgA _y0Jg7u-sEduH59KSHV8vgA _y0Jg8--sEduH59KSHV8vgA _y0Jg8u-sEduH59KSHV8vgA _y0Jg9--sEduH59KSHV8vgA _y0Jg9u-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl19u-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::MethodCoreDescriptions" references="_yxw7V--sEduH59KSHV8vgA _yxw7eu-sEduH59KSHV8vgA _y1MCsu-sEduH59KSHV8vgA _y1MCt--sEduH59KSHV8vgA _y1MCvO-sEduH59KSHV8vgA _y1MCwO-sEduH59KSHV8vgA _y1MCsO-sEduH59KSHV8vgA _y1MCxu-sEduH59KSHV8vgA _y1MCy--sEduH59KSHV8vgA _y1MCxO-sEduH59KSHV8vgA _y1MC0u-sEduH59KSHV8vgA _y1MC1--sEduH59KSHV8vgA _y1MC3O-sEduH59KSHV8vgA _y1MC0O-sEduH59KSHV8vgA _y1MC4--sEduH59KSHV8vgA _y1MC6O-sEduH59KSHV8vgA _y1MC4e-sEduH59KSHV8vgA _y1MC7--sEduH59KSHV8vgA _y1MC9O-sEduH59KSHV8vgA _y1MC-e-sEduH59KSHV8vgA _y1MC7e-sEduH59KSHV8vgA _y1MDAO-sEduH59KSHV8vgA _y1MC_u-sEduH59KSHV8vgA _y1MDB--sEduH59KSHV8vgA _y1MDDO-sEduH59KSHV8vgA _y1MDEe-sEduH59KSHV8vgA _y1MDFu-sEduH59KSHV8vgA _y1MDG--sEduH59KSHV8vgA _y1MDIO-sEduH59KSHV8vgA _y1MDBe-sEduH59KSHV8vgA _y1MDJu-sEduH59KSHV8vgA _y1MDK--sEduH59KSHV8vgA _y1MDMO-sEduH59KSHV8vgA _y1MDNe-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl19--sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodLibrary::MethodUnits" references="_yxw7V--sEduH59KSHV8vgA _zDpVcO-sEduH59KSHV8vgA _zGLFAO-sEduH59KSHV8vgA _zN7S1e-sEduH59KSHV8vgA _zN7S2u-sEduH59KSHV8vgA _zN7S3u-sEduH59KSHV8vgA _zN7S4--sEduH59KSHV8vgA _zN7S6O-sEduH59KSHV8vgA _zN7S0u-sEduH59KSHV8vgA _zOEcw--sEduH59KSHV8vgA _zOEcwe-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl1-O-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::CoreContentElements" references="_yyzdFO-sEduH59KSHV8vgA _yyzdF--sEduH59KSHV8vgA _yyzdEe-sEduH59KSHV8vgA _yyzdHu-sEduH59KSHV8vgA _yyzdIe-sEduH59KSHV8vgA _yyzdJO-sEduH59KSHV8vgA _yyzdJ--sEduH59KSHV8vgA _yyzdKu-sEduH59KSHV8vgA _yyzdLe-sEduH59KSHV8vgA _yyzdGu-sEduH59KSHV8vgA _yyzdMO-sEduH59KSHV8vgA _yyzdM--sEduH59KSHV8vgA _yyzdOe-sEduH59KSHV8vgA _yyzdPO-sEduH59KSHV8vgA _yyzdNu-sEduH59KSHV8vgA _yyzdQu-sEduH59KSHV8vgA _yyzdP--sEduH59KSHV8vgA _yyzdRe-sEduH59KSHV8vgA _yyzdSO-sEduH59KSHV8vgA _yyzdT--sEduH59KSHV8vgA _yyzdUu-sEduH59KSHV8vgA _yyzdTO-sEduH59KSHV8vgA _yyzdV--sEduH59KSHV8vgA _yyzdVe-sEduH59KSHV8vgA _yyzdXO-sEduH59KSHV8vgA _yyzdWu-sEduH59KSHV8vgA _yyzdYe-sEduH59KSHV8vgA _yyzdX--sEduH59KSHV8vgA _yyzdZu-sEduH59KSHV8vgA _yyzdZO-sEduH59KSHV8vgA _yyzda--sEduH59KSHV8vgA _yyzdae-sEduH59KSHV8vgA _yy9OEu-sEduH59KSHV8vgA _yy9OEO-sEduH59KSHV8vgA _yy9OFe-sEduH59KSHV8vgA _yy9OGe-sEduH59KSHV8vgA _yy9OF--sEduH59KSHV8vgA _yy9OHu-sEduH59KSHV8vgA _yy9OHO-sEduH59KSHV8vgA _yy9OI--sEduH59KSHV8vgA _yy9OIe-sEduH59KSHV8vgA _yy9OJu-sEduH59KSHV8vgA _yy9OJO-sEduH59KSHV8vgA _yy9OKe-sEduH59KSHV8vgA _yy9OJ--sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl1-e-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::Process::ProcessTypes" references="_yz1-_--sEduH59KSHV8vgA _y2OkgO-sEduH59KSHV8vgA _y7mMsO-sEduH59KSHV8vgA _y-4KM--sEduH59KSHV8vgA _y-4KNu-sEduH59KSHV8vgA _y-4KMO-sEduH59KSHV8vgA _y-4KPO-sEduH59KSHV8vgA _y-4KOe-sEduH59KSHV8vgA _y-4KQu-sEduH59KSHV8vgA _y-4KP--sEduH59KSHV8vgA _y-4KRe-sEduH59KSHV8vgA _y-4KSe-sEduH59KSHV8vgA _y-4KTO-sEduH59KSHV8vgA _y-4KT--sEduH59KSHV8vgA _y-4KUu-sEduH59KSHV8vgA _y-4KVe-sEduH59KSHV8vgA _y-4KWO-sEduH59KSHV8vgA _y-4KW--sEduH59KSHV8vgA _y_BUIe-sEduH59KSHV8vgA _y_BUJO-sEduH59KSHV8vgA _y_BUJ--sEduH59KSHV8vgA _y_BULO-sEduH59KSHV8vgA _y_BUKu-sEduH59KSHV8vgA _y_BUMe-sEduH59KSHV8vgA _y_BUL--sEduH59KSHV8vgA _y_BUNu-sEduH59KSHV8vgA _y_BUNO-sEduH59KSHV8vgA _y_BUOe-sEduH59KSHV8vgA _y_BUN--sEduH59KSHV8vgA _y_BUPu-sEduH59KSHV8vgA _y_BUPO-sEduH59KSHV8vgA _y_BUQ--sEduH59KSHV8vgA _y_BUQe-sEduH59KSHV8vgA _y_BURu-sEduH59KSHV8vgA _y_BUSu-sEduH59KSHV8vgA _y_BUSO-sEduH59KSHV8vgA _y_BUTu-sEduH59KSHV8vgA _y_BUTe-sEduH59KSHV8vgA _y_BUU--sEduH59KSHV8vgA _y_BUUe-sEduH59KSHV8vgA _y_BUWO-sEduH59KSHV8vgA _y_BUVu-sEduH59KSHV8vgA _y_BUXe-sEduH59KSHV8vgA _y_BUW--sEduH59KSHV8vgA _y_BUYu-sEduH59KSHV8vgA _y_BUYO-sEduH59KSHV8vgA _y_BUZ--sEduH59KSHV8vgA _y_BUZe-sEduH59KSHV8vgA _y_BUbO-sEduH59KSHV8vgA _y_BUau-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTl1-u-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::Categories" references="_y2Okg--sEduH59KSHV8vgA _y2Okhu-sEduH59KSHV8vgA _y2OkgO-sEduH59KSHV8vgA _y2OkjO-sEduH59KSHV8vgA _y2Okie-sEduH59KSHV8vgA _y2Okku-sEduH59KSHV8vgA _y2Okle-sEduH59KSHV8vgA _y2Okj--sEduH59KSHV8vgA _y2Okm--sEduH59KSHV8vgA _y2OkmO-sEduH59KSHV8vgA _y2Oknu-sEduH59KSHV8vgA _y2OkpO-sEduH59KSHV8vgA _y2Okoe-sEduH59KSHV8vgA _y2Okqu-sEduH59KSHV8vgA _y2Okp--sEduH59KSHV8vgA _y2OksO-sEduH59KSHV8vgA _y2Okre-sEduH59KSHV8vgA _y2Oktu-sEduH59KSHV8vgA _y2Okue-sEduH59KSHV8vgA _y2Oks--sEduH59KSHV8vgA _y2Okvu-sEduH59KSHV8vgA _y2OkvO-sEduH59KSHV8vgA _y2Okw--sEduH59KSHV8vgA _y2Okwe-sEduH59KSHV8vgA _y2OkyO-sEduH59KSHV8vgA _y2Okxu-sEduH59KSHV8vgA _y2Oky--sEduH59KSHV8vgA _y2Okye-sEduH59KSHV8vgA _y2Ok0O-sEduH59KSHV8vgA _y2Okzu-sEduH59KSHV8vgA _y2Ok1e-sEduH59KSHV8vgA _y2Ok0--sEduH59KSHV8vgA _y2Ok2u-sEduH59KSHV8vgA _y2Ok2O-sEduH59KSHV8vgA _y2Ok3--sEduH59KSHV8vgA _y2Ok3e-sEduH59KSHV8vgA _y2Ok5O-sEduH59KSHV8vgA _y2Ok4u-sEduH59KSHV8vgA _y2Ok6e-sEduH59KSHV8vgA _y2Ok5--sEduH59KSHV8vgA _y2Ok7e-sEduH59KSHV8vgA _y2Ok7O-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_4O-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::WorkProductStates" references="_y3RtYu-sEduH59KSHV8vgA _y3RtZe-sEduH59KSHV8vgA _y3RtaO-sEduH59KSHV8vgA _y3RtYO-sEduH59KSHV8vgA _y3a3Uu-sEduH59KSHV8vgA _y3a3Ve-sEduH59KSHV8vgA _y3a3WO-sEduH59KSHV8vgA _y3a3W--sEduH59KSHV8vgA _y3a3UO-sEduH59KSHV8vgA _y3a3YO-sEduH59KSHV8vgA _y3a3Xu-sEduH59KSHV8vgA _y3a3Ze-sEduH59KSHV8vgA _y3a3aO-sEduH59KSHV8vgA _y3a3a--sEduH59KSHV8vgA _y3a3Y--sEduH59KSHV8vgA _y3a3bu-sEduH59KSHV8vgA _y3a3cO-sEduH59KSHV8vgA _y3a3e--sEduH59KSHV8vgA _y3a3fu-sEduH59KSHV8vgA _y3a3ge-sEduH59KSHV8vgA _y3a3gu-sEduH59KSHV8vgA _y3a3ee-sEduH59KSHV8vgA _y3a3hu-sEduH59KSHV8vgA _y3a3he-sEduH59KSHV8vgA _y3a3iO-sEduH59KSHV8vgA _y3a3h--sEduH59KSHV8vgA _y3a3ie-sEduH59KSHV8vgA _y3a3iu-sEduH59KSHV8vgA _y3a3i--sEduH59KSHV8vgA _y3a3jO-sEduH59KSHV8vgA _y3a3je-sEduH59KSHV8vgA _y3a3j--sEduH59KSHV8vgA _y3a3ju-sEduH59KSHV8vgA _y3a3ku-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_4e-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodCore::MethodPackage" references="_y4eANe-sEduH59KSHV8vgA _y4eAOO-sEduH59KSHV8vgA _y4eAO--sEduH59KSHV8vgA _y4eAMe-sEduH59KSHV8vgA _y4eAQe-sEduH59KSHV8vgA _y4eAPu-sEduH59KSHV8vgA _y4eARu-sEduH59KSHV8vgA _y4eARO-sEduH59KSHV8vgA _y4eAS--sEduH59KSHV8vgA _y4eASe-sEduH59KSHV8vgA _y4eAUO-sEduH59KSHV8vgA _y4eATu-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_4u-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::Process::Breakdown" references="_y7mMtO-sEduH59KSHV8vgA _y7mMsO-sEduH59KSHV8vgA _y7mMt--sEduH59KSHV8vgA _y7mMuu-sEduH59KSHV8vgA _y7mMve-sEduH59KSHV8vgA _y7mMw--sEduH59KSHV8vgA _y7mMxu-sEduH59KSHV8vgA _y7mMye-sEduH59KSHV8vgA _y7mMwO-sEduH59KSHV8vgA _y7vWoO-sEduH59KSHV8vgA _y7vWre-sEduH59KSHV8vgA _y7vWsO-sEduH59KSHV8vgA _y7vWqu-sEduH59KSHV8vgA _y7vWtu-sEduH59KSHV8vgA _y7vWuO-sEduH59KSHV8vgA _y7vWuu-sEduH59KSHV8vgA _y7vWs--sEduH59KSHV8vgA _y7vWwO-sEduH59KSHV8vgA _y7vWxe-sEduH59KSHV8vgA _y7vWyO-sEduH59KSHV8vgA _y7vWy--sEduH59KSHV8vgA _y7vWzu-sEduH59KSHV8vgA _y7vW0e-sEduH59KSHV8vgA _y7vW1O-sEduH59KSHV8vgA _y7vW1--sEduH59KSHV8vgA _y7vWvO-sEduH59KSHV8vgA _y7vW3e-sEduH59KSHV8vgA _y7vW2u-sEduH59KSHV8vgA _y7vW4u-sEduH59KSHV8vgA _y7vW5e-sEduH59KSHV8vgA _y7vW6O-sEduH59KSHV8vgA _y7vW3--sEduH59KSHV8vgA _y7vW7--sEduH59KSHV8vgA _y7vW8u-sEduH59KSHV8vgA _y7vW9e-sEduH59KSHV8vgA _y7vW-O-sEduH59KSHV8vgA _y7vW---sEduH59KSHV8vgA _y7vW_u-sEduH59KSHV8vgA _y7vXAe-sEduH59KSHV8vgA _y7vXBO-sEduH59KSHV8vgA _y7vXB--sEduH59KSHV8vgA _y7vW6--sEduH59KSHV8vgA _y7vXDe-sEduH59KSHV8vgA _y7vXEu-sEduH59KSHV8vgA _y7vXF--sEduH59KSHV8vgA _y7vXGu-sEduH59KSHV8vgA _y7vXHe-sEduH59KSHV8vgA _y7vXIO-sEduH59KSHV8vgA _y7vXCu-sEduH59KSHV8vgA _y7vXJu-sEduH59KSHV8vgA _y7vXI--sEduH59KSHV8vgA _y7vXLO-sEduH59KSHV8vgA _y7vXL--sEduH59KSHV8vgA _y7vXMu-sEduH59KSHV8vgA _y7vXNe-sEduH59KSHV8vgA _y7vXKe-sEduH59KSHV8vgA _y7vXOO-sEduH59KSHV8vgA _y7vXPe-sEduH59KSHV8vgA _y7vXO--sEduH59KSHV8vgA _y75HoO-sEduH59KSHV8vgA _y75HpO-sEduH59KSHV8vgA _y75Hou-sEduH59KSHV8vgA _y75Hqe-sEduH59KSHV8vgA _y75Hp--sEduH59KSHV8vgA _y75Hru-sEduH59KSHV8vgA _y75HrO-sEduH59KSHV8vgA _y75Hs--sEduH59KSHV8vgA _y75Hse-sEduH59KSHV8vgA _y75HuO-sEduH59KSHV8vgA _y75Htu-sEduH59KSHV8vgA _y75Hve-sEduH59KSHV8vgA _y75Hu--sEduH59KSHV8vgA _y75Hwu-sEduH59KSHV8vgA _y75HwO-sEduH59KSHV8vgA _y75Hxe-sEduH59KSHV8vgA _y75Hye-sEduH59KSHV8vgA _y75Hx--sEduH59KSHV8vgA _y75Hzu-sEduH59KSHV8vgA _y75HzO-sEduH59KSHV8vgA _y75H0--sEduH59KSHV8vgA _y75H0e-sEduH59KSHV8vgA _y75H2O-sEduH59KSHV8vgA _y75H1u-sEduH59KSHV8vgA _y75H3e-sEduH59KSHV8vgA _y75H2--sEduH59KSHV8vgA _y75H4u-sEduH59KSHV8vgA _y75H4O-sEduH59KSHV8vgA _y75H5--sEduH59KSHV8vgA _y75H5e-sEduH59KSHV8vgA _y75H6--sEduH59KSHV8vgA _y75H6u-sEduH59KSHV8vgA _y75H8O-sEduH59KSHV8vgA _y75H7u-sEduH59KSHV8vgA _y75H9e-sEduH59KSHV8vgA _y75H8--sEduH59KSHV8vgA _y75H-u-sEduH59KSHV8vgA _y75H-O-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_4--sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::MethodLibrary::LibraryConfigurations" references="_y-4KOe-sEduH59KSHV8vgA _zQdCY--sEduH59KSHV8vgA _zQdCZu-sEduH59KSHV8vgA _zQdCae-sEduH59KSHV8vgA _zQdCbO-sEduH59KSHV8vgA _zQdCb--sEduH59KSHV8vgA _zQdCcu-sEduH59KSHV8vgA _zQdCde-sEduH59KSHV8vgA _zQdCYO-sEduH59KSHV8vgA _zQdCe--sEduH59KSHV8vgA _zQdCeO-sEduH59KSHV8vgA _zQdCf--sEduH59KSHV8vgA _zQmzYO-sEduH59KSHV8vgA _zQmzaO-sEduH59KSHV8vgA _zQmza--sEduH59KSHV8vgA _zQmzY--sEduH59KSHV8vgA _zQmzcO-sEduH59KSHV8vgA _zQmzbu-sEduH59KSHV8vgA _zQmzde-sEduH59KSHV8vgA _zQmzc--sEduH59KSHV8vgA _zQmzeu-sEduH59KSHV8vgA _zQmzeO-sEduH59KSHV8vgA _zQmzf--sEduH59KSHV8vgA _zQmzfe-sEduH59KSHV8vgA _zQmzgu-sEduH59KSHV8vgA _zQmzgO-sEduH59KSHV8vgA _zQmzhe-sEduH59KSHV8vgA _zQmzg--sEduH59KSHV8vgA _zQmziu-sEduH59KSHV8vgA _zQmziO-sEduH59KSHV8vgA _zQmzju-sEduH59KSHV8vgA _zQmzje-sEduH59KSHV8vgA _zQmzku-sEduH59KSHV8vgA _zQmzke-sEduH59KSHV8vgA _zQmzl--sEduH59KSHV8vgA _zQmzle-sEduH59KSHV8vgA _zQmzm--sEduH59KSHV8vgA _zQmzmu-sEduH59KSHV8vgA _zQmzn--sEduH59KSHV8vgA _zQmznu-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_5O-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::Process::ProcessDescriptions" references="_zBZ5wu-sEduH59KSHV8vgA _zBZ5wO-sEduH59KSHV8vgA _zBZ5ye-sEduH59KSHV8vgA _zBZ5zu-sEduH59KSHV8vgA _zBZ50--sEduH59KSHV8vgA _zBZ5x--sEduH59KSHV8vgA _zBZ52u-sEduH59KSHV8vgA _zBZ53--sEduH59KSHV8vgA _zBZ55O-sEduH59KSHV8vgA _zBZ56e-sEduH59KSHV8vgA _zBZ57u-sEduH59KSHV8vgA _zBZ58--sEduH59KSHV8vgA _zBZ52O-sEduH59KSHV8vgA _zBZ5-u-sEduH59KSHV8vgA _zBZ5_--sEduH59KSHV8vgA _zBZ5-O-sEduH59KSHV8vgA _zBZ6Bu-sEduH59KSHV8vgA _zBZ6BO-sEduH59KSHV8vgA _zBZ6De-sEduH59KSHV8vgA _zBZ6C--sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_5e-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::Process::ProcessPackage" references="_zDpVde-sEduH59KSHV8vgA _zDpVeO-sEduH59KSHV8vgA _zDpVcO-sEduH59KSHV8vgA _zDpVfu-sEduH59KSHV8vgA _zDpVe--sEduH59KSHV8vgA _zDpVhO-sEduH59KSHV8vgA _zDpVh--sEduH59KSHV8vgA _zDpVge-sEduH59KSHV8vgA _zDpVje-sEduH59KSHV8vgA _zDpViu-sEduH59KSHV8vgA _zDpVku-sEduH59KSHV8vgA _zDpVkO-sEduH59KSHV8vgA _zDpVl--sEduH59KSHV8vgA _zDpVle-sEduH59KSHV8vgA _zDpVnO-sEduH59KSHV8vgA _zDpVmu-sEduH59KSHV8vgA _zDpVoe-sEduH59KSHV8vgA _zDpVn--sEduH59KSHV8vgA _zDpVpu-sEduH59KSHV8vgA _zDpVpO-sEduH59KSHV8vgA _zDpVq--sEduH59KSHV8vgA _zDpVqe-sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zTu_5u-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UnifiedMethodArchitecture::ProcessDiagrams::UMADiagrams" references="_zDpViu-sEduH59KSHV8vgA _zLitMO-sEduH59KSHV8vgA _zLitNe-sEduH59KSHV8vgA _zLitM--sEduH59KSHV8vgA"/>
      <eAnnotations xmi:id="_zT4w4O-sEduH59KSHV8vgA" source="UnifiedMethodArchitecture::UML2DiagramInterchange" references="_zJAWke-sEduH59KSHV8vgA _zJAWku-sEduH59KSHV8vgA _zJAWkO-sEduH59KSHV8vgA _zJAWle-sEduH59KSHV8vgA _zJAWlu-sEduH59KSHV8vgA _zJAWme-sEduH59KSHV8vgA _zJAWnO-sEduH59KSHV8vgA _zJAWn--sEduH59KSHV8vgA _zJAWk--sEduH59KSHV8vgA _zJAWo--sEduH59KSHV8vgA _zJAWpO-sEduH59KSHV8vgA _zJAWou-sEduH59KSHV8vgA _zJAWp--sEduH59KSHV8vgA _zJAWqe-sEduH59KSHV8vgA _zJAWrO-sEduH59KSHV8vgA _zJAWr--sEduH59KSHV8vgA _zJAWpe-sEduH59KSHV8vgA _zJAWtO-sEduH59KSHV8vgA _zJAWtu-sEduH59KSHV8vgA _zJAWsu-sEduH59KSHV8vgA _zJAWu--sEduH59KSHV8vgA _zJAWv--sEduH59KSHV8vgA _zJAWue-sEduH59KSHV8vgA _zJAWxe-sEduH59KSHV8vgA _zJAWyO-sEduH59KSHV8vgA _zJAWw--sEduH59KSHV8vgA _zJAWze-sEduH59KSHV8vgA _zJAW0O-sEduH59KSHV8vgA _zJAWy--sEduH59KSHV8vgA _zJKHku-sEduH59KSHV8vgA _zJKHk--sEduH59KSHV8vgA _zJKHlO-sEduH59KSHV8vgA _zJKHl--sEduH59KSHV8vgA _zJKHkO-sEduH59KSHV8vgA _zJKHnO-sEduH59KSHV8vgA _zJKHmu-sEduH59KSHV8vgA _zJKHn--sEduH59KSHV8vgA _zJKHou-sEduH59KSHV8vgA _zJKHo--sEduH59KSHV8vgA _zJKHpu-sEduH59KSHV8vgA _zJKHne-sEduH59KSHV8vgA _zJKHq--sEduH59KSHV8vgA _zJKHr--sEduH59KSHV8vgA _zJKHsu-sEduH59KSHV8vgA _zJKHqe-sEduH59KSHV8vgA _zJKHt--sEduH59KSHV8vgA _zJKHte-sEduH59KSHV8vgA _zJKHve-sEduH59KSHV8vgA _zJKHu--sEduH59KSHV8vgA _zJKHwu-sEduH59KSHV8vgA _zJKHwO-sEduH59KSHV8vgA _zJKHxe-sEduH59KSHV8vgA _zJKHye-sEduH59KSHV8vgA _zJKHx--sEduH59KSHV8vgA _zJKHz--sEduH59KSHV8vgA _zJKH0--sEduH59KSHV8vgA _zJKHze-sEduH59KSHV8vgA _zJKH1--sEduH59KSHV8vgA _zJKH2--sEduH59KSHV8vgA _zJKH3e-sEduH59KSHV8vgA _zJKH2e-sEduH59KSHV8vgA _zJKH4u-sEduH59KSHV8vgA _zJKH4--sEduH59KSHV8vgA _zJKH5O-sEduH59KSHV8vgA _zJKH5e-sEduH59KSHV8vgA _zJKH5u-sEduH59KSHV8vgA _zJKH5--sEduH59KSHV8vgA _zJKH4O-sEduH59KSHV8vgA _zJKH6O-sEduH59KSHV8vgA _zJKH6e-sEduH59KSHV8vgA _zJKH6--sEduH59KSHV8vgA _zJKH6u-sEduH59KSHV8vgA _zJKH7u-sEduH59KSHV8vgA _zJKH7--sEduH59KSHV8vgA _zJKH8O-sEduH59KSHV8vgA _zJKH8u-sEduH59KSHV8vgA _zJKH8e-sEduH59KSHV8vgA _zJKH9e-sEduH59KSHV8vgA _zJKH9u-sEduH59KSHV8vgA _zJTRgO-sEduH59KSHV8vgA _zJTRgu-sEduH59KSHV8vgA _zJTRge-sEduH59KSHV8vgA _zJTRhu-sEduH59KSHV8vgA _zJTRhe-sEduH59KSHV8vgA _zJTRiu-sEduH59KSHV8vgA _zJTRie-sEduH59KSHV8vgA"/>
    </eAnnotations>
    <ownedComment xmi:id="_yxUPY--sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>00</body>
    </ownedComment>
    <ownedComment xmi:id="_y1CRsO-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>06</body>
    </ownedComment>
    <ownedComment xmi:id="_y4eAMO-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>05</body>
    </ownedComment>
    <ownedComment xmi:id="_y2FakO-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>04</body>
    </ownedComment>
    <ownedComment xmi:id="_yz1-4O-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>03</body>
    </ownedComment>
    <ownedComment xmi:id="_yxw7QO-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>01</body>
    </ownedComment>
    <ownedComment xmi:id="_yyzdEO-sEduH59KSHV8vgA" annotatedElement="_J7tG0OyCEdu5-vVjlfVsfQ">
      <body>02</body>
    </ownedComment>
    <packageImport xmi:id="_J7tG1OyCEdu5-vVjlfVsfQ">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxKfCu-sEduH59KSHV8vgA" name="Classifier" isAbstract="true">
      <ownedComment xmi:id="_yxKfC--sEduH59KSHV8vgA" annotatedElement="_yxKfCu-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Classifier.</body>
      </ownedComment>
      <generalization xmi:id="_yxKfDO-sEduH59KSHV8vgA" general="_yxUPUO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxKfDe-sEduH59KSHV8vgA" name="Element" isAbstract="true">
      <ownedComment xmi:id="_yxKfDu-sEduH59KSHV8vgA" annotatedElement="_yxKfDe-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Element.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxKfD--sEduH59KSHV8vgA" name="NamedElement" isAbstract="true">
      <ownedComment xmi:id="_yxKfEO-sEduH59KSHV8vgA" annotatedElement="_yxKfD--sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Named Element.  Defined that every element has a name.</body>
      </ownedComment>
      <generalization xmi:id="_yxKfEe-sEduH59KSHV8vgA" general="_yxKfDe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxKfEu-sEduH59KSHV8vgA" name="name" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxKfE--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxKfFO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxKfFe-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxKfFu-sEduH59KSHV8vgA" name="PackageableElement" isAbstract="true">
      <ownedComment xmi:id="_yxKfF--sEduH59KSHV8vgA" annotatedElement="_yxKfFu-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Packagable Element.</body>
      </ownedComment>
      <generalization xmi:id="_yxKfGO-sEduH59KSHV8vgA" general="_yxKfD--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxUPUO-sEduH59KSHV8vgA" name="Type" isAbstract="true">
      <ownedComment xmi:id="_yxUPUe-sEduH59KSHV8vgA" annotatedElement="_yxUPUO-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Type.</body>
      </ownedComment>
      <generalization xmi:id="_yxUPUu-sEduH59KSHV8vgA" general="_yxKfFu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxUPVO-sEduH59KSHV8vgA" name="Package">
      <ownedComment xmi:id="_yxUPVe-sEduH59KSHV8vgA" annotatedElement="_yxUPVO-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Package.</body>
      </ownedComment>
      <generalization xmi:id="_yxUPVu-sEduH59KSHV8vgA" general="_yxUPWO-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_yxUPV--sEduH59KSHV8vgA" general="_yxKfFu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxUPWO-sEduH59KSHV8vgA" name="Namespace" isAbstract="true">
      <ownedComment xmi:id="_yxUPWe-sEduH59KSHV8vgA" annotatedElement="_yxUPWO-sEduH59KSHV8vgA">
        <body>UML 2.0 meta-class Namespace.</body>
      </ownedComment>
      <generalization xmi:id="_yxUPWu-sEduH59KSHV8vgA" general="_yxKfD--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPZO-sEduH59KSHV8vgA" name="Date">
      <ownedComment xmi:id="_yxUPZe-sEduH59KSHV8vgA" annotatedElement="_yxUPZO-sEduH59KSHV8vgA">
        <body>Data type used for attributes of meta-model classes of the type Date.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPZu-sEduH59KSHV8vgA" name="Uri">
      <ownedComment xmi:id="_yxUPZ--sEduH59KSHV8vgA" annotatedElement="_yxUPZu-sEduH59KSHV8vgA">
        <body>Data type used for attributes of meta-model classes that point to resources such as files.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPaO-sEduH59KSHV8vgA" name="String">
      <ownedComment xmi:id="_yxUPae-sEduH59KSHV8vgA" annotatedElement="_yxUPaO-sEduH59KSHV8vgA">
        <body>A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPau-sEduH59KSHV8vgA" name="Set"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPa--sEduH59KSHV8vgA" name="Sequence"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPbO-sEduH59KSHV8vgA" name="Integer">
      <ownedComment xmi:id="_yxUPbe-sEduH59KSHV8vgA" annotatedElement="_yxUPbO-sEduH59KSHV8vgA">
        <body>An integer is a primitive type representing integer values.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPbu-sEduH59KSHV8vgA" name="Boolean">
      <ownedComment xmi:id="_yxUPb--sEduH59KSHV8vgA" annotatedElement="_yxUPbu-sEduH59KSHV8vgA">
        <body>A Boolean type is used for logical expression, consisting of the predefined values true and false.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_yxUPcO-sEduH59KSHV8vgA" name="Double"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7cu-sEduH59KSHV8vgA" name="Constraint">
      <ownedComment xmi:id="_yxw7c--sEduH59KSHV8vgA" annotatedElement="_yxw7cu-sEduH59KSHV8vgA">
        <body>A Constraint is a Method Element that represents a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of a Method Element.</body>
      </ownedComment>
      <generalization xmi:id="_yxw7dO-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7de-sEduH59KSHV8vgA" name="body" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7du-sEduH59KSHV8vgA" annotatedElement="_yxw7de-sEduH59KSHV8vgA">
          <body>This attribute stores the definition of the constraint.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7d--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7eO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7ee-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7hu-sEduH59KSHV8vgA" name="MethodElementProperty">
      <generalization xmi:id="_yxw7h--sEduH59KSHV8vgA" general="_yxKfFu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7iO-sEduH59KSHV8vgA" name="value" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7ie-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7iu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7i--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yxw7jO-sEduH59KSHV8vgA" memberEnd="_yxw7Tu-sEduH59KSHV8vgA _yxw7ju-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yxw7je-sEduH59KSHV8vgA" annotatedElement="_yxw7jO-sEduH59KSHV8vgA">
        <body>A Method Element can own many Constraints defining rules for this element.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yxw7ju-sEduH59KSHV8vgA" name="_methodElement" visibility="public" type="_yxw7Qe-sEduH59KSHV8vgA" isUnique="false" association="_yxw7jO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yxw7j--sEduH59KSHV8vgA" memberEnd="_yxw7X--sEduH59KSHV8vgA _yxw7ke-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yxw7kO-sEduH59KSHV8vgA" annotatedElement="_yxw7j--sEduH59KSHV8vgA">
        <body>A Content Description can optionally be structure into Sections.  This association is use to decomposed Section into a hierarchy of Sections.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yxw7ke-sEduH59KSHV8vgA" name="_contentDescription" visibility="public" type="_yxw7V--sEduH59KSHV8vgA" isUnique="false" association="_yxw7j--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7ku-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7k--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yxw7lO-sEduH59KSHV8vgA" memberEnd="_yxw7b--sEduH59KSHV8vgA _yxw7lu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yxw7le-sEduH59KSHV8vgA" annotatedElement="_yxw7lO-sEduH59KSHV8vgA">
        <body>Sections can be further decomposed into n levels of sub-sections.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yxw7lu-sEduH59KSHV8vgA" name="_section" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" isUnique="false" association="_yxw7lO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7l--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7mO-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yxw7me-sEduH59KSHV8vgA" memberEnd="_yxw7m--sEduH59KSHV8vgA _yxw7g--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yxw7mu-sEduH59KSHV8vgA" annotatedElement="_yxw7me-sEduH59KSHV8vgA">
        <body>A Describable Element can contain a Content Description element that stores textual descriptions for this Content Element.  Content Description is intended to be refined with sub-classes adding more description attributes.  Any of these sub-types can be related to a Content Element.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yxw7m--sEduH59KSHV8vgA" name="_describableElement" visibility="public" type="_yxw7eu-sEduH59KSHV8vgA" isUnique="false" association="_yxw7me-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7nO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7ne-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yx6FMO-sEduH59KSHV8vgA" memberEnd="_yxw7Ue-sEduH59KSHV8vgA _yx6FMe-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_yx6FMe-sEduH59KSHV8vgA" name="_methodElement" visibility="public" type="_yxw7Qe-sEduH59KSHV8vgA" isUnique="false" association="_yx6FMO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdEe-sEduH59KSHV8vgA" name="Role">
      <ownedComment xmi:id="_yyzdEu-sEduH59KSHV8vgA" annotatedElement="_yyzdEe-sEduH59KSHV8vgA">
        <body>A Role is a content element that defines a set of related skills, competencies, and responsibilities.  Roles are used by Tasks to define who performs them as well as define a set of work products they are responsible for.  
A Role defines a set of related skills, competencies, and responsibilities of an individual or a set of individuals.  Roles are not individuals or resources.  Individual members of the development organization will wear different hats, or perform different roles. The mapping from individual to role, performed by the project manager when planning and staffing for a project, allows different individuals to act as several different roles, and for a role to be played by several individuals.
</body>
      </ownedComment>
      <generalization xmi:id="_yyzdE--sEduH59KSHV8vgA" general="_yxw7VO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yyzdFO-sEduH59KSHV8vgA" name="modifies" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" isDerived="true" association="_yyzdZO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdFe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdFu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdF--sEduH59KSHV8vgA" name="responsibleFor" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_yyzdae-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdGO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdGe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdM--sEduH59KSHV8vgA" name="Guidance" isAbstract="true">
      <ownedComment xmi:id="_yyzdNO-sEduH59KSHV8vgA" annotatedElement="_yyzdM--sEduH59KSHV8vgA">
        <body>Guidance is an abstract generalization of additional information related to content elements such as Roles, Tasks, and Work Products.  Examples for Guidance are Guidelines, Templates, Checklists, Tool Mentors, Estimates, Supporting Materials, Reports, Concepts, etc.  This package only contains the definition of the abstract Guidance class.  The package Guidance Types defines concrete guidance types.</body>
      </ownedComment>
      <generalization xmi:id="_yyzdNe-sEduH59KSHV8vgA" general="_yxw7VO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdNu-sEduH59KSHV8vgA" name="Artifact">
      <ownedComment xmi:id="_yyzdN--sEduH59KSHV8vgA" annotatedElement="_yyzdNu-sEduH59KSHV8vgA">
        <body>Artifact is a Work Product that provides a description and definition for tangible work product types. Artifacts may be composed of other artifacts. For example, a model artifact can be composed of model elements, which are also artifacts.
Artifacts are tangible work products consumed, produced, or modified by Tasks.  It may serve as a basis for defining reusable assets.  Roles use Artifacts to perform Tasks and produce Artifacts in the course of performing Tasks.  Artifacts are the responsibility of a single Role, making responsibility easy to identify and understand, and promoting the idea that every piece of information produced in the method requires the appropriate set of skills. Even though one role might &quot;own&quot; a specific type of Artifacts, other roles can still use the Artifacts; perhaps even update them if the Role has been given permission to do so.
</body>
      </ownedComment>
      <generalization xmi:id="_yyzdOO-sEduH59KSHV8vgA" general="_yyzdMO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yyzdOe-sEduH59KSHV8vgA" name="containerArtifact" visibility="public" type="_yyzdNu-sEduH59KSHV8vgA" association="_yy9OFe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdOu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdO--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdPO-sEduH59KSHV8vgA" name="containedArtifacts" visibility="public" type="_yyzdNu-sEduH59KSHV8vgA" aggregation="composite" association="_yy9OFe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdPe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdPu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdP--sEduH59KSHV8vgA" name="Deliverable">
      <ownedComment xmi:id="_yyzdQO-sEduH59KSHV8vgA" annotatedElement="_yyzdP--sEduH59KSHV8vgA">
        <body>A deliverable is a Work Product that provides a description and definition for packaging other Work Products, and may be delivered to an internal or external party.  Therefore, a Deliverable aggregates other Work Products. Therefore, a Deliverable aggregates other Work Products.  A Deliverable is used to pre-define typical or recommended content in the form or work products that would be packaged for delivery.  The actual packaging of the Deliverable in an actual process or even project could be a modification of this recommendation.  Deliverables are used to represent an output from a process that has value, material or otherwise, to a client, customer or other stakeholder. </body>
      </ownedComment>
      <generalization xmi:id="_yyzdQe-sEduH59KSHV8vgA" general="_yyzdMO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yyzdQu-sEduH59KSHV8vgA" name="deliveredWorkProducts" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_yy9OF--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdQ--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdRO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdRe-sEduH59KSHV8vgA" name="Outcome">
      <ownedComment xmi:id="_yyzdRu-sEduH59KSHV8vgA" annotatedElement="_yyzdRe-sEduH59KSHV8vgA">
        <body>An outcome describes intangible work products that are a result or state. Outcomes may also be used to describe work products that are not formally defined.  A key differentiator for outcomes against artifacts is that outcomes are not candidates for harvesting as reusable assets.</body>
      </ownedComment>
      <generalization xmi:id="_yyzdR--sEduH59KSHV8vgA" general="_yyzdMO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdSO-sEduH59KSHV8vgA" name="Step">
      <ownedComment xmi:id="_yyzdSe-sEduH59KSHV8vgA" annotatedElement="_yyzdSO-sEduH59KSHV8vgA">
        <body>A Step is a Section and Work Definition that is used to organize Tasks into parts or subunits of work.  Steps inherit the subSections decomposition from Section and can therefore describe Sub-Steps nested into Steps.
A Step describes a meaningful and consist part of the overall work described for a Task.  The collection of Steps defined for a Task represents all the work that should be done to achieve the overall development goal of the Task.  Not all steps are necessarily performed each time a Task is invoked in a Process (see Task Descriptor), so they can also be expressed in the form of alternate 'flows' of work.  Different ways of achieving the same development goal can then be 'assembled' by selecting different combinations of steps when applying the Task in a Process.  Typical kinds of steps a Task author should consider are: Thinking steps: where the individual roles understand the nature of the task, gathers and examines the input artifacts, and formulates the outcome. Performing steps: where the individual roles create or update some artifacts. Reviewing steps: where the individual roles inspects the results against some criteria.
</body>
      </ownedComment>
      <generalization xmi:id="_yyzdSu-sEduH59KSHV8vgA" general="_yxw7Yu-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_yyzdS--sEduH59KSHV8vgA" general="_yyzdTO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdTO-sEduH59KSHV8vgA" name="WorkDefinition" isAbstract="true">
      <ownedComment xmi:id="_yyzdTe-sEduH59KSHV8vgA" annotatedElement="_yyzdTO-sEduH59KSHV8vgA">
        <body>Work Definition is an abstract Method Element that generalizes all descriptions of work within the Unified Method Architecture.  This package introduces two concrete types of Work Definitions: Task and Step.  Work Definitions can contain sets of pre- and post-conditions defining constraints that need to be valid before the described work can begin or before it can be declared as finished.  Note that general ownedRules can be used to define additional constraints and rules for Work Definitions.
Work Definitions represent behavioral descriptions for doing work.  These behavioral descriptions are not bound to one specific classifier, but represent an arbitrary definition of work.  For example, a Work Definition could represent work that is being performed by a specific Role (e.g. a Role performing a specific Task or Steps of a Task), by many Roles working in close collaboration (many Roles all working together on the same interdisciplinary Task), or complex work that is performed throughout the lifecycle (e.g. a process defining a breakdown structure for organizing larger composite units of work performed by many Roles working in collaboration).
</body>
      </ownedComment>
      <generalization xmi:id="_yyzdTu-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yyzdT--sEduH59KSHV8vgA" name="precondition" visibility="public" type="_yxw7cu-sEduH59KSHV8vgA" aggregation="composite" association="_yy9OJO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdUO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdUe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdUu-sEduH59KSHV8vgA" name="postcondition" visibility="public" type="_yxw7cu-sEduH59KSHV8vgA" aggregation="composite" association="_yy9OJ--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdU--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdVO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yyzdVe-sEduH59KSHV8vgA" name="Default_PrimaryPerformer" memberEnd="_yyzdHu-sEduH59KSHV8vgA _yyzdV--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yyzdVu-sEduH59KSHV8vgA" annotatedElement="_yyzdVe-sEduH59KSHV8vgA">
        <body>Roles can be defined to perform many Tasks, but every Task may have only one Role that is by default the primary performer of this Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yyzdV--sEduH59KSHV8vgA" name="performs" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_yyzdVe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdWO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdWe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yyzdWu-sEduH59KSHV8vgA" name="Default_MandatoryInputs" memberEnd="_yyzdXO-sEduH59KSHV8vgA _yyzdIe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yyzdW--sEduH59KSHV8vgA" annotatedElement="_yyzdWu-sEduH59KSHV8vgA">
        <body>This association provides links to zero or many definitions of Work Products that are defined as mandatory inputs for performing this Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yyzdXO-sEduH59KSHV8vgA" name="mandatoryInputTo" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_yyzdWu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdXe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdXu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yyzdX--sEduH59KSHV8vgA" name="Default_Outputs" memberEnd="_yyzdYe-sEduH59KSHV8vgA _yyzdJO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yyzdYO-sEduH59KSHV8vgA" annotatedElement="_yyzdX--sEduH59KSHV8vgA">
        <body>This association provides links to zero or many definitions of Work Products that are defined as outputs of this Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yyzdYe-sEduH59KSHV8vgA" name="outputFrom" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_yyzdX--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdYu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdY--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yyzdZO-sEduH59KSHV8vgA" name="Default_Modifies" memberEnd="_yyzdZu-sEduH59KSHV8vgA _yyzdFO-sEduH59KSHV8vgA" isDerived="true">
      <ownedComment xmi:id="_yyzdZe-sEduH59KSHV8vgA" annotatedElement="_yyzdZO-sEduH59KSHV8vgA">
        <body>This association is derived from the fact that Roles perform Tasks that have Work Products of that particular type as outputs.  /modifies provides all the types of Work Products that the Role produces or modifies via one of the Tasks defined to be performed by the Role, either as primary or additional performer.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yyzdZu-sEduH59KSHV8vgA" name="modifiedBy" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" isDerived="true" association="_yyzdZO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdZ--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdaO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yyzdae-sEduH59KSHV8vgA" name="Default_Responsible" memberEnd="_yyzda--sEduH59KSHV8vgA _yyzdF--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yyzdau-sEduH59KSHV8vgA" annotatedElement="_yyzdae-sEduH59KSHV8vgA">
        <body>Responsibility for a work product indicates the role's ownership of all instances of this work product type.  For example, the role responsible for a work product answers to management about its quality state.  Being responsible for the work product does not mean that the role is the only one modifying it, but makes ultimate decisions about accepting or rejecting these modifications when reviewing these modifications.  Every work product has none or one role responsible role. </body>
      </ownedComment>
      <ownedEnd xmi:id="_yyzda--sEduH59KSHV8vgA" name="responsibleRole" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_yyzdae-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdbO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdbe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OEO-sEduH59KSHV8vgA" name="Default_AdditionalPerformer" memberEnd="_yy9OEu-sEduH59KSHV8vgA _yyzdJ--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OEe-sEduH59KSHV8vgA" annotatedElement="_yy9OEO-sEduH59KSHV8vgA">
        <body>This association defines additional roles that by default can be assigned to help completing a Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OEu-sEduH59KSHV8vgA" name="helpsPerforming" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_yy9OEO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy9OE--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yy9OFO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OFe-sEduH59KSHV8vgA" name="Composition" memberEnd="_yyzdOe-sEduH59KSHV8vgA _yyzdPO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OFu-sEduH59KSHV8vgA" annotatedElement="_yy9OFe-sEduH59KSHV8vgA">
        <body>Artifact types can be defined to be physically composed of other artifacts.  For example, a use case model is composed of use cases and actors.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OF--sEduH59KSHV8vgA" name="DefaultDeliveredWP" memberEnd="_yy9OGe-sEduH59KSHV8vgA _yyzdQu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OGO-sEduH59KSHV8vgA" annotatedElement="_yy9OF--sEduH59KSHV8vgA">
        <body>This association defines the default parts of a deliverable, i.e. the types of work products a Deliverable comprises of.  This aggregation can be overridden in a Process.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OGe-sEduH59KSHV8vgA" name="_deliverable" visibility="private" type="_yyzdP--sEduH59KSHV8vgA" isUnique="false" association="_yy9OF--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy9OGu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yy9OG--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OHO-sEduH59KSHV8vgA" name="Default_OptionalInputs" memberEnd="_yyzdKu-sEduH59KSHV8vgA _yy9OHu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OHe-sEduH59KSHV8vgA" annotatedElement="_yy9OHO-sEduH59KSHV8vgA">
        <body>This association provides links to zero or many definitions of Work Products that are defined as optional inputs for performing this Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OHu-sEduH59KSHV8vgA" name="optionalInputTo" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_yy9OHO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yy9OH--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yy9OIO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OIe-sEduH59KSHV8vgA" memberEnd="_yyzdLe-sEduH59KSHV8vgA _yy9OI--sEduH59KSHV8vgA" isDerived="true">
      <ownedComment xmi:id="_yy9OIu-sEduH59KSHV8vgA" annotatedElement="_yy9OIe-sEduH59KSHV8vgA">
        <body>This derived association is a shortcut for navigation along the association properties ContentElement.presentation.sections.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OI--sEduH59KSHV8vgA" name="_task" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" isUnique="false" association="_yy9OIe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OJO-sEduH59KSHV8vgA" memberEnd="_yyzdT--sEduH59KSHV8vgA _yy9OJu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OJe-sEduH59KSHV8vgA" annotatedElement="_yy9OJO-sEduH59KSHV8vgA">
        <body>This composition association adds an optional pre-condition to a Work Definition.  A pre-condition defines any kind of constraint that must evaluate to true before the work described for the Work Definition can start. For example, a pre-condition for a Task could define that an input Work Product needs to be in a specific state or that other related work must be in a certain state (e.g. 'Input document X has been reviewed and signed by customer AND Task &quot;Management Review&quot; is complete') before the Task can begin.
</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OJu-sEduH59KSHV8vgA" name="_workDefinition" visibility="public" type="_yyzdTO-sEduH59KSHV8vgA" isUnique="false" association="_yy9OJO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yy9OJ--sEduH59KSHV8vgA" memberEnd="_yyzdUu-sEduH59KSHV8vgA _yy9OKe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yy9OKO-sEduH59KSHV8vgA" annotatedElement="_yy9OJ--sEduH59KSHV8vgA">
        <body>This composition association adds an optional post-condition to a Work Definition.  A post-condition defines any kind of constraint that must evaluate to true before the work described for the Work Definition can be declared completed or finished and which other Work Definitions might depend upon (e.g. for their pre-conditions).  For example, a post-condition for a Task could define that a work product defined to be the output must be in a specific state before the Task can end (e.g. 'Use Case must be in state fully described and reviewed by System Analyst').</body>
      </ownedComment>
      <ownedEnd xmi:id="_yy9OKe-sEduH59KSHV8vgA" name="_workDefinition" visibility="public" type="_yyzdTO-sEduH59KSHV8vgA" isUnique="false" association="_yy9OJ--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-4e-sEduH59KSHV8vgA" name="Concept">
      <ownedComment xmi:id="_yz1-4u-sEduH59KSHV8vgA" annotatedElement="_yz1-4e-sEduH59KSHV8vgA">
        <body>A Concept is a specific type of guidance that outlines key ideas associated with basic principles underlying the referenced item. Concepts normally address more general topics than Guidelines and span across sev-eral work product and/or tasks/activities.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-4--sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-5O-sEduH59KSHV8vgA" name="Checklist">
      <ownedComment xmi:id="_yz1-5e-sEduH59KSHV8vgA" annotatedElement="_yz1-5O-sEduH59KSHV8vgA">
        <body>A Checklist is a specific type of guidance that identifies a series of items that need to be completed or veri-fied.  Checklists are often used in reviews such as walkthroughs or inspections. </body>
      </ownedComment>
      <generalization xmi:id="_yz1-5u-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-5--sEduH59KSHV8vgA" name="Example">
      <ownedComment xmi:id="_yz1-6O-sEduH59KSHV8vgA" annotatedElement="_yz1-5--sEduH59KSHV8vgA">
        <body>An Example is a specific type of Guidance that represents a typical, partially completed, sample instance of one or more work products or scenario like descriptions of how Task may be performed. Examples can be related to Work Products as well as Tasks that produce them as well as any other Content Element.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-6e-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-6u-sEduH59KSHV8vgA" name="Guideline">
      <ownedComment xmi:id="_yz1-6--sEduH59KSHV8vgA" annotatedElement="_yz1-6u-sEduH59KSHV8vgA">
        <body>A Guideline is a specific type of guidance that provides additional detail on how to perform a particular task or grouping of tasks (e.g. grouped together as activities) or that provides additional detail, rules, and recommendations on work products and their properties.  Amongst others, it can include details about best practices and different approaches for doing work, how to use particular types of work products, information on different subtypes and variants of the work product and how they evolve throughout a lifecycle, discussions on skills the performing roles should acquire or improve upon, measurements for progress and maturity, etc.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-7O-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-7e-sEduH59KSHV8vgA" name="Report">
      <ownedComment xmi:id="_yz1-7u-sEduH59KSHV8vgA" annotatedElement="_yz1-7e-sEduH59KSHV8vgA">
        <body>A Report is a predefined template of a result that is generated on the basis of other work products as an output from some form of tool automation. An example for a report would be a use case model survey, which is generated by extracting diagram information from a graphical model and textual information from documents and combines these two types of information into a report.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-7--sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-8O-sEduH59KSHV8vgA" name="Template">
      <ownedComment xmi:id="_yz1-8e-sEduH59KSHV8vgA" annotatedElement="_yz1-8O-sEduH59KSHV8vgA">
        <body>A Template is a specific type of guidance that provides for a work product a pre-defined table of contents, sections, packages, and/or headings, a standardized format, as well as descriptions how the sections and packages are supposed to be used and completed. Templates cannot only be provided for documents, but also for conceptual models or physical data stores.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-8u-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-8--sEduH59KSHV8vgA" name="SupportingMaterial">
      <ownedComment xmi:id="_yz1-9O-sEduH59KSHV8vgA" annotatedElement="_yz1-8--sEduH59KSHV8vgA">
        <body>Supporting Materials is catchall for other types of guidance not specifically defined elsewhere. It can be related to all kinds of Content Elements, i.e. including other guidance elements.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-9e-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-9u-sEduH59KSHV8vgA" name="ToolMentor">
      <ownedComment xmi:id="_yz1-9--sEduH59KSHV8vgA" annotatedElement="_yz1-9u-sEduH59KSHV8vgA">
        <body>A Tool Mentor is a specific type of guidance that shows how to use a specific tool to accomplish some piece of work a Work Product either in the context of or independent from a Task or Activity.</body>
      </ownedComment>
      <generalization xmi:id="_yz1--O-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1--e-sEduH59KSHV8vgA" name="Whitepaper">
      <ownedComment xmi:id="_yz1--u-sEduH59KSHV8vgA" annotatedElement="_yz1--e-sEduH59KSHV8vgA">
        <body>Whitepapers are a special Concept guidance that have been externally reviewed or published and can be read and understood in isolation of other content elements and guidance.</body>
      </ownedComment>
      <generalization xmi:id="_yz1----sEduH59KSHV8vgA" general="_yz1-4e-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-_O-sEduH59KSHV8vgA" name="TermDefinition">
      <ownedComment xmi:id="_yz1-_e-sEduH59KSHV8vgA" annotatedElement="_yz1-_O-sEduH59KSHV8vgA">
        <body>TermDefinitions define concepts and are used to build up the Glossary. They are not directly related to ContentElements, but their relationship is being derived when the Term is used in the ContentElements description text.</body>
      </ownedComment>
      <generalization xmi:id="_yz1-_u-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdMO-sEduH59KSHV8vgA" name="WorkProduct" isAbstract="true">
      <ownedComment xmi:id="_yyzdMe-sEduH59KSHV8vgA" annotatedElement="_yyzdMO-sEduH59KSHV8vgA">
        <body>Work Product is an abstract class which provides a generalization for the content element types Artifact, Outcome, and Deliverable.  The meta-model class Work Product actually represents work product types, i.e. an instance of Work Product is a description of a specific type of work product and not an individual work product instance.  However, for simplicity reasons and because of low risk of misinterpretation we did not append the word 'type' to every meta-class.
A work product is an abstraction for descriptions of content elements that are used to define anything used, produced, or modified by a task.
</body>
      </ownedComment>
      <ownedComment xmi:id="_yz1_CO-sEduH59KSHV8vgA" annotatedElement="_yyzdMO-sEduH59KSHV8vgA">
        <body>This is the Guidance Types package's extension of Work Product (defined in Content Elements) providing additonal associations.</body>
      </ownedComment>
      <generalization xmi:id="_yyzdMu-sEduH59KSHV8vgA" general="_yxw7VO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yz1_Ce-sEduH59KSHV8vgA" name="reports" visibility="public" type="_yz1-7e-sEduH59KSHV8vgA" association="_yz_wFu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_Cu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_C--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz1_DO-sEduH59KSHV8vgA" name="templates" visibility="public" type="_yz1-8O-sEduH59KSHV8vgA" association="_yz_wIO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_De-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_Du-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz1_D--sEduH59KSHV8vgA" name="toolMentors" visibility="public" type="_yz1-9u-sEduH59KSHV8vgA" association="_y0Jg6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_EO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_Ee-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz1_Eu-sEduH59KSHV8vgA" name="estimationConsiderations" visibility="public" type="_yz_v_--sEduH59KSHV8vgA" association="_y0Jg8u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_E--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_FO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yyzdGu-sEduH59KSHV8vgA" name="Task">
      <ownedComment xmi:id="_yyzdG--sEduH59KSHV8vgA" annotatedElement="_yyzdGu-sEduH59KSHV8vgA">
        <body>A Task is a content element that describes work being performed by Roles.  It defines one default performing Role as well as many additional performers.  A Task is associated to input and output work products.  Inputs are differentiated in mandatory versus optional inputs.  The associations to Work Products are not instantiatable/variable-like parameters.  They rather express (hyper-)links to the descriptions of the work products types that are related to the Task as inputs and outputs.  In other words, these associations are not intended to be used to capture which concrete instances will be passed when instantiating the method in a project.  All of the Task's default associations can be overridden in an actual process definition.
A Task describes an assignable unit of work.  Every Task is assigned to specific Roles.  The granularity of a Task is generally a few hours to a few days.  It usually affects one or only a small number of work products. A Task is used as an element of defining a process. Tasks are further used for planning and tracking progress; therefore, if they are defined too fine-grained, they will be neglected, and if they are too large, progress would have to be expressed in terms of a Task's parts (e.g. Steps, which is not recommended). 
A Task has a clear purpose in which the performing roles achieve a well defined goal.  It provides complete step-by-step explanations of doing all the work that needs to be done to achieve this goal.  This description is complete, independent of when in a process lifecycle the work would actually be done.  It therefore does not describe when you do what work at what point of time, but describes all the work that gets done throughout the development lifecycle that contributes to the achievement of this goal.  When the Task is being applied in a process then this process application (defined as Task Descriptor) provides the information of which pieces of the Task will actually be performed at any particular point in time. This assumes that the Task will be performed in the process over and over again, but each time with a slightly different emphasis on different steps or aspects of the task description. 
For example, a Task such as &quot;Develop Use Case Model&quot; describes all the work that needs to be done to develop a complete use case model. This would comprise of the identification and naming of use cases and actors, the writing of a brief description, the modeling of use cases and their relationships in diagrams, the detailed description of a basic flow, the detailed description of alternatives flows, performing of walkthroughs workshops and reviews, etc.  All of these parts contribute to the development goal of developing the use case model, but the parts will be performed at different points in time in a process.  Identification, naming, and brief descriptions would be performed early in a typical development process versus the writing of detailed alternative flows which would be performed much later.  All these parts or steps within the same Task define the &quot;method&quot; of Developing a Use Case Model.  Applying such a method in a lifecycle (i.e. in a process) is defining which steps are done when going from one iteration to the next.
</body>
      </ownedComment>
      <ownedComment xmi:id="_yz1_Fe-sEduH59KSHV8vgA" annotatedElement="_yyzdGu-sEduH59KSHV8vgA">
        <body>This is the Guidance Types package's extension of Task (defined in Content Elements) providing additional associations.</body>
      </ownedComment>
      <generalization xmi:id="_yyzdHO-sEduH59KSHV8vgA" general="_yxw7VO-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_yyzdHe-sEduH59KSHV8vgA" general="_yyzdTO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yyzdHu-sEduH59KSHV8vgA" name="performedBy" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_yyzdVe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdH--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdIO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdIe-sEduH59KSHV8vgA" name="mandatoryInput" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_yyzdWu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdIu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdI--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdJO-sEduH59KSHV8vgA" name="output" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_yyzdX--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdJe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdJu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdJ--sEduH59KSHV8vgA" name="additionallyPerformedBy" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_yy9OEO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdKO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdKe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdKu-sEduH59KSHV8vgA" name="optionalInput" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_yy9OHO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdK--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdLO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yyzdLe-sEduH59KSHV8vgA" name="steps" visibility="public" type="_yyzdSO-sEduH59KSHV8vgA" isDerived="true" aggregation="composite" association="_yy9OIe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yyzdLu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yyzdL--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v4O-sEduH59KSHV8vgA" name="toolMentors" visibility="public" type="_yz1-9u-sEduH59KSHV8vgA" association="_yz_wJe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v4e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v4u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v4--sEduH59KSHV8vgA" name="estimationConsiderations" visibility="public" type="_yz_v_--sEduH59KSHV8vgA" association="_y0Jg7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v5O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v5e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz_v_O-sEduH59KSHV8vgA" name="ReusableAsset">
      <ownedComment xmi:id="_yz_v_e-sEduH59KSHV8vgA" annotatedElement="_yz_v_O-sEduH59KSHV8vgA">
        <body>A Reusable Asset provides a solution to a problem for a given context. The asset may have a variability point, which is a location in the asset that may have a value provided or customized by the asset consumer. The asset has rules for usage which are the instructions describing
how the asset should be used.
</body>
      </ownedComment>
      <generalization xmi:id="_yz_v_u-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz_v_--sEduH59KSHV8vgA" name="EstimationConsiderations">
      <ownedComment xmi:id="_yz_wAO-sEduH59KSHV8vgA" annotatedElement="_yz_v_--sEduH59KSHV8vgA">
        <body>Estimation Considerations qualify the usage and application of estimation metrics in the development of an actual estimate.</body>
      </ownedComment>
      <generalization xmi:id="_yz_wAe-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wAu-sEduH59KSHV8vgA" memberEnd="_yz_wBO-sEduH59KSHV8vgA _yz_v5--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wA--sEduH59KSHV8vgA" annotatedElement="_yz_wAu-sEduH59KSHV8vgA">
        <body>Content Elements can be related to any number of Supporting Material guidance elements.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wBO-sEduH59KSHV8vgA" name="_contentElement" visibility="private" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wAu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wBe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wBu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wB--sEduH59KSHV8vgA" memberEnd="_yz_wCe-sEduH59KSHV8vgA _yz_v6u-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wCO-sEduH59KSHV8vgA" annotatedElement="_yz_wB--sEduH59KSHV8vgA">
        <body>Content Elements can refer to any number of Concept guidance. </body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wCe-sEduH59KSHV8vgA" name="_contentElement" visibility="private" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wB--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wCu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wC--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wDO-sEduH59KSHV8vgA" memberEnd="_yz_wDu-sEduH59KSHV8vgA _yz_v7e-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wDe-sEduH59KSHV8vgA" annotatedElement="_yz_wDO-sEduH59KSHV8vgA">
        <body>Provides check points related to a particular content elements.  These are typically used in reviews and inspections on work products.

</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wDu-sEduH59KSHV8vgA" name="_contentElement" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wDO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wD--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wEO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wEe-sEduH59KSHV8vgA" memberEnd="_yz_wE--sEduH59KSHV8vgA _yz_v8O-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wEu-sEduH59KSHV8vgA" annotatedElement="_yz_wEe-sEduH59KSHV8vgA">
        <body>This association provides access to detailed Guidelines related to this Content Element.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wE--sEduH59KSHV8vgA" name="_contentElement" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wEe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wFO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wFe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wFu-sEduH59KSHV8vgA" memberEnd="_yz_wGO-sEduH59KSHV8vgA _yz1_Ce-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wF--sEduH59KSHV8vgA" annotatedElement="_yz_wFu-sEduH59KSHV8vgA">
        <body>A Report extracts information about one or more Work Product; normally directly from a tool that maintains the Work Products. For example, a Report can present details of an Artifact or a set of Artifacts for use in a technical review. </body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wGO-sEduH59KSHV8vgA" name="_workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wFu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wGe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wGu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wG--sEduH59KSHV8vgA" memberEnd="_yz_wHe-sEduH59KSHV8vgA _yz_v8--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wHO-sEduH59KSHV8vgA" annotatedElement="_yz_wG--sEduH59KSHV8vgA">
        <body>Provides a sample of what the work product may look like, an actual instance.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wHe-sEduH59KSHV8vgA" name="_contentElement" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wG--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wHu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wH--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wIO-sEduH59KSHV8vgA" memberEnd="_yz_wIu-sEduH59KSHV8vgA _yz1_DO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wIe-sEduH59KSHV8vgA" annotatedElement="_yz_wIO-sEduH59KSHV8vgA">
        <body>Provides detailed guidance on how to produce the work product independent of a specific set of tasks or WBS.  May contain specific algorithms or alternative development approaches.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wIu-sEduH59KSHV8vgA" name="_workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" isUnique="false" association="_yz_wIO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wI--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wJO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wJe-sEduH59KSHV8vgA" memberEnd="_yz_wJ--sEduH59KSHV8vgA _yz_v4O-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wJu-sEduH59KSHV8vgA" annotatedElement="_yz_wJe-sEduH59KSHV8vgA">
        <body>Links Tasks with Tool Mentors which are a specific type of guidance that show how to use a specific tool to perform the Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wJ--sEduH59KSHV8vgA" name="_task" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" isUnique="false" association="_yz_wJe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_wKO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_wKe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_yz_wKu-sEduH59KSHV8vgA" memberEnd="_yz1_Au-sEduH59KSHV8vgA _yz_wLO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_yz_wK--sEduH59KSHV8vgA" annotatedElement="_yz_wKu-sEduH59KSHV8vgA">
        <body>A Practice can be composed of other Practices.</body>
      </ownedComment>
      <ownedEnd xmi:id="_yz_wLO-sEduH59KSHV8vgA" name="_practice" visibility="public" type="_yz1-_--sEduH59KSHV8vgA" isUnique="false" association="_yz_wKu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg4O-sEduH59KSHV8vgA" memberEnd="_yz1_Be-sEduH59KSHV8vgA _y0Jg4u-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y0Jg4e-sEduH59KSHV8vgA" annotatedElement="_y0Jg4O-sEduH59KSHV8vgA">
        <body>A Practice can reference any Content Element.  The association expresses that this Content Element is part of or belongs to this Practice.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y0Jg4u-sEduH59KSHV8vgA" name="_practice" visibility="public" type="_yz1-_--sEduH59KSHV8vgA" isUnique="false" association="_y0Jg4O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg4--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg5O-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg5e-sEduH59KSHV8vgA" memberEnd="_yz_v9u-sEduH59KSHV8vgA _y0Jg5--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y0Jg5u-sEduH59KSHV8vgA" annotatedElement="_y0Jg5e-sEduH59KSHV8vgA">
        <body>A work product is related to one or more assets to </body>
      </ownedComment>
      <ownedEnd xmi:id="_y0Jg5--sEduH59KSHV8vgA" name="_contentElement" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" isUnique="false" association="_y0Jg5e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg6O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg6e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg6u-sEduH59KSHV8vgA" memberEnd="_yz1_D--sEduH59KSHV8vgA _y0Jg6--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y0Jg6--sEduH59KSHV8vgA" name="_workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" isUnique="false" association="_y0Jg6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg7O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg7e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg7u-sEduH59KSHV8vgA" memberEnd="_y0Jg7--sEduH59KSHV8vgA _yz_v4--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y0Jg7--sEduH59KSHV8vgA" name="_task" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" isUnique="false" association="_y0Jg7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg8O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg8e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg8u-sEduH59KSHV8vgA" memberEnd="_y0Jg8--sEduH59KSHV8vgA _yz1_Eu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y0Jg8--sEduH59KSHV8vgA" name="_workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" isUnique="false" association="_y0Jg8u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg9O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg9e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y0Jg9u-sEduH59KSHV8vgA" memberEnd="_yz_v-e-sEduH59KSHV8vgA _y0Jg9--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y0Jg9--sEduH59KSHV8vgA" name="" visibility="private" type="_yxw7VO-sEduH59KSHV8vgA" association="_y0Jg9u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y0Jg-O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0Jg-e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MCsO-sEduH59KSHV8vgA" name="ArtifactDescription">
      <generalization xmi:id="_y1MCse-sEduH59KSHV8vgA" general="_y1MC7e-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MCsu-sEduH59KSHV8vgA" name="briefOutline" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MCs--sEduH59KSHV8vgA" annotatedElement="_y1MCsu-sEduH59KSHV8vgA">
          <body>Provides a brief description of the information that can be found in this artifact. For example, discusses the contents for key chapters of a document artifact or the key packages and modules of a model artifact.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCtO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCte-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCtu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MCt--sEduH59KSHV8vgA" name="representationOptions" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MCuO-sEduH59KSHV8vgA" annotatedElement="_y1MCt--sEduH59KSHV8vgA">
          <body>Discusses different possible alternative representations for the artifact. For example a design model can be represented as a UML model or an informal block diagram or by textual description only.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCue-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCuu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCu--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MCvO-sEduH59KSHV8vgA" name="representation" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCve-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCvu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCv--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MCwO-sEduH59KSHV8vgA" name="notation" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCwe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCwu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCw--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MCxO-sEduH59KSHV8vgA" name="DeliverableDescription">
      <generalization xmi:id="_y1MCxe-sEduH59KSHV8vgA" general="_y1MC7e-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MCxu-sEduH59KSHV8vgA" name="externalDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MCx--sEduH59KSHV8vgA" annotatedElement="_y1MCxu-sEduH59KSHV8vgA">
          <body>The description of the Deliverable used for client documents (proposal, statements of work or contractual agreements).  It might use a different language and follow legal constraints.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCyO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCye-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCyu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MCy--sEduH59KSHV8vgA" name="packagingGuidance" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MCzO-sEduH59KSHV8vgA" annotatedElement="_y1MCy--sEduH59KSHV8vgA">
          <body>Provides guidance on how to assemble the deliverable from all its required inputs.  This section describes the most common content medium and format.  Distribution of the deliverable is addressed in this section, if necessary.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MCze-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MCzu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MCz--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MC0O-sEduH59KSHV8vgA" name="RoleDescription">
      <generalization xmi:id="_y1MC0e-sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MC0u-sEduH59KSHV8vgA" name="skills" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC0--sEduH59KSHV8vgA" annotatedElement="_y1MC0u-sEduH59KSHV8vgA">
          <body>Lists of set of required skills a person needs to possess to fulfill that Role.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC1O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC1e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC1u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MC1--sEduH59KSHV8vgA" name="assignmentApproaches" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC2O-sEduH59KSHV8vgA" annotatedElement="_y1MC1--sEduH59KSHV8vgA">
          <body>Provides guidance on for assigning individuals to the Role in terms of what other roles these individuals could perform and what responsibility different individuals assigned to this role might have.  The guidance can also describe different assignment approaches for different types of projects, e.g. for large versus small teams where individuals could be allocated to roles full time versus sharing roles within the team.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC2e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC2u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC2--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MC3O-sEduH59KSHV8vgA" name="synonyms" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC3e-sEduH59KSHV8vgA" annotatedElement="_y1MC3O-sEduH59KSHV8vgA">
          <body>Lists synonyms, i.e. other names the Role might be referred by.  Tool support for the meta-model might support that a Role name can be consistently be replaced with one of its synonyms throught a Process.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC3u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC3--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC4O-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MC4e-sEduH59KSHV8vgA" name="TaskDescription">
      <generalization xmi:id="_y1MC4u-sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MC4--sEduH59KSHV8vgA" name="purpose" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC5O-sEduH59KSHV8vgA" annotatedElement="_y1MC4--sEduH59KSHV8vgA">
          <body>Summarizes the main reason for performing this Task and what is intended to be achieved.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC5e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC5u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC5--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MC6O-sEduH59KSHV8vgA" name="alternatives" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC6e-sEduH59KSHV8vgA" annotatedElement="_y1MC6O-sEduH59KSHV8vgA">
          <body>Comprises of summaries describing important exceptional and non-standard ways of achieving this Task's development goals that were not covered by the Task's Steps.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC6u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC6--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC7O-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MC7e-sEduH59KSHV8vgA" name="WorkProductDescription">
      <generalization xmi:id="_y1MC7u-sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MC7--sEduH59KSHV8vgA" name="purpose" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC8O-sEduH59KSHV8vgA" annotatedElement="_y1MC7--sEduH59KSHV8vgA">
          <body>Describes why the work product is produced and to what use it will be put.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC8e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC8u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC8--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MC9O-sEduH59KSHV8vgA" name="impactOfNotHaving" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC9e-sEduH59KSHV8vgA" annotatedElement="_y1MC9O-sEduH59KSHV8vgA">
          <body>Describes the consequences of not producing the work product.  This is intended to aid in the tailoring the method/process to the needs of a specific project.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC9u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC9--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC-O-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MC-e-sEduH59KSHV8vgA" name="reasonsForNotNeeding" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MC-u-sEduH59KSHV8vgA" annotatedElement="_y1MC-e-sEduH59KSHV8vgA">
          <body>Describes the circumstances in which it is reasonable not to produce the work product.  This is intended to aid in the tailoring of the method/process to the needs of a specific project.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MC---sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MC_O-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MC_e-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MC_u-sEduH59KSHV8vgA" name="GuidanceDescription">
      <generalization xmi:id="_y1MC_--sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MDAO-sEduH59KSHV8vgA" name="attachments" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDAe-sEduH59KSHV8vgA" annotatedElement="_y1MDAO-sEduH59KSHV8vgA">
          <body>This field is primarily used for attachments augmenting the information provided for guidance.  In particular the attribute is used for Templates, Examples, and Reusable Assets to contain the actual attachment described in the mainDescription.  It can additionally contain representations of the guidance in just a third party format, e.g. PDF, MS Word, or Word Perfect.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDAu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDA--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDBO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y1MDBe-sEduH59KSHV8vgA" name="PracticeDescription">
      <generalization xmi:id="_y1MDBu-sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y1MDB--sEduH59KSHV8vgA" name="additionalInfo" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDCO-sEduH59KSHV8vgA" annotatedElement="_y1MDB--sEduH59KSHV8vgA">
          <body>Any additional Information not covered by the other attributes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDCe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDCu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDC--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDDO-sEduH59KSHV8vgA" name="problem" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDDe-sEduH59KSHV8vgA" annotatedElement="_y1MDDO-sEduH59KSHV8vgA">
          <body>A description of the problem the Practice addresses.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDDu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDD--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDEO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDEe-sEduH59KSHV8vgA" name="background" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDEu-sEduH59KSHV8vgA" annotatedElement="_y1MDEe-sEduH59KSHV8vgA">
          <body>Elaboration on the background and the context in which the problem occurs and where the solution described by this Practice will fit in.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDE--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDFO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDFe-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDFu-sEduH59KSHV8vgA" name="goals" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDF--sEduH59KSHV8vgA" annotatedElement="_y1MDFu-sEduH59KSHV8vgA">
          <body>A summary of the overall goals to be addressed by the Practice.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDGO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDGe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDGu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDG--sEduH59KSHV8vgA" name="application" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDHO-sEduH59KSHV8vgA" annotatedElement="_y1MDG--sEduH59KSHV8vgA">
          <body>Describes how the Practice is being applied or introduced into the context described in background.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDHe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDHu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDH--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDIO-sEduH59KSHV8vgA" name="levelsOfAdoption" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDIe-sEduH59KSHV8vgA" annotatedElement="_y1MDIO-sEduH59KSHV8vgA">
          <body>Outlines the different forms or variants in which the practice could be realized. (e.g. full adoption verus a partial adoption of the Practice)</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDIu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDI--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDJO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7eu-sEduH59KSHV8vgA" name="DescribableElement" isAbstract="true">
      <ownedComment xmi:id="_yxw7e--sEduH59KSHV8vgA" annotatedElement="_yxw7eu-sEduH59KSHV8vgA">
        <body>Describable Element is an abstract generalization of Method Elements for which external presentation names as well as content descriptions have been defined, such as Roles or Work Products.  Presentation Name and Content Descriptions are typically localized using a resource allocation mechanism for its String type attributes.
This abstraction represents all elements in the Method Content as well as Process space for which concrete textual descriptions are defined in the form of documenting attributes grouped in a matching Content Description instance (see Section 4.1.4).  Describable Elements are intended to be published in method or process publications (similar to the IBM Rational Unified Process web).  Describable Element defines that the element it represents will have content 'attached' to it.  Content Description is the abstraction for the actual places in which the content is being represented.  This separation allows a distinction between core method model elements describing the structure of the model from the actual description container providing, for example, the documentation of the content element in different alternatives languages, audiences, licensing levels, etc.
</body>
      </ownedComment>
      <ownedComment xmi:id="_y1MDJe-sEduH59KSHV8vgA" annotatedElement="_yxw7eu-sEduH59KSHV8vgA">
        <body>This definition of Content Element extends the Content Element definition via package merge with references to icons that are used for presenting Content Elements in a UMA-based modeling environment as well as when publishing Content Elements into documentation presentation (e.g. document or html pages).</body>
      </ownedComment>
      <generalization xmi:id="_yxw7fO-sEduH59KSHV8vgA" general="_yxKfCu-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_yxw7fe-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7fu-sEduH59KSHV8vgA" name="presentationName" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7f--sEduH59KSHV8vgA" annotatedElement="_yxw7fu-sEduH59KSHV8vgA">
          <body>Every Describable Element has a presentation name, which is used for external presentation of the element.  For example, name (the internal representation) might be set to &quot;rup_architecture_document&quot; to differentiate from a &quot;j2ee_architcture_document&quot; whereas the external presentation would always be &quot;Architecture Document&quot;.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7gO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7ge-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7gu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7g--sEduH59KSHV8vgA" name="presentation" visibility="public" type="_yxw7V--sEduH59KSHV8vgA" aggregation="composite" association="_yxw7me-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7hO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7he-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDJu-sEduH59KSHV8vgA" name="shapeicon" visibility="public" type="_yxUPZu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDJ--sEduH59KSHV8vgA" annotatedElement="_y1MDJu-sEduH59KSHV8vgA">
          <body>A reference to an icon that can be used for modeling with specific Content Element instances (as graphical stereotypes, e.g. a use case symbol for a use case artifact) as well as publication of content.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDKO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDKe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDKu-sEduH59KSHV8vgA" type="_yxUPZu-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDK--sEduH59KSHV8vgA" name="nodeicon" visibility="public" type="_yxUPZu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDLO-sEduH59KSHV8vgA" annotatedElement="_y1MDK--sEduH59KSHV8vgA">
          <body>A reference to an icon that can be used in tree browser presentations and breakdown structures.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDLe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDLu-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDL--sEduH59KSHV8vgA" type="_yxUPZu-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Okie-sEduH59KSHV8vgA" name="RoleSet">
      <ownedComment xmi:id="_y2Okiu-sEduH59KSHV8vgA" annotatedElement="_y2Okie-sEduH59KSHV8vgA">
        <body>A Role Set organizes Roles into categories.  It is used to group roles together that have certain commonalities.  For example, the &quot;Analysts&quot; Role Set could group the &quot;Business Process Analyst&quot;, &quot;System Analyst&quot;, as well as &quot;Requirements Specifier&quot; roles.  All of these work with similar techniques and have overlapping skills, but are required as distinct roles for a method (e.g. the method the IBM Rational Unified Process is based on).
</body>
      </ownedComment>
      <generalization xmi:id="_y2Oki--sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2OkjO-sEduH59KSHV8vgA" name="roles" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_y2OkvO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okje-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okju-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Okj--sEduH59KSHV8vgA" name="Domain">
      <ownedComment xmi:id="_y2OkkO-sEduH59KSHV8vgA" annotatedElement="_y2Okj--sEduH59KSHV8vgA">
        <body>Domain is a refineable hierarchy grouping related work products.  In other words, Domains can be further divided into sub-domains, with work product elements to be categorized only at the leaf-level of this hierarchy.
Domain is a logical grouping of work products that have an affinity to each other based on resources, timing, or relationship.  A Domain may be divided into subdomains.  For example, GS Method uses six predefined Domains for Work Products: Application, Architecture, Business, Engagement, Operations and Organization.
</body>
      </ownedComment>
      <generalization xmi:id="_y2Okke-sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2Okku-sEduH59KSHV8vgA" name="workProducts" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_y2Okwe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okk--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2OklO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y2Okle-sEduH59KSHV8vgA" name="subdomains" visibility="public" type="_y2Okj--sEduH59KSHV8vgA" aggregation="composite" association="_y2Okxu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Oklu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okl--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2OkmO-sEduH59KSHV8vgA" name="WorkProductType">
      <ownedComment xmi:id="_y2Okme-sEduH59KSHV8vgA" annotatedElement="_y2OkmO-sEduH59KSHV8vgA">
        <body>Work Product Type is a second category for work products, which in contrast to Domain is more presentation oriented.  A work product can have many Work Product Types.  Examples, for a Work Product Type is &quot;Class Diagram&quot;, which categorizes the Artifacts Analysis Model, Design Model, User Experience Model, or &quot;Specification&quot;, which categorizes requirements specifications that define a system with a well-defined system boundary, such as use case or functional requirements specification.  A Work Product can be categorized to be of many Work Product Types.  For example, a use case model can be categorized as a Specification as well as Diagram Work Product Type.
</body>
      </ownedComment>
      <generalization xmi:id="_y2Okmu-sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2Okm--sEduH59KSHV8vgA" name="workProducts" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_y2Okye-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2OknO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okne-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Oknu-sEduH59KSHV8vgA" name="ContentCategory" isAbstract="true">
      <ownedComment xmi:id="_y2Okn--sEduH59KSHV8vgA" annotatedElement="_y2Oknu-sEduH59KSHV8vgA">
        <body>Content Category is an abstract class generalizing content category types.</body>
      </ownedComment>
      <generalization xmi:id="_y2OkoO-sEduH59KSHV8vgA" general="_yxw7VO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Okoe-sEduH59KSHV8vgA" name="DisciplineGrouping">
      <ownedComment xmi:id="_y2Okou-sEduH59KSHV8vgA" annotatedElement="_y2Okoe-sEduH59KSHV8vgA">
        <body>Discipline Groupings are used to group Disciplines.  For example, the Discipline Grouping &quot;Software Disciplines&quot; would be the group of all disciplines related to developing software such as &quot;Requirements Management&quot; or &quot;Testing&quot;; &quot;IT Infrastructure Management&quot; would be a Disciplines Grouping for disciplines such as &quot;IT Operational Services&quot;, &quot;IT Customer Relationships&quot;, or &quot;IT Enabling Services&quot;.  Disciplines can be associated to more than one Discipline Grouping.
</body>
      </ownedComment>
      <generalization xmi:id="_y2Oko--sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2OkpO-sEduH59KSHV8vgA" name="disciplines" visibility="public" type="_y2OkgO-sEduH59KSHV8vgA" association="_y2Okzu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okpe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okpu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Okp--sEduH59KSHV8vgA" name="Tool">
      <ownedComment xmi:id="_y2OkqO-sEduH59KSHV8vgA" annotatedElement="_y2Okp--sEduH59KSHV8vgA">
        <body>A Tool is a container/aggregate for ToolMentors.  It can also provide general descriptions of the tool and its general capabilities.</body>
      </ownedComment>
      <generalization xmi:id="_y2Okqe-sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2Okqu-sEduH59KSHV8vgA" name="toolMentors" visibility="public" type="_yz1-9u-sEduH59KSHV8vgA" association="_y2Ok0--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okq--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2OkrO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Okre-sEduH59KSHV8vgA" name="RoleSetGrouping">
      <ownedComment xmi:id="_y2Okru-sEduH59KSHV8vgA" annotatedElement="_y2Okre-sEduH59KSHV8vgA">
        <body>Role Sets can be categorized into Role Set Groupings.  For example, different methods might define similar Role Sets, which however need to be distinguished from each other on a global scale.  Thus, Role Set Groupings allow distinguishing, for example, Software Services Manager Role Sets from Software Development Organization Manager Role Sets.</body>
      </ownedComment>
      <generalization xmi:id="_y2Okr--sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2OksO-sEduH59KSHV8vgA" name="roleSets" visibility="public" type="_y2Okie-sEduH59KSHV8vgA" association="_y2Ok2O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okse-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Oksu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2Oks--sEduH59KSHV8vgA" name="CustomCategory">
      <ownedComment xmi:id="_y2OktO-sEduH59KSHV8vgA" annotatedElement="_y2Oks--sEduH59KSHV8vgA">
        <body>A Custom Category is a category introduced by a method content author to structure any number of method Content Elements of any subtype based on user-defined criteria.  Because Content Categories (and therefore Custom Categories, too) are Content Elements themselves, Custom Categories can be used to recursively categorize Content Categories as well.  Custom Categories can also be nested with any Content Category.  Custom categories can be used to categorize content based on the user's criteria as well as to define whole tree-structures of nested categories allowing the user to systematically navigate and browse method content and processes based on these categories.  For example, one could create a custom category to logically organize content relevant for the user's development organization departments; e.g. a &quot;Testing&quot; category that groups together all roles, work products, tasks, and guidance element relevant to testing.  Another example would be categories that express licensing levels of the content grouping freely distributable method content versus content that represent intellectual property and requires a license to be purchased to be able to use it.
</body>
      </ownedComment>
      <generalization xmi:id="_y2Okte-sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2Oktu-sEduH59KSHV8vgA" name="categorizedElements" visibility="public" type="_yxw7eu-sEduH59KSHV8vgA" association="_y2Ok3e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okt--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2OkuO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y2Okue-sEduH59KSHV8vgA" name="subCategories" visibility="public" type="_y2Oknu-sEduH59KSHV8vgA" association="_y2Ok4u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okuu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Oku--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2OkvO-sEduH59KSHV8vgA" memberEnd="_y2Okvu-sEduH59KSHV8vgA _y2OkjO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Okve-sEduH59KSHV8vgA" annotatedElement="_y2OkvO-sEduH59KSHV8vgA">
        <body>A Role Set categorizes many Roles and a Role can be represented in may Role Sets.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Okvu-sEduH59KSHV8vgA" name="roleSets" visibility="public" type="_y2Okie-sEduH59KSHV8vgA" association="_y2OkvO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okv--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2OkwO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Okwe-sEduH59KSHV8vgA" memberEnd="_y2Okw--sEduH59KSHV8vgA _y2Okku-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Okwu-sEduH59KSHV8vgA" annotatedElement="_y2Okwe-sEduH59KSHV8vgA">
        <body>A Domain categorizes many Work Products. A Work Product belongs at most to one Domain.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Okw--sEduH59KSHV8vgA" name="domain" visibility="public" type="_y2Okj--sEduH59KSHV8vgA" association="_y2Okwe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2OkxO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okxe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Okxu-sEduH59KSHV8vgA" memberEnd="_y2OkyO-sEduH59KSHV8vgA _y2Okle-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Okx--sEduH59KSHV8vgA" annotatedElement="_y2Okxu-sEduH59KSHV8vgA">
        <body>Domains can be further divided into Subdomains, with work product elements only to be categorized at the leaf-level.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2OkyO-sEduH59KSHV8vgA" name="_domain" visibility="public" type="_y2Okj--sEduH59KSHV8vgA" isUnique="false" association="_y2Okxu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Okye-sEduH59KSHV8vgA" memberEnd="_y2Oky--sEduH59KSHV8vgA _y2Okm--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Okyu-sEduH59KSHV8vgA" annotatedElement="_y2Okye-sEduH59KSHV8vgA">
        <body>A Work Product can be categorized to be zero of many Work Product Types.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Oky--sEduH59KSHV8vgA" name="workProductTypes" visibility="public" type="_y2OkmO-sEduH59KSHV8vgA" association="_y2Okye-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2OkzO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okze-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Okzu-sEduH59KSHV8vgA" memberEnd="_y2Ok0O-sEduH59KSHV8vgA _y2OkpO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Okz--sEduH59KSHV8vgA" annotatedElement="_y2Okzu-sEduH59KSHV8vgA">
        <body>Discipline Groupings group many Disciplines.  A Discipline can be in many Discipline Groups.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok0O-sEduH59KSHV8vgA" name="disciplineGroups" visibility="public" type="_y2Okoe-sEduH59KSHV8vgA" association="_y2Okzu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok0e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok0u-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok0--sEduH59KSHV8vgA" memberEnd="_y2Ok1e-sEduH59KSHV8vgA _y2Okqu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Ok1O-sEduH59KSHV8vgA" annotatedElement="_y2Ok0--sEduH59KSHV8vgA">
        <body>A Tool Mentor describes work with exactly one Tool.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok1e-sEduH59KSHV8vgA" name="tool" visibility="public" type="_y2Okp--sEduH59KSHV8vgA" association="_y2Ok0--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok1u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok1--sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok2O-sEduH59KSHV8vgA" memberEnd="_y2Ok2u-sEduH59KSHV8vgA _y2OksO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Ok2e-sEduH59KSHV8vgA" annotatedElement="_y2Ok2O-sEduH59KSHV8vgA">
        <body>A Role Set Grouping contains many Role Sets. Role Sets can be in many Role Set Groupings.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok2u-sEduH59KSHV8vgA" name="roleSetGroups" visibility="public" type="_y2Okre-sEduH59KSHV8vgA" association="_y2Ok2O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok2--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok3O-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok3e-sEduH59KSHV8vgA" memberEnd="_y2Oktu-sEduH59KSHV8vgA _y2Ok3--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Ok3u-sEduH59KSHV8vgA" annotatedElement="_y2Ok3e-sEduH59KSHV8vgA">
        <body>A CustomCategory groups together any number of ContentElements including other ContentCategory. </body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok3--sEduH59KSHV8vgA" name="customCategories" visibility="public" type="_y2Oks--sEduH59KSHV8vgA" association="_y2Ok3e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok4O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok4e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok4u-sEduH59KSHV8vgA" memberEnd="_y2Okue-sEduH59KSHV8vgA _y2Ok5O-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Ok4--sEduH59KSHV8vgA" annotatedElement="_y2Ok4u-sEduH59KSHV8vgA">
        <body>A CustomCategory can have any number of ContentCategories defined as nested subCategories.  Therefore, one could nest CustomCategories into n-level hierarchies. </body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok5O-sEduH59KSHV8vgA" name="_customCategory" visibility="public" type="_y2Oks--sEduH59KSHV8vgA" isUnique="false" association="_y2Ok4u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok5e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok5u-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok5--sEduH59KSHV8vgA" memberEnd="_y2Okg--sEduH59KSHV8vgA _y2Ok6e-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y2Ok6O-sEduH59KSHV8vgA" annotatedElement="_y2Ok5--sEduH59KSHV8vgA">
        <body>Every Task should be related to exactly one Discipline.  For legacy reasons this is not enforced (e.g. GS Method does not define Disciplines, yet).</body>
      </ownedComment>
      <ownedEnd xmi:id="_y2Ok6e-sEduH59KSHV8vgA" name="discipline" visibility="public" type="_y2OkgO-sEduH59KSHV8vgA" association="_y2Ok5--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Ok6u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Ok6--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y2Ok7O-sEduH59KSHV8vgA" memberEnd="_y2Okhu-sEduH59KSHV8vgA _y2Ok7e-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y2Ok7e-sEduH59KSHV8vgA" name="_discipline" visibility="public" type="_y2OkgO-sEduH59KSHV8vgA" isUnique="false" association="_y2Ok7O-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3RtYO-sEduH59KSHV8vgA" name="State">
      <generalization xmi:id="_y3RtYe-sEduH59KSHV8vgA" general="_y3a3Y--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3RtYu-sEduH59KSHV8vgA" name="workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_y3a3he-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3RtY--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3RtZO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3RtZe-sEduH59KSHV8vgA" name="region" visibility="public" type="_y3a3ee-sEduH59KSHV8vgA" aggregation="composite" association="_y3a3je-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3RtZu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3RtZ--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3RtaO-sEduH59KSHV8vgA" name="submachine" visibility="public" type="_y3a3Xu-sEduH59KSHV8vgA" association="_y3a3ju-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3Rtae-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3Rtau-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3a3UO-sEduH59KSHV8vgA" name="Transition">
      <generalization xmi:id="_y3a3Ue-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3a3Uu-sEduH59KSHV8vgA" name="workDefinition" visibility="public" type="_yyzdTO-sEduH59KSHV8vgA" association="_y3a3h--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3U--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3VO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3Ve-sEduH59KSHV8vgA" name="container" visibility="public" type="_y3a3ee-sEduH59KSHV8vgA" association="_y3a3iu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3Vu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3V--sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3WO-sEduH59KSHV8vgA" name="source" visibility="public" type="_y3a3Y--sEduH59KSHV8vgA" association="_y3a3i--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3We-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3Wu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3W--sEduH59KSHV8vgA" name="target" visibility="public" type="_y3a3Y--sEduH59KSHV8vgA" association="_y3a3jO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3XO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3Xe-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3a3Xu-sEduH59KSHV8vgA" name="StateMachine">
      <generalization xmi:id="_y3a3X--sEduH59KSHV8vgA" general="_yyzdTO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3a3YO-sEduH59KSHV8vgA" name="region" visibility="public" type="_y3a3ee-sEduH59KSHV8vgA" aggregation="composite" association="_y3a3ku-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3Ye-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3Yu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3a3Y--sEduH59KSHV8vgA" name="Vertex">
      <generalization xmi:id="_y3a3ZO-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3a3Ze-sEduH59KSHV8vgA" name="container" visibility="public" type="_y3a3ee-sEduH59KSHV8vgA" association="_y3a3ie-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3Zu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3Z--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3aO-sEduH59KSHV8vgA" name="outgoing" visibility="public" type="_y3a3UO-sEduH59KSHV8vgA" association="_y3a3i--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3ae-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3au-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3a--sEduH59KSHV8vgA" name="incoming" visibility="public" type="_y3a3UO-sEduH59KSHV8vgA" association="_y3a3jO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3bO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3be-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3a3bu-sEduH59KSHV8vgA" name="PseudoState">
      <generalization xmi:id="_y3a3b--sEduH59KSHV8vgA" general="_y3a3Y--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_y3a3cO-sEduH59KSHV8vgA" name="PseudoStateKind">
      <ownedLiteral xmi:id="_y3a3ce-sEduH59KSHV8vgA" name="initial"/>
      <ownedLiteral xmi:id="_y3a3cu-sEduH59KSHV8vgA" name="join"/>
      <ownedLiteral xmi:id="_y3a3c--sEduH59KSHV8vgA" name="fork"/>
      <ownedLiteral xmi:id="_y3a3dO-sEduH59KSHV8vgA" name="junction"/>
      <ownedLiteral xmi:id="_y3a3de-sEduH59KSHV8vgA" name="choice"/>
      <ownedLiteral xmi:id="_y3a3du-sEduH59KSHV8vgA" name="entryPoint"/>
      <ownedLiteral xmi:id="_y3a3d--sEduH59KSHV8vgA" name="exitPoint"/>
      <ownedLiteral xmi:id="_y3a3eO-sEduH59KSHV8vgA" name="terminate"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y3a3ee-sEduH59KSHV8vgA" name="Region">
      <generalization xmi:id="_y3a3eu-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3a3e--sEduH59KSHV8vgA" name="vertex" visibility="public" type="_y3a3Y--sEduH59KSHV8vgA" aggregation="composite" association="_y3a3ie-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3fO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3fe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3fu-sEduH59KSHV8vgA" name="transition" visibility="public" type="_y3a3UO-sEduH59KSHV8vgA" aggregation="composite" association="_y3a3iu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3f--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3gO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y3a3ge-sEduH59KSHV8vgA" name="state" visibility="public" type="_y3RtYO-sEduH59KSHV8vgA" association="_y3a3je-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y3a3gu-sEduH59KSHV8vgA" name="stateMachine" visibility="public" type="_y3a3Xu-sEduH59KSHV8vgA" association="_y3a3ku-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3g--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3hO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3he-sEduH59KSHV8vgA" memberEnd="_y3RtYu-sEduH59KSHV8vgA _y3a3hu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y3a3hu-sEduH59KSHV8vgA" name="state" visibility="public" type="_y3RtYO-sEduH59KSHV8vgA" association="_y3a3he-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3h--sEduH59KSHV8vgA" memberEnd="_y3a3Uu-sEduH59KSHV8vgA _y3a3iO-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y3a3iO-sEduH59KSHV8vgA" name="transition" visibility="public" type="_y3a3UO-sEduH59KSHV8vgA" association="_y3a3h--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3ie-sEduH59KSHV8vgA" memberEnd="_y3a3e--sEduH59KSHV8vgA _y3a3Ze-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3iu-sEduH59KSHV8vgA" memberEnd="_y3a3fu-sEduH59KSHV8vgA _y3a3Ve-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3i--sEduH59KSHV8vgA" memberEnd="_y3a3aO-sEduH59KSHV8vgA _y3a3WO-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3jO-sEduH59KSHV8vgA" memberEnd="_y3a3a--sEduH59KSHV8vgA _y3a3W--sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3je-sEduH59KSHV8vgA" memberEnd="_y3RtZe-sEduH59KSHV8vgA _y3a3ge-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3ju-sEduH59KSHV8vgA" memberEnd="_y3RtaO-sEduH59KSHV8vgA _y3a3j--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y3a3j--sEduH59KSHV8vgA" name="subMachineState" visibility="public" type="_y3RtYO-sEduH59KSHV8vgA" association="_y3a3ju-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3a3kO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y3a3ke-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y3a3ku-sEduH59KSHV8vgA" memberEnd="_y3a3YO-sEduH59KSHV8vgA _y3a3gu-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_y4eAMe-sEduH59KSHV8vgA" name="MethodPackage" isAbstract="true">
      <ownedComment xmi:id="_y4eAMu-sEduH59KSHV8vgA" annotatedElement="_y4eAMe-sEduH59KSHV8vgA">
        <body>A Method Package is an abstract class for packaging Method Elements.  All Method Elements shall be located in exactly one of Method Package's concrete specializations (e.g. Content Package).   Method Package defines common properties for all of its specializations. Elements are organized in Method Packages to structure large scale of method content and processes as well as to define a mechanism for reuse.  Method Elements from one package can reuse element from other packages by defining a reusedPackages link.  For example, a work product defined in one package can be used as an input for Tasks defined in other packages.  By reusing it from one common place (i.e. the package in which it has been defined) ensures that no redundant definitions of the same elements are required.  Also maintenance of method content is greatly improved as changes can be performed in only one place.  Note, that other packages will introduce more specializations of Method Package, e.g. Process Package and Process Component.</body>
      </ownedComment>
      <generalization xmi:id="_y4eAM--sEduH59KSHV8vgA" general="_yxUPVO-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_y4eANO-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y4eANe-sEduH59KSHV8vgA" name="global" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y4eANu-sEduH59KSHV8vgA" annotatedElement="_y4eANe-sEduH59KSHV8vgA">
          <body>Method Packages can have a global scope.  This means that every element of every other Method Package can see the global package's contents.  Global Method Packages are primarily used to store commonly used category definitions such as for Disciplines or Domains, which are used by many Task and Work Products respectively.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y4eAN--sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y4eAOO-sEduH59KSHV8vgA" name="reusedPackages" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" association="_y4eASe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eAOe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eAOu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y4eAO--sEduH59KSHV8vgA" name="childPackages" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" aggregation="composite" association="_y4eATu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eAPO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eAPe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y4eAPu-sEduH59KSHV8vgA" name="ContentPackage">
      <ownedComment xmi:id="_y4eAP--sEduH59KSHV8vgA" annotatedElement="_y4eAPu-sEduH59KSHV8vgA">
        <body>A Content Package is special Method Package that contains Content Elements and Content Elements, only.  Examples for Content Element are Artifacts, Tasks, Roles, etc.  A key separation of concerns in UMA is the distinction between Method Content and Process.  This separation is enforced by special package types, which do not allow the mixing of method content with processes.</body>
      </ownedComment>
      <generalization xmi:id="_y4eAQO-sEduH59KSHV8vgA" general="_y4eAMe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y4eAQe-sEduH59KSHV8vgA" name="contentElements" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" aggregation="composite" association="_y4eARO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eAQu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eAQ--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y4eARO-sEduH59KSHV8vgA" memberEnd="_y4eAQe-sEduH59KSHV8vgA _y4eARu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y4eARe-sEduH59KSHV8vgA" annotatedElement="_y4eARO-sEduH59KSHV8vgA">
        <body>A Content Package contains Content Elements.  A Content Element instance can be part of only one package instance.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y4eARu-sEduH59KSHV8vgA" name="_contentPackage" visibility="public" type="_y4eAPu-sEduH59KSHV8vgA" isUnique="false" association="_y4eARO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eAR--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eASO-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y4eASe-sEduH59KSHV8vgA" memberEnd="_y4eAS--sEduH59KSHV8vgA _y4eAOO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y4eASu-sEduH59KSHV8vgA" annotatedElement="_y4eASe-sEduH59KSHV8vgA">
        <body>This association describes a dependency between the two packages it connects.  The package at the usingPackage end depends on the package at the reusedPackage end.  For example, an element in the former package is using an element in the later in a relationship such as a Task is using a Work Products as an input.  Reflexive reusedPackage links (i.e. a package that depends on itself) are not allowed.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y4eAS--sEduH59KSHV8vgA" name="usingPackages" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" association="_y4eASe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eATO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eATe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y4eATu-sEduH59KSHV8vgA" name="PackageNesting" memberEnd="_y4eAUO-sEduH59KSHV8vgA _y4eAO--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y4eAT--sEduH59KSHV8vgA" annotatedElement="_y4eATu-sEduH59KSHV8vgA">
        <body>Method Packages can be nested, i.e. a package can be part of another package.  Nested packages do not need to be of the same type, e.g. a Content Package can be defined inside a Process Package (define for the Process part of this model).</body>
      </ownedComment>
      <ownedEnd xmi:id="_y4eAUO-sEduH59KSHV8vgA" name="_methodPackage" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" isUnique="false" association="_y4eATu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y4eAUe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y4eAUu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7mMt--sEduH59KSHV8vgA" name="Milestone">
      <ownedComment xmi:id="_y7mMuO-sEduH59KSHV8vgA" annotatedElement="_y7mMt--sEduH59KSHV8vgA">
        <body>A Milestone describes a significant event in a development project, such as a major decision, completion of a deliverable, or meeting of a major dependency (like completion of a project phase).  Because, Milestone is commonly used to refer to both the event itself and the point in time at which the event is scheduled to happen, it is modeled as a Breakdown Element (i.e. it appears as part of a breakdown structure).</body>
      </ownedComment>
      <generalization xmi:id="_y7mMue-sEduH59KSHV8vgA" general="_y7vXKe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7mMuu-sEduH59KSHV8vgA" name="Iteration">
      <ownedComment xmi:id="_y7mMu--sEduH59KSHV8vgA" annotatedElement="_y7mMuu-sEduH59KSHV8vgA">
        <body>Iteration is a special Activity, which prescribes pre-defined values for its instances for the attributes prefix ('Iteration') and isRepeatable ('True').  It has been included into the meta-model for convenience and to provide a special stereotype, because it represents a very commonly used Activity type.
Iteration groups a set of nested Activities that are repeated more than once.  It represents an important structuring element to organize work in repetitive cycles.  The concept of Iteration can be associated with different rules in different methods.  For example, the IBM Rational Unified Process method framework (RUP) defines a rule that Iterations are not allowed to span across Phases.  In contrast IBM Global Services Method (GSMethod) based method frameworks this rule does not apply and Iteration can be defined which nest Phases.  Rules like these, which play an important role for each individual method and are therefore not enforced by this meta-model.  Instead, process authors are expected to follow and check these rules manually.  (Note: Any Breakdown Element can be repeated; however, Iterations has been introduced as a special meta-model concept, because of its important role for many methods.)
</body>
      </ownedComment>
      <generalization xmi:id="_y7mMvO-sEduH59KSHV8vgA" general="_y7mMsO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7mMve-sEduH59KSHV8vgA" name="Phase">
      <ownedComment xmi:id="_y7mMvu-sEduH59KSHV8vgA" annotatedElement="_y7mMve-sEduH59KSHV8vgA">
        <body>Phase is a special Activity, which prescribes pre-defined values for its instances for the attributes prefix ('Phase') and isRepeatable ('False').  It has been included into the meta-model for convenience and to provide a special stereotype, because it represents a very commonly used Activity type.
Phase represent a significant period in a project, ending with major management checkpoint, milestone or set of Deliverables.  It is included in the model as a predefined special Activity, because of its significance in defining breakdowns.
</body>
      </ownedComment>
      <generalization xmi:id="_y7mMv--sEduH59KSHV8vgA" general="_y7mMsO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7mMwO-sEduH59KSHV8vgA" name="TeamProfile">
      <ownedComment xmi:id="_y7mMwe-sEduH59KSHV8vgA" annotatedElement="_y7mMwO-sEduH59KSHV8vgA">
        <body>A Team Profile is a Breakdown Element that groups Role Descriptors or Resource Definitions defining a nested hierarchy of teams and team members.
Work assignments and Work Product responsibilities can be different from Activity to Activity in a development project. Different phases require different staffing profiles, i.e. different skills and resources doing different types of work.  Therefore, a process needs to define such different profiles in a flexible manner.  Whereas Core Method Content defines standard responsibilities and assignments, a process express by a breakdown structures needs to be able refine and redefine these throughout its definition.  Role Descriptors, Resource Definitions, as well as Team Profiles provide the data structure necessary to achieve this flexibility and to provide a process user with the capability to define different teams and role relationships for every Activity (including Activities on any nesting-level as well as Iterations or Phases).
Hence, in addition to the work breakdown and work product breakdown structures defined so far, Team Profiles are used to define a third type of breakdown structure: team breakdown structures.  These are created as an Activity specific hierarchy of Team Profiles comprising of Role Descriptors and Resource Definitions.  These structures can be presented as well-known Org-Charts.  Just as with any other Breakdown Element and Descriptors, Team Profiles can be defined within the scope of any Activity in a breakdown structure.  In other words every Activity can define its own Team Profiles consisting of Activity specific Role Descriptors and Resource Definitions.  Typically, Team Profiles are defined on the level of Iterations or Phases or other higher-level Activity.
</body>
      </ownedComment>
      <generalization xmi:id="_y7mMwu-sEduH59KSHV8vgA" general="_y7vWvO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7mMw--sEduH59KSHV8vgA" name="teamRoles" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y7vXO--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7mMxO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7mMxe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7mMxu-sEduH59KSHV8vgA" name="superTeam" visibility="public" type="_y7mMwO-sEduH59KSHV8vgA" association="_y75HoO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7mMx--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7mMyO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7mMye-sEduH59KSHV8vgA" name="subTeam" visibility="public" type="_y7mMwO-sEduH59KSHV8vgA" association="_y75HoO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7mMyu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7mMy--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_y7vWoO-sEduH59KSHV8vgA" name="WorkOrderType">
      <ownedComment xmi:id="_y7vWoe-sEduH59KSHV8vgA" annotatedElement="_y7vWoO-sEduH59KSHV8vgA">
        <body>Work Order represents a relationship between two Breakdown Element in which one Breakdown Element (referred to as (B) below) depends on the start or finish of another Breakdown Element (referred to as (A) below) in order to begin or end. This enumeration defines the different types of Work Order relationships available in UMA and is used to provide values for Work Order's linkType attribute.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_y7vWou-sEduH59KSHV8vgA" name="finishToStart">
        <ownedComment xmi:id="_y7vWo--sEduH59KSHV8vgA" annotatedElement="_y7vWou-sEduH59KSHV8vgA">
          <body>Breakdown Element (B) cannot start until Breakdown Element (A) finishes. For example, if you have two Breakdown Elements, &quot;Construct fence&quot; and &quot;Paint fence,&quot; &quot;Paint fence&quot; can't start until &quot;Construct fence&quot; finishes. This is the most common type of dependency and the default for a new Work Order instance.
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_y7vWpO-sEduH59KSHV8vgA" name="finishToFinish">
        <ownedComment xmi:id="_y7vWpe-sEduH59KSHV8vgA" annotatedElement="_y7vWpO-sEduH59KSHV8vgA">
          <body>Breakdown Element (B) cannot finish until Breakdown Element (A) finishes. For example, if you have two Breakdown Elements, &quot;Add wiring&quot; and &quot;Inspect electrical,&quot; &quot;Inspect electrical&quot; can't finish until &quot;Add wiring&quot; finishes.
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_y7vWpu-sEduH59KSHV8vgA" name="startToStart">
        <ownedComment xmi:id="_y7vWp--sEduH59KSHV8vgA" annotatedElement="_y7vWpu-sEduH59KSHV8vgA">
          <body>Breakdown Element (B) cannot start until Breakdown Element (A) starts. For example, if you have two Breakdown Elements, &quot;Pour foundation&quot; and &quot;Level concrete,&quot; &quot;Level concrete&quot; can't begin until &quot;Pour foundation&quot; begins.
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_y7vWqO-sEduH59KSHV8vgA" name="startToFinish">
        <ownedComment xmi:id="_y7vWqe-sEduH59KSHV8vgA" annotatedElement="_y7vWqO-sEduH59KSHV8vgA">
          <body>Breakdown Element (B) cannot finish until Breakdown Element (A) starts. This dependency type can be used for just-in-time scheduling up to a milestone or the project finish date to minimize the risk of a Breakdown Element finishing late if its dependent Breakdown Elements slip. If a related Breakdown Element needs to finish before the milestone or project finish date, but it doesn't matter exactly when and you don't want a late finish to affect the just-in-time Breakdown Element, you can create an SF dependency between the Breakdown Element you want scheduled just in time (the predecessor) and its related Breakdown Element (the successor). Then if you update progress on the successor Breakdown Element, it won't affect the scheduled dates of the predecessor Breakdown Element.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vWqu-sEduH59KSHV8vgA" name="WorkOrder">
      <ownedComment xmi:id="_y7vWq--sEduH59KSHV8vgA" annotatedElement="_y7vWqu-sEduH59KSHV8vgA">
        <body>Work Order is a Method Element that represents a relationship between two Breakdown Elements in which one Breakdown Elements depends on the start or finish of another Breakdown Elements in order to begin or end.  
(Note, Work Order is not modeled as an Association Class to provide a straightforward mapping  to XMI and EMF.)
The Work Order class defines predecessor and successor relations amongst Breakdown Elements.  This information is in particular critical for planning applications.  See more details on different types of Work Order relationships at Work Order Type.
</body>
      </ownedComment>
      <generalization xmi:id="_y7vWrO-sEduH59KSHV8vgA" general="_y7vXOO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vWre-sEduH59KSHV8vgA" name="linkType" visibility="public" type="_y7vWoO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWru-sEduH59KSHV8vgA" annotatedElement="_y7vWre-sEduH59KSHV8vgA">
          <body>This attribute expresses the type of the Work Order relationship by assigning a value from the Work Order Type enumeration.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vWr--sEduH59KSHV8vgA">
          <body>finishToStart</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWsO-sEduH59KSHV8vgA" name="pred" visibility="public" type="_y7vXKe-sEduH59KSHV8vgA" association="_y75H8--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vWse-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vWsu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vWs--sEduH59KSHV8vgA" name="PlanningData">
      <ownedComment xmi:id="_y7vWtO-sEduH59KSHV8vgA" annotatedElement="_y7vWs--sEduH59KSHV8vgA">
        <body>Planning Data is a Method Element that adds planning data to Breakdown Elements when it is used for a Process Planning Template.  For Delivery Processes and Capability Patterns this class can either not be instantiated or populated with default data.
Planning Data factors out specific optional data needed for representing planning templates.  This association allows to access planning data if it is stored for the Breakdown Element.
(NOTE, THE ATTRIBUTES FOR THIS CLASS ARE NOT COMPLETE, YET)
</body>
      </ownedComment>
      <generalization xmi:id="_y7vWte-sEduH59KSHV8vgA" general="_y7vXOO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vWtu-sEduH59KSHV8vgA" name="startDate" visibility="public" type="_yxUPZO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWt--sEduH59KSHV8vgA" annotatedElement="_y7vWtu-sEduH59KSHV8vgA">
          <body>The default start date for a planed Task.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWuO-sEduH59KSHV8vgA" name="finishDate" visibility="public" type="_yxUPZO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWue-sEduH59KSHV8vgA" annotatedElement="_y7vWuO-sEduH59KSHV8vgA">
          <body>The default finish date for a planed Task.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWuu-sEduH59KSHV8vgA" name="rank" visibility="public" type="_yxUPbO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWu--sEduH59KSHV8vgA" annotatedElement="_y7vWuu-sEduH59KSHV8vgA">
          <body>The default rank for a planed Task.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vWvO-sEduH59KSHV8vgA" name="BreakdownElement" isAbstract="true">
      <ownedComment xmi:id="_y7vWve-sEduH59KSHV8vgA" annotatedElement="_y7vWvO-sEduH59KSHV8vgA">
        <body>Breakdown Element is an abstract generalization for any type of Method Element that is part of a breakdown structure.  It defines a set of properties available to all of its specializations.</body>
      </ownedComment>
      <generalization xmi:id="_y7vWv--sEduH59KSHV8vgA" general="_y7vXOO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vWwO-sEduH59KSHV8vgA" name="prefix" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWwe-sEduH59KSHV8vgA" annotatedElement="_y7vWwO-sEduH59KSHV8vgA">
          <body>Prefix represents an additional label that will be presented as a prefix to any Breakdown Element to indicate a user-defined sub-type for the element.  For example, if the process engineer would like to distinguish his Activities by 'Module' (as done in the IBM Rational Summit Ascendant Method), he can define a different prefix for every model to be used in addition to naming Activities, e.g. &quot;SRA.Establish Requirements&quot; with SRA indicating that this Activity belongs to the &quot;Software Requirements Analysis&quot; module.  Another common application for prefix is to qualify roles in Role Descriptors.  For example, &quot;Customer.Architect&quot; would define a &quot;Customer&quot; prefix for the Role Descriptor &quot;Architect&quot; expressing that this is an architect on the customer side and not the development team side.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vWwu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vWw--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7vWxO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWxe-sEduH59KSHV8vgA" name="isPlanned" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWxu-sEduH59KSHV8vgA" annotatedElement="_y7vWxe-sEduH59KSHV8vgA">
          <body>A key application for Development Processes expressed with Breakdown structures is to generate a project plan from it.  A process as defined in UMA (cf. with Sections XX and 5.2) is a multi-dimensional structure defining what work is being performed at what time by which roles using which input and producing what outputs.  A project plan as it is represented in project planning tools such as IBM Rational Portfolio Manager or Microsoft Project normally does not need all this information and is normally limited to just representing a subset.  For example, a typical MS Project plan only represents the work breakdown consisting of Tasks and Activities (sometimes referred to as summary tasks).  It does not show the input and output Work Products for a Task, but it can show which roles shall be staffed for performing the Task.  However, such role allocation need to be replaced with concrete resources when instantiating the plan for a concrete project.  Sometimes project plans can then again be organized differently by organizing work by deliverables in which Work Products are mapped to the plan's summary tasks and Task that have these work products as output mapped below such as summary task.  Therefore, a process can make recommendations about which elements to include and which to exclude when generating a plan.  When the isPlanned attribute is set to False for an instance of a Breakdown Element, then this element shall not be not included when a concrete project plan is being generated from the breakdown structure that contains this element.


</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vWx--sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>true</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWyO-sEduH59KSHV8vgA" name="hasMultipleOccurrences" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWye-sEduH59KSHV8vgA" annotatedElement="_y7vWyO-sEduH59KSHV8vgA">
          <body>Just as the isPlanned attribute the hasMultipleOccurrences attribute has an impact on generating plans from a Process.  When this attribute is set to True for a Breakdown Element then it will typically occur multiple times within the same Activity.  For example, a Task such as &quot;Detail Use Case&quot; would be performed for every use case identified for a particular Iteration or Activity.  Generating a plan would list one Task instance per use case.
</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vWyu-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWy--sEduH59KSHV8vgA" name="isOptional" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vWzO-sEduH59KSHV8vgA" annotatedElement="_y7vWy--sEduH59KSHV8vgA">
          <body>The isOptional attribute indicates that the Breakdown Element describes work, a work result, or even work resources, which inclusion is not mandatory when performing a project that is planned based on a process containing this element.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vWze-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vWzu-sEduH59KSHV8vgA" name="presentedAfter" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" association="_y75Hou-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vWz--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW0O-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW0e-sEduH59KSHV8vgA" name="presentedBefore" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" association="_y75H7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW0u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW0--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW1O-sEduH59KSHV8vgA" name="planningData" visibility="public" type="_y7vWs--sEduH59KSHV8vgA" aggregation="composite" association="_y_BUNO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW1e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW1u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW1--sEduH59KSHV8vgA" name="superActivities" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" association="_y_BURu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW2O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW2e-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vW2u-sEduH59KSHV8vgA" name="Descriptor" isAbstract="true">
      <ownedComment xmi:id="_y7vW2--sEduH59KSHV8vgA" annotatedElement="_y7vW2u-sEduH59KSHV8vgA">
        <body>A Descriptor is an abstract generalization for special Breakdown Elements that references one concrete Content Element.  A descriptor provides a representation of a Content Element within breakdown structures.  In addition to just referencing Content Elements it allows overriding the Content Elements structural relationships by defining its own sets of associations.
Descriptors are the key concept for realizing the separation of processes from method content.  A Descriptor can be characterized as a reference object for one particular Content Element, which has its own relationships and properties.  When a Descriptor is created it shall be provided with congruent copies of the relationships defined for the referenced content element.  However, a user can modify these relationships for the particular process situation for which the descriptor has been created. 
</body>
      </ownedComment>
      <generalization xmi:id="_y7vW3O-sEduH59KSHV8vgA" general="_y7vWvO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vW3e-sEduH59KSHV8vgA" name="isSynchronizedWithSource" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vW3u-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>true</body>
        </defaultValue>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vW3--sEduH59KSHV8vgA" name="RoleDescriptor">
      <ownedComment xmi:id="_y7vW4O-sEduH59KSHV8vgA" annotatedElement="_y7vW3--sEduH59KSHV8vgA">
        <body>A Role Descriptor represents a Role in the context of one specific Activity.  Every breakdown structure can define different relationships of Role Descriptors to Task Descriptors and Work Product Descriptors.  Therefore one Role can be represented by many Role Descriptors each within the context of an Activity with its own set of relationships.</body>
      </ownedComment>
      <generalization xmi:id="_y7vW4e-sEduH59KSHV8vgA" general="_y7vW2u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vW4u-sEduH59KSHV8vgA" name="role" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_y75Hse-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW4--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW5O-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW5e-sEduH59KSHV8vgA" name="modifies" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" isDerived="true" association="_y75HzO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW5u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW5--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW6O-sEduH59KSHV8vgA" name="responsibleFor" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75H5e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW6e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW6u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vW6--sEduH59KSHV8vgA" name="TaskDescriptor">
      <ownedComment xmi:id="_y7vW7O-sEduH59KSHV8vgA" annotatedElement="_y7vW6--sEduH59KSHV8vgA">
        <body>A Task Descriptor is a Descriptor and Work Breakdown Element that represents a proxy for a Task in the context of one specific Activity.  Every breakdown structure can define different relationships of Task Descriptors to Work Product Descriptors and Role Descriptors. Therefore one Task can be represented by many Task Descriptors each within the context of an Activity with its own set of relationships.
A key difference between Method Content and Process is that a Content Element such as Task describes all aspects of doing work defined around this Task.  This description is managed in steps, which are modeled as Sections of the Tasks' Content Descriptions.  When applying a Task in a Process' Activity with a Task Descriptor a Process Engineer needs to indicate that at that particular point in time in the Process definition for which the Task Descriptor has been created, only a subset of steps shall be performed.  He defines this selection using the selectedSteps association.  If he wants to add steps to a Task Descriptor, he can describe these either pragmatically in the refinedDescription attribute or 'properly' create a contributing Task to the Task the Task Descriptor refers to.

</body>
      </ownedComment>
      <generalization xmi:id="_y7vW7e-sEduH59KSHV8vgA" general="_y7vW2u-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_y7vW7u-sEduH59KSHV8vgA" general="_y7vXKe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vW7--sEduH59KSHV8vgA" name="task" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_y75Hp--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW8O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW8e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW8u-sEduH59KSHV8vgA" name="additionallyPerformedBy" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y75Htu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW8--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW9O-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW9e-sEduH59KSHV8vgA" name="assistedBy" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y75Hu--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW9u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW9--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW-O-sEduH59KSHV8vgA" name="externalInput" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75HwO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW-e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW-u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW---sEduH59KSHV8vgA" name="mandatoryInput" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75Hx--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW_O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vW_e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vW_u-sEduH59KSHV8vgA" name="optionalInput" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75H0e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vW_--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXAO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXAe-sEduH59KSHV8vgA" name="output" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75H1u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXAu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXA--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXBO-sEduH59KSHV8vgA" name="performedPrimarilyBy" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y75H4O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXBe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXBu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXB--sEduH59KSHV8vgA" name="selectedSteps" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" association="_zBZ6C--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXCO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXCe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vXCu-sEduH59KSHV8vgA" name="WorkProductDescriptor">
      <ownedComment xmi:id="_y7vXC--sEduH59KSHV8vgA" annotatedElement="_y7vXCu-sEduH59KSHV8vgA">
        <body>A Work Product Descriptor represents a Work Product in the context of one specific Activity.  Every breakdown structure can define different relationships of Work Product Descriptors to Task Descriptors and Role Descriptors.  Therefore one Work Product can be represented by many Work Product Descriptors each within the context of an Activity with its own set of relationships.</body>
      </ownedComment>
      <generalization xmi:id="_y7vXDO-sEduH59KSHV8vgA" general="_y7vW2u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vXDe-sEduH59KSHV8vgA" name="activityEntryState" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vXDu-sEduH59KSHV8vgA" annotatedElement="_y7vXDe-sEduH59KSHV8vgA">
          <body>Given that an instance of Work Product Descriptor has been created for a specific Activity, then the Activity Entry State attribute specifies the desired state of instances of the referenced Work Product when work on the Activity is initiated (i.e. work on the Activity's Task Descriptors is being initiated that use this Work Product Descriptor as input).  
For some Work Products state is expressed in percentage of completion, compliance to work product checklist, informal state descriptions, etc.  Others have very specific states expressed as enumerations such as [identified, briefly described, outlined, detailed] for use cases.  Other Work Product states relate to some quality measures or lifecycle states such as [reviewed, implemented, tested].
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXD--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXEO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7vXEe-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXEu-sEduH59KSHV8vgA" name="activityExitState" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vXE--sEduH59KSHV8vgA" annotatedElement="_y7vXEu-sEduH59KSHV8vgA">
          <body>Given that an instance of Work Product Descriptor has been created for a specific Activity, then the Activity Exist State attribute specifies the desired state of instances of the referenced Work Product when work on the Activity is finished (i.e. work on the Activity's Task Descriptors has finished that have this Work Product Descriptor as output).
For some Work Products state is expressed in percentage of completion, compliance to work product checklist, informal state descriptions, etc.  Others have very specific states expressed as enumerations such as [identified, briefly described, outlined, detailed] for use cases.  Other Work Product states relate to some quality measures or lifecycle states such as [reviewed, implemented, tested].
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXFO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXFe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7vXFu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXF--sEduH59KSHV8vgA" name="workProduct" visibility="public" type="_yyzdMO-sEduH59KSHV8vgA" association="_y75HrO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXGO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXGe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXGu-sEduH59KSHV8vgA" name="impactedBy" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75Hxe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXG--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXHO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXHe-sEduH59KSHV8vgA" name="impacts" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75Hxe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXHu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXH--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXIO-sEduH59KSHV8vgA" name="deliverableParts" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75H2--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXIe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXIu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vXI--sEduH59KSHV8vgA" name="CompositeRole">
      <ownedComment xmi:id="_y7vXJO-sEduH59KSHV8vgA" annotatedElement="_y7vXI--sEduH59KSHV8vgA">
        <body>A Composite Role is a special Role Descriptor that relates to more then one Role.  It represents a grouping of Roles with the main purpose of simplification, i.e. reducing the number of roles for a process.
A Composite Role is a grouping of Roles that can be used in an Activity or Process to reduce the number of Roles.  A typical application would be a process for a small team in which a standard set of roles from the method content would be all performed by one or more resource.  By using Composite Role the process would suggest a typical clustering of Roles to Resources.  A Composite Role could perform all Tasks defined for the Roles it refers to.
</body>
      </ownedComment>
      <generalization xmi:id="_y7vXJe-sEduH59KSHV8vgA" general="_y7vW3--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vXJu-sEduH59KSHV8vgA" name="aggregatedRoles" visibility="public" type="_yyzdEe-sEduH59KSHV8vgA" association="_y75H6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXJ--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXKO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vXKe-sEduH59KSHV8vgA" name="WorkBreakdownElement" isAbstract="true">
      <ownedComment xmi:id="_y7vXKu-sEduH59KSHV8vgA" annotatedElement="_y7vXKe-sEduH59KSHV8vgA">
        <body>A Work Breakdown Element is a special Breakdown Element that provides specific properties for Breakdown Elements that represent or refer to Work Definitions.  For example its subclass Activity defines work as it is also a subclass of Work Definition.  Its subclass Task Descriptor does not define work by itself, but refers to a Work Definition and therefore can have the same common properties and Work Breakdown Element has.</body>
      </ownedComment>
      <generalization xmi:id="_y7vXK--sEduH59KSHV8vgA" general="_y7vWvO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7vXLO-sEduH59KSHV8vgA" name="isRepeatable" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vXLe-sEduH59KSHV8vgA" annotatedElement="_y7vXLO-sEduH59KSHV8vgA">
          <body>This attribute is used to define repetition of work, e.g. iterations.  A Process Work Definition with this attribute set to True shall be repeated more than once on the same set of artifacts.  For example, for an instance of Iteration (defined as a special Process Work Definition below) this attribute is set to True by default indicating that every sub-Activity will be repeated more than once.  However, any Process Work Definition can set this attribute to True to define iterations (e.g. to iterate one Activity consisting of many sub-activities or even Phases, but to iterate just one Task).</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vXLu-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXL--sEduH59KSHV8vgA" name="isOngoing" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vXMO-sEduH59KSHV8vgA" annotatedElement="_y7vXL--sEduH59KSHV8vgA">
          <body>If the isOngoing attribute is set to True for a Process Work Definition instance, then the element describes an ongoing piece of work without a fixed duration or end state.  For example, the Process Work Definition could represent work of an administrator continuously (e.g. 3h a day) working to ensure that systems are kept in a certain state.  Another example would be program management work overseeing many different projects being scheduled for one particular project at specific reoccurring intervals during the whole lifecycle of the project.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vXMe-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXMu-sEduH59KSHV8vgA" name="isEventDriven" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y7vXM--sEduH59KSHV8vgA" annotatedElement="_y7vXMu-sEduH59KSHV8vgA">
          <body>The isEventDriven attribute indicates that the Process Work Definition describes an instance of work which is not started because it has been scheduled to start at a certain point of time, because preceding work is being completed, or input work products are available, but because another specific event has occurred.  Examples for such events are exceptions or problem situations which require specific work to be performed as a result.  Also change management work can be modeled as event driven work analyzing a change request or defect and allocating work dynamically to resources to deal with it following the work described with such Process Work Definition.  The events themselves are not modeled in this version of the specification.  They shall be described as part of the normal descriptions fields available.


</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_y7vXNO-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y7vXNe-sEduH59KSHV8vgA" name="linkToPredecessor" visibility="public" type="_y7vWqu-sEduH59KSHV8vgA" association="_y75H-O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXNu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXN--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7vXOO-sEduH59KSHV8vgA" name="ProcessElement" isAbstract="true">
      <ownedComment xmi:id="_y7vXOe-sEduH59KSHV8vgA" annotatedElement="_y7vXOO-sEduH59KSHV8vgA">
        <body>Process Element is a Describable Element that represents an abstract generalization for all elements defined in the Process package.
Process Elements represents Process specific elements that are supposed to be managed in Process Packages.  The separation of Process Element from Content Element allows to clearly distinguish between pure method content from content that is represented in processes. 
</body>
      </ownedComment>
      <generalization xmi:id="_y7vXOu-sEduH59KSHV8vgA" general="_yxw7eu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y7vXO--sEduH59KSHV8vgA" memberEnd="_y7vXPe-sEduH59KSHV8vgA _y7mMw--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y7vXPO-sEduH59KSHV8vgA" annotatedElement="_y7vXO--sEduH59KSHV8vgA">
        <body>This aggregation association specifies the roles of team members with Role Descriptors.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y7vXPe-sEduH59KSHV8vgA" name="_teamProfile" visibility="public" type="_y7mMwO-sEduH59KSHV8vgA" isUnique="false" association="_y7vXO--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7vXPu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7vXP--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75HoO-sEduH59KSHV8vgA" memberEnd="_y7mMxu-sEduH59KSHV8vgA _y7mMye-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Hoe-sEduH59KSHV8vgA" annotatedElement="_y75HoO-sEduH59KSHV8vgA">
        <body>This association relates a Sub-Team to its Super-Team, i.e. the Team that it is part of.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hou-sEduH59KSHV8vgA" memberEnd="_y7vWzu-sEduH59KSHV8vgA _y75HpO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Ho--sEduH59KSHV8vgA" annotatedElement="_y75Hou-sEduH59KSHV8vgA">
        <body>Breakdown structures are nested structures (see superActivities association) presented normally as indented lists.  Within this nesting children on the same level are not specifically ordered.  However, a user of these data structures would expect to order elements within a list.  This association is used to store the presentation sequence amongst Breakdown Elements.  The association presentedAfter is redundant to the association presentedBefore.  This redundancy is required to support Process Contributions (see plugins).</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75HpO-sEduH59KSHV8vgA" name="_breakdownElement" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" isUnique="false" association="_y75Hou-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hpe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Hpu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hp--sEduH59KSHV8vgA" memberEnd="_y75Hqe-sEduH59KSHV8vgA _y7vW7--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75HqO-sEduH59KSHV8vgA" annotatedElement="_y75Hp--sEduH59KSHV8vgA">
        <body>This association represents the reference from the descriptor to the core content element it refers to.  Every Task Descriptor can reference only on Task.  However, a Task can be represented by many Task Descriptors.  In the UMA Profile this association is instantiated by a dependency relationship with a trace stereotype.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hqe-sEduH59KSHV8vgA" name="taskDescriptor" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75Hp--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hqu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Hq--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75HrO-sEduH59KSHV8vgA" memberEnd="_y75Hru-sEduH59KSHV8vgA _y7vXF--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Hre-sEduH59KSHV8vgA" annotatedElement="_y75HrO-sEduH59KSHV8vgA">
        <body>This association represents the reference from the descriptor to the core content element it refers to.  Every Work Product Descriptor can reference only one Work Product.  However, a Work Product can be represented by many Work Product Descriptors.  In the UMA Profile this association is instantiated by a dependency relationship with a trace stereotype.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hru-sEduH59KSHV8vgA" name="workProductDescriptor" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75HrO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hr--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75HsO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hse-sEduH59KSHV8vgA" memberEnd="_y75Hs--sEduH59KSHV8vgA _y7vW4u-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Hsu-sEduH59KSHV8vgA" annotatedElement="_y75Hse-sEduH59KSHV8vgA">
        <body>This association represents the reference from the descriptor to the core content element it refers to.  Every Role Descriptor can reference only one Role.  However, a Role can be represented by many Role Descriptors.  In the UMA Profile this association is instantiated by a dependency relationship with a trace stereotype.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hs--sEduH59KSHV8vgA" name="roleDescriptor" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y75Hse-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75HtO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Hte-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Htu-sEduH59KSHV8vgA" name="AdditionallyPerforms" memberEnd="_y7vW8u-sEduH59KSHV8vgA _y75HuO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Ht--sEduH59KSHV8vgA" annotatedElement="_y75Htu-sEduH59KSHV8vgA">
        <body>This association maps to the respective association in Core Content Elements.  It specifies descriptors for additional roles necessary to complete the referred Task.  Instances of these roles would show up as scheduled resources on a corresponding project plan generated from this structure.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75HuO-sEduH59KSHV8vgA" name="performsAdditionally" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75Htu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hue-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Huu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hu--sEduH59KSHV8vgA" name="Assists" memberEnd="_y7vW9e-sEduH59KSHV8vgA _y75Hve-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75HvO-sEduH59KSHV8vgA" annotatedElement="_y75Hu--sEduH59KSHV8vgA">
        <body>This association is specific to a process, i.e. no defaults have been defined in Core Content Elements.  It specifies descriptors for additional roles that may provide information or assistance helpful, but not mandatory to the completion of the Task.  Instances of these roles would not show up as scheduled resources on the corresponding project plan generated from this structure.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hve-sEduH59KSHV8vgA" name="assistsIn" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75Hu--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hvu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Hv--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75HwO-sEduH59KSHV8vgA" name="ExternalInput" memberEnd="_y7vW-O-sEduH59KSHV8vgA _y75Hwu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Hwe-sEduH59KSHV8vgA" annotatedElement="_y75HwO-sEduH59KSHV8vgA">
        <body>This association is specific to a process, i.e. no defaults will be defined in Core Content Elements.  It specifies descriptors for Work Products used as inputs that are not produced by Tasks within the same Process, but by another external process or an unknown source.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hwu-sEduH59KSHV8vgA" name="externalInputTo" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75HwO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hw--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75HxO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hxe-sEduH59KSHV8vgA" name="ImpactsDependency" memberEnd="_y7vXGu-sEduH59KSHV8vgA _y7vXHe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75Hxu-sEduH59KSHV8vgA" annotatedElement="_y75Hxe-sEduH59KSHV8vgA">
        <body>This association is used to semi-formally specify traceability relationships between Work Products within the scope of an Activity.  A link from one Work Product Descriptor to another indicates that one Work Product is required as input to a Task that produces the related Work Product ('impacts' role end).  It would also mean that a change on one Work Product instance may affect a change on the related product.</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75Hx--sEduH59KSHV8vgA" name="MandatoryInput" memberEnd="_y7vW---sEduH59KSHV8vgA _y75Hye-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75HyO-sEduH59KSHV8vgA" annotatedElement="_y75Hx--sEduH59KSHV8vgA">
        <body>This association maps to the respective association in Core Content Elements.  It points to descriptors for Work Products that are mandatory for the Task to be performed.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hye-sEduH59KSHV8vgA" name="mandatoryInputTo" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75Hx--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hyu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75Hy--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75HzO-sEduH59KSHV8vgA" name="Modifies" memberEnd="_y7vW5e-sEduH59KSHV8vgA _y75Hzu-sEduH59KSHV8vgA" isDerived="true">
      <ownedComment xmi:id="_y75Hze-sEduH59KSHV8vgA" annotatedElement="_y75HzO-sEduH59KSHV8vgA">
        <body>This derived association maps to the Modifies association defined between Work Products and Tasks in Core Method Content.  The same derivation rule as for the core content elements applies.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75Hzu-sEduH59KSHV8vgA" name="_roleDescriptor" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" isUnique="false" association="_y75HzO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75Hz--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H0O-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H0e-sEduH59KSHV8vgA" name="OptionalInput" memberEnd="_y75H0--sEduH59KSHV8vgA _y7vW_u-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H0u-sEduH59KSHV8vgA" annotatedElement="_y75H0e-sEduH59KSHV8vgA">
        <body>This association maps to the respective association in Core Content Elements.  It points to descriptors for Work Products that are optional for the Task to be performed.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H0--sEduH59KSHV8vgA" name="OptionalInputTo" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75H0e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H1O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H1e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H1u-sEduH59KSHV8vgA" name="Output" memberEnd="_y75H2O-sEduH59KSHV8vgA _y7vXAe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H1--sEduH59KSHV8vgA" annotatedElement="_y75H1u-sEduH59KSHV8vgA">
        <body>This association maps to the respective association in Core Content Elements.  It points to descriptors for Work Products that are outputs for performing the referred Task.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H2O-sEduH59KSHV8vgA" name="outputFrom" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75H1u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H2e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H2u-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H2--sEduH59KSHV8vgA" name="PackagedWP" memberEnd="_y75H3e-sEduH59KSHV8vgA _y7vXIO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H3O-sEduH59KSHV8vgA" annotatedElement="_y75H2--sEduH59KSHV8vgA">
        <body>If a Work Product Descriptor refers at the 'deliverable' role end to a Deliverable Work Product then this association is used to specify the Deliverable's Work Product parts.  As indicated for Deliverable in the Core Method Content package, this association overrides the 'deliveredWorkProducts' association of the Work Product, which stores the recommended deliverable parts, but can be customized for every Work Product Descriptor. </body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H3e-sEduH59KSHV8vgA" name="deliverable" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" association="_y75H2--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H3u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H3--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H4O-sEduH59KSHV8vgA" name="PrimaryPerforms" memberEnd="_y7vXBO-sEduH59KSHV8vgA _y75H4u-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H4e-sEduH59KSHV8vgA" annotatedElement="_y75H4O-sEduH59KSHV8vgA">
        <body>This association maps to the respective association in Core Content Elements.  It points to a descriptor for the one role responsible for the completion of the task.  An instance of this role would show up as a scheduled resource on a corresponding project plan generated from this structure.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H4u-sEduH59KSHV8vgA" name="performsAsOwner" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" association="_y75H4O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H4--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H5O-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H5e-sEduH59KSHV8vgA" name="Responsible" memberEnd="_y7vW6O-sEduH59KSHV8vgA _y75H5--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H5u-sEduH59KSHV8vgA" annotatedElement="_y75H5e-sEduH59KSHV8vgA">
        <body>This association represents responsibility for Work Product instances.  It indicates ownership and for example would define the Role that answers to management questions about the quality work product.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H5--sEduH59KSHV8vgA" name="responsibleRole" visibility="public" type="_y7vW3--sEduH59KSHV8vgA" association="_y75H5e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H6O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H6e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H6u-sEduH59KSHV8vgA" memberEnd="_y7vXJu-sEduH59KSHV8vgA _y75H6--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y75H6--sEduH59KSHV8vgA" name="_compositeRole" visibility="public" type="_y7vXI--sEduH59KSHV8vgA" isUnique="false" association="_y75H6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H7O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H7e-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H7u-sEduH59KSHV8vgA" memberEnd="_y7vW0e-sEduH59KSHV8vgA _y75H8O-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H7--sEduH59KSHV8vgA" annotatedElement="_y75H7u-sEduH59KSHV8vgA">
        <body>Breakdown structures are nested structures (see superActivities association) presented normally as indented lists.  Within this nesting children on the same level are not specifically ordered.  However, a user of these data structures would expect to order elements within a list.  This association is used to store the presentation sequence amongst Breakdown Elements.  The association presentedBefore is redundant to the association presentedAfter.  This redundancy is required to support Process Contributions (see plugins).</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H8O-sEduH59KSHV8vgA" name="_breakdownElement" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" isUnique="false" association="_y75H7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H8e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H8u-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H8--sEduH59KSHV8vgA" memberEnd="_y7vWsO-sEduH59KSHV8vgA _y75H9e-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H9O-sEduH59KSHV8vgA" annotatedElement="_y75H8--sEduH59KSHV8vgA">
        <body>The Work Order class defines predecessor and successor relations amongst Breakdown Elements.  This association links a Work Breakdown Element to its successor Work Breakdown Element.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H9e-sEduH59KSHV8vgA" name="linkToSuccessor" visibility="public" type="_y7vWqu-sEduH59KSHV8vgA" association="_y75H8--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H9u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H9--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y75H-O-sEduH59KSHV8vgA" memberEnd="_y75H-u-sEduH59KSHV8vgA _y7vXNe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y75H-e-sEduH59KSHV8vgA" annotatedElement="_y75H-O-sEduH59KSHV8vgA">
        <body>This association links a Work Breakdown Element to its predecessor.  Every Work Breakdown Element can have predecessor information associated to it.  Specific predecessor information is stored in instances of the class Work Order, which defines the kind of predecessor another Work Breakdown Element represents for another.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y75H-u-sEduH59KSHV8vgA" name="succ" visibility="public" type="_y7vXKe-sEduH59KSHV8vgA" association="_y75H-O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75H---sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y75H_O-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y-4KMO-sEduH59KSHV8vgA" name="DeliveryProcess">
      <ownedComment xmi:id="_y-4KMe-sEduH59KSHV8vgA" annotatedElement="_y-4KMO-sEduH59KSHV8vgA">
        <body>A Delivery Processes is a special Process describing a complete and integrated approach for performing a specific project type.  It describes a complete project lifecycle end-to-end and shall be used as a reference for running projects with similar characteristics as defined for the process.  A Delivery Process is related to specific supporting information such as Roadmaps (inherited via Activity) as well as Communications and Education Material.
A Delivery Process is a Process that covers a whole development lifecycle from beginning to end.  A Delivery Process shall be used as a template for planning and running a project.  It provides a complete lifecycle model with predefined phases, iterations, and activities that have been detailed by sequencing referencing method content in breakdown structures.  It is defined on the basis of experience with past projects or engagements, and/or the best practice use of a development or delivery approach.  It defines what gets produced, how those items are produced, and the required staffing in the form of integrated Work, Work Product, and Team Breakdown Structures.  For example, a process engineer can define alternative Delivery Processes for software development projects that differ in the scale of the engagement and staffing necessary, the type of the software application to be developed, the development methods and technologies to be used, etc.  Although, the Delivery Process aims to cover a whole project it keeps certain decision that are too project specific open.  For example, the breakdown structure defines which Breakdown Elements have multiple occurrences or is repeatable via it respective attributes, but does not say how many occurrences and how many repeats/iterations it will have.  These decisions have to be done by a project manager when planning a concrete project, project phase, or project iterations.  A Delivery Process is always a complete description of a process in terms of completeness of the lifecycle, as well as in terms of all three views on the process which are the Work Breakdown Structure, Work Product Breakdown Structure, and Team Breakdown Structure have to be fully and consistently populated.  Consistency of a Delivery Process is actually ensured by the fact that all three breakdowns are represented by one single data structure and one particular breakdown such as Team Breakdown is just a view on that data structure.
</body>
      </ownedComment>
      <generalization xmi:id="_y-4KMu-sEduH59KSHV8vgA" general="_y-4KOe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y-4KM--sEduH59KSHV8vgA" name="educationMaterials" visibility="public" type="_yz1-8--sEduH59KSHV8vgA" association="_y_BUPO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KNO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KNe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KNu-sEduH59KSHV8vgA" name="communicationsMaterials" visibility="public" type="_yz1-8--sEduH59KSHV8vgA" association="_y_BUQe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KN--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KOO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y-4KP--sEduH59KSHV8vgA" name="ProcessPlanningTemplate">
      <ownedComment xmi:id="_y-4KQO-sEduH59KSHV8vgA" annotatedElement="_y-4KP--sEduH59KSHV8vgA">
        <body>A Process Planning Template is a special Process that is prepared for instantiation by a project planning tool.  Typically, it is created based on a Process such as a Delivery Process as a whole (e.g. in case of a waterfall-based development approach) or in parts (e.g. in case of an iterative development approach).
A Process Planning Template represents a partially finished plan for a concrete project.  It uses the same information structures as all other Process Types to represent templates for project plans.  However, certain planning decisions have already been applied to the template as well as information has been removed and/or reformatted to be ready for export to a specific planning tool.  Examples for such decisions are: a template has been created to represent a plan for a particular Iteration in an iterative development project, which fr example distinguishes early from late iterations in the Elaboration phase of a project; if the targeted planning tool cannot represent input and output of Task, then these have been removed from the structure; certain repetitions have been already applied, e.g. stating that a cycle of specific Task grouped in an Activity have to be repeated n-times; etc.
</body>
      </ownedComment>
      <generalization xmi:id="_y-4KQe-sEduH59KSHV8vgA" general="_y-4KOe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y-4KQu-sEduH59KSHV8vgA" name="basedOnProcesses" visibility="public" type="_y-4KOe-sEduH59KSHV8vgA" association="_y_BUL--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KQ--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KRO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y-4KRe-sEduH59KSHV8vgA" name="Roadmap">
      <ownedComment xmi:id="_y-4KRu-sEduH59KSHV8vgA" annotatedElement="_y-4KRe-sEduH59KSHV8vgA">
        <body>A Roadmap is a special Guidance Type which is only related to Activates and therefore has been added by this package to the list of Guidance Types rather than listed in the Guidance Types package.  A Roadmap represents a linear walkthrough of an Activity, typically a Process.
An instance of a Roadmap represents important documentation for the Activity or Process it is related to.  Often a complex Activity such as a Process can be much easier understood by providing a walkthrough with a linear thread of a typical instantiation of this Activity.  In addition to making the process practitioner understand how work in the process is being performed, a Roadmap provides additional information about how Activities and Tasks relate to each other over time.  Roadmaps are also used to show how specific aspects are distributed over a whole process providing a kind of filter on the process for this information.
</body>
      </ownedComment>
      <generalization xmi:id="_y-4KR--sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y2OkgO-sEduH59KSHV8vgA" name="Discipline">
      <ownedComment xmi:id="_y2Okge-sEduH59KSHV8vgA" annotatedElement="_y2OkgO-sEduH59KSHV8vgA">
        <body>A Discipline is a categorization of work (i.e. Tasks for Method Content), based upon similarity of concerns and cooperation of work effort.
A discipline is a collection of Tasks that are related to a major 'area of concern' within the overall project. The grouping of Tasks into disciplines is mainly an aid to understanding the project from a 'traditional' waterfall perspective. However, typically, for example, it is more common to perform certain requirements activities in close coordination with analysis and design activities. Separating these activities into separate disciplines makes the activities easier to comprehend.
</body>
      </ownedComment>
      <ownedComment xmi:id="_y_BUIO-sEduH59KSHV8vgA" annotatedElement="_y2OkgO-sEduH59KSHV8vgA">
        <body>Discipline is a categorization of Tasks based upon similarity of concerns and cooperation of work effort.  This is the extensions of Discipline defined in the Method Core package adding an additional association to Activities, which represent typical standard or reference ways of meaningful groupings of the Discipline's Tasks into workflows.
Tasks represent descriptions of work, which are categorized by Disciplines.  The reason that several Tasks are all categorized by the same Discipline is that they all represent a part in achieving a higher goal or performing work that is all related to each other.  Every Discipline defines standard ways of doing the work it categorizes.  Such standard ways are express by Activities or Capability Patterns defining how the Tasks categorized by the Discipline 'work together' in the most generic way.  These reference workflows are often used for educating and teaching practitioners. 
</body>
      </ownedComment>
      <generalization xmi:id="_y2Okgu-sEduH59KSHV8vgA" general="_y2Oknu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y2Okg--sEduH59KSHV8vgA" name="tasks" visibility="public" type="_yyzdGu-sEduH59KSHV8vgA" association="_y2Ok5--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2OkhO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2Okhe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y2Okhu-sEduH59KSHV8vgA" name="subdiscipline" visibility="public" type="_y2OkgO-sEduH59KSHV8vgA" aggregation="composite" association="_y2Ok7O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y2Okh--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y2OkiO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y_BUIe-sEduH59KSHV8vgA" name="referenceWorkflows" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" association="_y_BUSO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUIu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUI--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yz1-_--sEduH59KSHV8vgA" name="Practice">
      <ownedComment xmi:id="_yz1_AO-sEduH59KSHV8vgA" annotatedElement="_yz1-_--sEduH59KSHV8vgA">
        <body>A Practice represents a proven way or strategy of doing work to achieve a goal that has a positive impact on work product or process quality.  Practices are defined orthogonal to methods and processes.  They could summarize aspects that impact many different parts of a method or specific processes.  Examples for practices would be &quot;Manage Risks&quot;, &quot;Continuously verify quality&quot;, &quot;Architecture-centric and component-based development&quot;, etc.
</body>
      </ownedComment>
      <generalization xmi:id="_yz1_Ae-sEduH59KSHV8vgA" general="_yyzdM--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yz1_Au-sEduH59KSHV8vgA" name="subPractices" visibility="public" type="_yz1-_--sEduH59KSHV8vgA" aggregation="composite" association="_yz_wKu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_A--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_BO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz1_Be-sEduH59KSHV8vgA" name="contentReferences" visibility="public" type="_yxw7VO-sEduH59KSHV8vgA" association="_y0Jg4O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz1_Bu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz1_B--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y_BUJO-sEduH59KSHV8vgA" name="activityReferences" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" association="_y_BUTe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUJe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUJu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y_BUJ--sEduH59KSHV8vgA" name="CapabilityPattern">
      <ownedComment xmi:id="_y_BUKO-sEduH59KSHV8vgA" annotatedElement="_y_BUJ--sEduH59KSHV8vgA">
        <body>A Capability Pattern is a special Process that describes a reusable cluster of doing work in common process areas.  Capabilities Patterns express and communicate process knowledge for a key area of interest such as a Discipline and can be directly used by process practitioner to guide his work.  They are also used as building blocks to assemble Delivery Processes or larger Capability Patterns ensuring optimal reuse and application of the key practices they express.
A Capability Pattern is a special Process that describes a reusable cluster of doing work in a general process area that provides a consistent development approach to common problems.  Examples for Capability Pattern could be 'use case-based requirements management', 'use case analysis', or 'unit testing'. Typically but not necessarily, Capability Patterns have the scope of one discipline providing a breakdown of reusable complex Activities, relationships to the Roles which perform Tasks within these Activities, as well as to the Work Products that are used and produced.  A capability pattern does not relate to any specific phase or iteration of a development lifecycle, and should not imply any.  In other words, a pattern should be designed in a way that it is applicable anywhere in a Delivery Process.  This enables its Activities to be flexibly assigned to whatever phases there are in the Delivery Process to which it is being applied.  It is a good practice to design a Capability Pattern to produce one or more generic Deliverables.  The typical configuration is that each Activity in the Capability Pattern produces one Deliverable, and the last Task Descriptor in the Activity explicitly outputs just this Deliverable.  This enables the process engineer to select Patterns or just Activities by deciding which Deliverables are required.  It also offers a simple integration approach: an Activity from a capability pattern is linked to the Phase or Iteration which is required to produce the Activity's Deliverable.  Key applications areas of / areas of reuse for Capability Patterns are:
- To serve as building blocks for assembling Delivery Processes or larger Capability Patterns.  Normally developing a Delivery Process is not done from scratch but by systematically applying and binding patterns.  In addition to the standard pattern application of 'copy-and-modify', which allows the process engineer to individually customize the pattern's content to the particular situation it is applied for, the Plugin meta-model package (Section 6.1) introduces even more sophisticated inheritance relationships that support dynamic binding of patterns (i.e. the pattern is referenced and not copied).  This unique new way of reusing process knowledge allows to factor out commonly reoccurring Activities into patterns and to apply them over and over again for a process.  When the pattern is being revised or updated, all changes will be automatically reflected in all pattern application in all processes because of the dynamic binding.
- To support direct execution in a development project that does not work following a well-defined process, but works based on loosely connected process fragments of best practices in a flexible manner (e.g. Agile Development).
- To support process education by describing knowledge for a key area such as best practices on how to perform the work for a Discipline (e.g. Requirements Management), for a specific development technique (aspect-oriented development), or a specific technical area (e.g. relational database design), which is used for education and teaching.
</body>
      </ownedComment>
      <generalization xmi:id="_y_BUKe-sEduH59KSHV8vgA" general="_y-4KOe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUKu-sEduH59KSHV8vgA" memberEnd="_y-4KPO-sEduH59KSHV8vgA _y_BULO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUK--sEduH59KSHV8vgA" annotatedElement="_y_BUKu-sEduH59KSHV8vgA">
        <body>This association provides traceability for a Process documenting which Capability Patterns have been used for defining the process.  It documents applications of a pattern through copy as well as pattern binding.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BULO-sEduH59KSHV8vgA" name="_process" visibility="public" type="_y-4KOe-sEduH59KSHV8vgA" isUnique="false" association="_y_BUKu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BULe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BULu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUL--sEduH59KSHV8vgA" memberEnd="_y-4KQu-sEduH59KSHV8vgA _y_BUMe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUMO-sEduH59KSHV8vgA" annotatedElement="_y_BUL--sEduH59KSHV8vgA">
        <body>If the Plan has been created based on one or more processes (i.e. other Plans, Capability Patterns, a Delivery Process, or any combination of these), then this association captures a trace back to these sources.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUMe-sEduH59KSHV8vgA" name="_processPlanningTemplate" visibility="public" type="_y-4KP--sEduH59KSHV8vgA" isUnique="false" association="_y_BUL--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUMu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUM--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUNO-sEduH59KSHV8vgA" memberEnd="_y7vW1O-sEduH59KSHV8vgA _y_BUNu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUNe-sEduH59KSHV8vgA" annotatedElement="_y_BUNO-sEduH59KSHV8vgA">
        <body>The PlanningData class factors out specific optional data needed for representing planning templates.  This association allows to access planning data if it is stored for the Breakdown Element.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUNu-sEduH59KSHV8vgA" name="_breakdownElement" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUNO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUN--sEduH59KSHV8vgA" memberEnd="_y-4KSe-sEduH59KSHV8vgA _y_BUOe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUOO-sEduH59KSHV8vgA" annotatedElement="_y_BUN--sEduH59KSHV8vgA">
        <body>This association links an Activity to zero or mores instances of the Roadmap guidance type.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUOe-sEduH59KSHV8vgA" name="activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" association="_y_BUN--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUOu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUO--sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUPO-sEduH59KSHV8vgA" memberEnd="_y_BUPu-sEduH59KSHV8vgA _y-4KM--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUPe-sEduH59KSHV8vgA" annotatedElement="_y_BUPO-sEduH59KSHV8vgA">
        <body>This association defines a collection of guidance documents that provide education material for teaching stakeholders such as project managers on how to perform projects that follow this Delivery Process.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUPu-sEduH59KSHV8vgA" name="_deliveryProcess" visibility="private" type="_y-4KMO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUPO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUP--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUQO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUQe-sEduH59KSHV8vgA" memberEnd="_y_BUQ--sEduH59KSHV8vgA _y-4KNu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUQu-sEduH59KSHV8vgA" annotatedElement="_y_BUQe-sEduH59KSHV8vgA">
        <body>This association defines a collection of guidance documents that have been related to a Delivery Process instance to describe and characterize its features and capabilities. These documents can be used for several purposes such as internal marketing communications, sales training and general method education.  Examples for Communications Material are Highlight Document, Fact Sheet, and Delivery Process Specification Overview.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUQ--sEduH59KSHV8vgA" name="_deliveryProcess" visibility="private" type="_y-4KMO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUQe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BURO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BURe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BURu-sEduH59KSHV8vgA" name="BreakdownNesting" memberEnd="_y7vW1--sEduH59KSHV8vgA _y7mMtO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUR--sEduH59KSHV8vgA" annotatedElement="_y_BURu-sEduH59KSHV8vgA">
        <body>This bidirectional association represents breakdown structure nesting.  It defines an n-level hierarchy of Activities grouping together other Breakdown Elements such as other Activities, Descriptors, Milestones, etc.
The superActivities role allows navigation of a Breakdown Element to is parent Activity. The breakdownElements role allows navigation from an Activity to its nested Breakdown Elements.
</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUSO-sEduH59KSHV8vgA" memberEnd="_y_BUIe-sEduH59KSHV8vgA _y_BUSu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUSe-sEduH59KSHV8vgA" annotatedElement="_y_BUSO-sEduH59KSHV8vgA">
        <body>This association provides one more reference workflows for a Discipline.  The reference workflows define the most typical ways of doing the work of a Discipline.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUSu-sEduH59KSHV8vgA" name="_discipline" visibility="public" type="_y2OkgO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUSO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUS--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUTO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUTe-sEduH59KSHV8vgA" memberEnd="_y_BUJO-sEduH59KSHV8vgA _y_BUTu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_y_BUTu-sEduH59KSHV8vgA" name="_practice" visibility="public" type="_yz1-_--sEduH59KSHV8vgA" isUnique="false" association="_y_BUTe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUT--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUUO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUUe-sEduH59KSHV8vgA" memberEnd="_y-4KTO-sEduH59KSHV8vgA _y_BUU--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUUu-sEduH59KSHV8vgA" annotatedElement="_y_BUUe-sEduH59KSHV8vgA">
        <body>This association can be used to link all kinds of general guidance to the Activity that is being managed as general Supporting Material.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUU--sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUUe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUVO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUVe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUVu-sEduH59KSHV8vgA" memberEnd="_y-4KT--sEduH59KSHV8vgA _y_BUWO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUV--sEduH59KSHV8vgA" annotatedElement="_y_BUVu-sEduH59KSHV8vgA">
        <body>This association provides Activity- (or Process-) specific check points.  These are typically used in reviews and inspections on the work performed.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUWO-sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUVu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUWe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUWu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUW--sEduH59KSHV8vgA" memberEnd="_y-4KUu-sEduH59KSHV8vgA _y_BUXe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUXO-sEduH59KSHV8vgA" annotatedElement="_y_BUW--sEduH59KSHV8vgA">
        <body>This association relates concepts or whitepapers to the Activity providing important background information necessary for doing the work described by the Activity.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUXe-sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUW--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUXu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUX--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUYO-sEduH59KSHV8vgA" memberEnd="_y-4KVe-sEduH59KSHV8vgA _y_BUYu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUYe-sEduH59KSHV8vgA" annotatedElement="_y_BUYO-sEduH59KSHV8vgA">
        <body>This association can provide references to examples relevant to this specific Activity (or Process).  </body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUYu-sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUYO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUY--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUZO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUZe-sEduH59KSHV8vgA" memberEnd="_y-4KWO-sEduH59KSHV8vgA _y_BUZ--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUZu-sEduH59KSHV8vgA" annotatedElement="_y_BUZe-sEduH59KSHV8vgA">
        <body>This association provides Activity-specific Guidelines.</body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUZ--sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUZe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y_BUaO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y_BUae-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_y_BUau-sEduH59KSHV8vgA" memberEnd="_y-4KW--sEduH59KSHV8vgA _y_BUbO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_y_BUa--sEduH59KSHV8vgA" annotatedElement="_y_BUau-sEduH59KSHV8vgA">
        <body>This association refers to Reusable Assets specific to this Activity (or Process). </body>
      </ownedComment>
      <ownedEnd xmi:id="_y_BUbO-sEduH59KSHV8vgA" name="_activity" visibility="public" type="_y7mMsO-sEduH59KSHV8vgA" isUnique="false" association="_y_BUau-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBZ5wO-sEduH59KSHV8vgA" name="BreakdownElementDescription">
      <generalization xmi:id="_zBZ5we-sEduH59KSHV8vgA" general="_yxw7V--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zBZ5wu-sEduH59KSHV8vgA" name="usageGuidance" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ5w--sEduH59KSHV8vgA" annotatedElement="_zBZ5wu-sEduH59KSHV8vgA">
          <body>Provides information and guidance on the meaning of the Boolean flag values and under what circumstances they should be overridden. For example, it describes why the breakdown element is optional or considerations for repeating it and differences in the individual occurrences of this Breakdown Element across the lifecycle.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ5xO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ5xe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ5xu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBZ5x--sEduH59KSHV8vgA" name="ActivityDescription">
      <generalization xmi:id="_zBZ5yO-sEduH59KSHV8vgA" general="_zBZ5wO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zBZ5ye-sEduH59KSHV8vgA" name="purpose" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ5yu-sEduH59KSHV8vgA" annotatedElement="_zBZ5ye-sEduH59KSHV8vgA">
          <body>Summarizes the main reason for performing this Activity, describes what the activity as a whole is intended to achieve.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ5y--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ5zO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ5ze-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ5zu-sEduH59KSHV8vgA" name="alternatives" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ5z--sEduH59KSHV8vgA" annotatedElement="_zBZ5zu-sEduH59KSHV8vgA">
          <body>Comprises of summaries describing important exceptional and non-standard ways of doing the work of this Activity not covered by the Activity's Tasks.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ50O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ50e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ50u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ50--sEduH59KSHV8vgA" name="howtoStaff" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ51O-sEduH59KSHV8vgA" annotatedElement="_zBZ50--sEduH59KSHV8vgA">
          <body>Provides background on who should be involved in this activity what are the required skills, experience,  and perhaps attitudes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ51e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ51u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ51--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBZ52O-sEduH59KSHV8vgA" name="DeliveryProcessDescription">
      <generalization xmi:id="_zBZ52e-sEduH59KSHV8vgA" general="_zBZ5-O-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zBZ52u-sEduH59KSHV8vgA" name="scale" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ52--sEduH59KSHV8vgA" annotatedElement="_zBZ52u-sEduH59KSHV8vgA">
          <body>Outlines characteristics about the size of a typical project that performs this project expressed in team size, man years, etc.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ53O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ53e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ53u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ53--sEduH59KSHV8vgA" name="projectCharacteristics" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ54O-sEduH59KSHV8vgA" annotatedElement="_zBZ53--sEduH59KSHV8vgA">
          <body>Characterizes the project that would typically perform this Process</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ54e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ54u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ54--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ55O-sEduH59KSHV8vgA" name="riskLevel" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ55e-sEduH59KSHV8vgA" annotatedElement="_zBZ55O-sEduH59KSHV8vgA">
          <body>Outlines typical project risks that are addressed with this process.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ55u-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ55--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ56O-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ56e-sEduH59KSHV8vgA" name="estimatingTechnique" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ56u-sEduH59KSHV8vgA" annotatedElement="_zBZ56e-sEduH59KSHV8vgA">
          <body>Describes the Estimation Techniques provided for this Process.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ56--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ57O-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ57e-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ57u-sEduH59KSHV8vgA" name="projectMemberExpertise" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ57--sEduH59KSHV8vgA" annotatedElement="_zBZ57u-sEduH59KSHV8vgA">
          <body>Provides a profile of a typical project team, the distribution of roles, skills required for a team performs a project based on this process.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ58O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ58e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ58u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ58--sEduH59KSHV8vgA" name="typeOfContract" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ59O-sEduH59KSHV8vgA" annotatedElement="_zBZ58--sEduH59KSHV8vgA">
          <body>Provides background information about the contracts that need to be established between a project team that performs this process and a client (e.g. for an IGS engagement).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ59e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ59u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ59--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBZ5-O-sEduH59KSHV8vgA" name="ProcessDescription">
      <generalization xmi:id="_zBZ5-e-sEduH59KSHV8vgA" general="_zBZ5x--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zBZ5-u-sEduH59KSHV8vgA" name="scope" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ5---sEduH59KSHV8vgA" annotatedElement="_zBZ5-u-sEduH59KSHV8vgA">
          <body>Defines the scope of the Process, i.e. which types of projects does it address and which not.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ5_O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ5_e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ5_u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zBZ5_--sEduH59KSHV8vgA" name="usageNotes" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ6AO-sEduH59KSHV8vgA" annotatedElement="_zBZ5_--sEduH59KSHV8vgA">
          <body>Any additional notes on how to apply and instantiate this process for a project.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ6Ae-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ6Au-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ6A--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zBZ6BO-sEduH59KSHV8vgA" name="DescriptorDescription">
      <generalization xmi:id="_zBZ6Be-sEduH59KSHV8vgA" general="_zBZ5wO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zBZ6Bu-sEduH59KSHV8vgA" name="refinedDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zBZ6B--sEduH59KSHV8vgA" annotatedElement="_zBZ6Bu-sEduH59KSHV8vgA">
          <body>A Descriptor might add refinements to the main description of the Content Element it refers to.  For example, it could provide additional information about a Work Product relevant for the specific point in time in the process this Work Product type is being used.  It could describe additional skills needed for a Role at that particular point in time in a process, etc. </body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ6CO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ6Ce-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zBZ6Cu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zBZ6C--sEduH59KSHV8vgA" memberEnd="_y7vXB--sEduH59KSHV8vgA _zBZ6De-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zBZ6DO-sEduH59KSHV8vgA" annotatedElement="_zBZ6C--sEduH59KSHV8vgA">
        <body>List the steps that have been selected to be performed for the instance of the Task Descriptor.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zBZ6De-sEduH59KSHV8vgA" name="_taskDescriptor" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" isUnique="false" association="_zBZ6C--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zBZ6Du-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zBZ6D--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zDpVe--sEduH59KSHV8vgA" name="ProcessComponentDescriptor">
      <ownedComment xmi:id="_zDpVfO-sEduH59KSHV8vgA" annotatedElement="_zDpVe--sEduH59KSHV8vgA">
        <body>A Process Component Descriptor represents a Process Component application in a Process, i.e. the breakdown structure defining the Process.  The Process Component Descriptor is used to encapsulate the details of the component in a breakdown structure and to provide its own set of relationships such as it own predecessors and successors.</body>
      </ownedComment>
      <generalization xmi:id="_zDpVfe-sEduH59KSHV8vgA" general="_y7vW2u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zDpVfu-sEduH59KSHV8vgA" name="_processComponent" visibility="public" type="_zDpVcO-sEduH59KSHV8vgA" isUnique="false" association="_zDpVn--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVf--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVgO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zDpVge-sEduH59KSHV8vgA" name="ProcessComponentInterface">
      <ownedComment xmi:id="_zDpVgu-sEduH59KSHV8vgA" annotatedElement="_zDpVge-sEduH59KSHV8vgA">
        <body>A Process Component Interface comprises of a list of interface specifications (similar to operation declarations) that express inputs and outputs for a process component.  These interface specifications are expressed using Task Descriptors which are not linked to Tasks that are related to Work Product Descriptors as well as optional a Role Descriptor.</body>
      </ownedComment>
      <generalization xmi:id="_zDpVg--sEduH59KSHV8vgA" general="_y7vWvO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zDpVhO-sEduH59KSHV8vgA" name="interfaceSpecifications" visibility="public" type="_y7vW6--sEduH59KSHV8vgA" aggregation="composite" association="_zDpVle-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVhe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVhu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zDpVh--sEduH59KSHV8vgA" name="interfaceIO" visibility="public" type="_y7vXCu-sEduH59KSHV8vgA" aggregation="composite" association="_zDpVmu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpViO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVie-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVkO-sEduH59KSHV8vgA" memberEnd="_zDpVku-sEduH59KSHV8vgA _zDpVde-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVke-sEduH59KSHV8vgA" annotatedElement="_zDpVkO-sEduH59KSHV8vgA">
        <body>This association describes the realization relationships between a Process Component and a Process Component Interface.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVku-sEduH59KSHV8vgA" name="realizedBy" visibility="public" type="_zDpVcO-sEduH59KSHV8vgA" association="_zDpVkO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVk--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVlO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVle-sEduH59KSHV8vgA" memberEnd="_zDpVl--sEduH59KSHV8vgA _zDpVhO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVlu-sEduH59KSHV8vgA" annotatedElement="_zDpVle-sEduH59KSHV8vgA">
        <body>Instances of this association contain the list of Task Descriptors that represent a Process Component Interface.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVl--sEduH59KSHV8vgA" name="_processComponentInterface" visibility="private" type="_zDpVge-sEduH59KSHV8vgA" isUnique="false" association="_zDpVle-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVmO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVme-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVmu-sEduH59KSHV8vgA" memberEnd="_zDpVh--sEduH59KSHV8vgA _zDpVnO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVm--sEduH59KSHV8vgA" annotatedElement="_zDpVmu-sEduH59KSHV8vgA">
        <body>This association contains the input and output Work Product type instances used for the interface specification.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVnO-sEduH59KSHV8vgA" name="_processComponentInterface" visibility="public" type="_zDpVge-sEduH59KSHV8vgA" isUnique="false" association="_zDpVmu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVne-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVnu-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVn--sEduH59KSHV8vgA" memberEnd="_zDpVfu-sEduH59KSHV8vgA _zDpVoe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVoO-sEduH59KSHV8vgA" annotatedElement="_zDpVn--sEduH59KSHV8vgA">
        <body>This association represents the reference from the descriptor to the Process Component it refers to.  A Process Component Descriptor represents exactly one Process Component.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVoe-sEduH59KSHV8vgA" name="_processComponentDescriptor" visibility="public" type="_zDpVe--sEduH59KSHV8vgA" isUnique="false" association="_zDpVn--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVou-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVo--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVpO-sEduH59KSHV8vgA" memberEnd="_zDpVeO-sEduH59KSHV8vgA _zDpVpu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVpe-sEduH59KSHV8vgA" annotatedElement="_zDpVpO-sEduH59KSHV8vgA">
        <body>A Process Component contains only exactly one Process.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVpu-sEduH59KSHV8vgA" name="_processComponent" visibility="public" type="_zDpVcO-sEduH59KSHV8vgA" isUnique="false" association="_zDpVpO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVp--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVqO-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zDpVqe-sEduH59KSHV8vgA" memberEnd="_zDpVje-sEduH59KSHV8vgA _zDpVq--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zDpVqu-sEduH59KSHV8vgA" annotatedElement="_zDpVqe-sEduH59KSHV8vgA">
        <body>A Process Package contains Process Elements which are used to define Breakdown and Processes.  A Process Element instance can be part of only one Process Package instance.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zDpVq--sEduH59KSHV8vgA" name="_processPackage" visibility="public" type="_zDpViu-sEduH59KSHV8vgA" isUnique="false" association="_zDpVqe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7VO-sEduH59KSHV8vgA" name="ContentElement" isAbstract="true">
      <ownedComment xmi:id="_yxw7Ve-sEduH59KSHV8vgA" annotatedElement="_yxw7VO-sEduH59KSHV8vgA">
        <body>Content Element is a Describable Element that represents an abstract generalization for all elements that are considered to be and managed as Method Content.
Content Elements represents reusable Method Content that is supposed to be managed in Content Packages.  The separation of Content Element from Process Element allows to clearly distinguish between pure method content from content that is represented in processes.
</body>
      </ownedComment>
      <ownedComment xmi:id="_yz_v5u-sEduH59KSHV8vgA" annotatedElement="_yxw7VO-sEduH59KSHV8vgA">
        <body>This is the Guidance Types package's extension of Content Element (defined in Content Elements) providing additonal associations.</body>
      </ownedComment>
      <ownedComment xmi:id="_zGLFDO-sEduH59KSHV8vgA" annotatedElement="_yxw7VO-sEduH59KSHV8vgA">
        <body>Content Element in the package Method Plugin inherits from Variability Element and not directly from Method Element anymore.  This is achieved using UML 2.0 package merge semantics.  Only if an adopter of this meta-model decides to realize Method Plugins, he would get the variability and extension capabilities for all Content Elements.
Content Element inherits the semantics of Variability Element.
</body>
      </ownedComment>
      <generalization xmi:id="_yxw7Vu-sEduH59KSHV8vgA" general="_yxw7eu-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_zGLFDe-sEduH59KSHV8vgA" general="_zGLFJO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yz_v5--sEduH59KSHV8vgA" name="supportingMaterials" visibility="public" type="_yz1-8--sEduH59KSHV8vgA" association="_yz_wAu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v6O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v6e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v6u-sEduH59KSHV8vgA" name="conceptsAndPapers" visibility="public" type="_yz1-4e-sEduH59KSHV8vgA" association="_yz_wB--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v6--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v7O-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v7e-sEduH59KSHV8vgA" name="checklists" visibility="public" type="_yz1-5O-sEduH59KSHV8vgA" association="_yz_wDO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v7u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v7--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v8O-sEduH59KSHV8vgA" name="guidelines" visibility="public" type="_yz1-6u-sEduH59KSHV8vgA" association="_yz_wEe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v8e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v8u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v8--sEduH59KSHV8vgA" name="examples" visibility="public" type="_yz1-5--sEduH59KSHV8vgA" association="_yz_wG--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v9O-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v9e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v9u-sEduH59KSHV8vgA" name="assets" visibility="public" type="_yz_v_O-sEduH59KSHV8vgA" association="_y0Jg5e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v9--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v-O-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yz_v-e-sEduH59KSHV8vgA" name="termDefinition" visibility="public" type="_yz1-_O-sEduH59KSHV8vgA" association="_y0Jg9u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yz_v-u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yz_v---sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7Qe-sEduH59KSHV8vgA" name="MethodElement" isAbstract="true">
      <ownedComment xmi:id="_yxw7Qu-sEduH59KSHV8vgA" annotatedElement="_yxw7Qe-sEduH59KSHV8vgA">
        <body>Every class defined in this specification is derived from Method Element.  In other words Method Element is the root generalization for all UMA classes and defines a common set of attributes inherited by every other element type of this model.  Method Element itself is derived from Packageable Element from the UML 2.0 Infrastructure.  Method Element inherits the Name attribute from Packageable Element's super class.  Every element defined as a UMA instance is derived from Model Element.  Every Method Element in-stance is at least defined by a unique id, a name, as well as brief description.</body>
      </ownedComment>
      <ownedComment xmi:id="_zGLFDu-sEduH59KSHV8vgA" annotatedElement="_yxw7Qe-sEduH59KSHV8vgA">
        <body>Method Element in the package Method Plugin adds additional properties via package merge to Method Element defined in Method Core needed for the variability and extensibility capabilities introduces in this package.</body>
      </ownedComment>
      <generalization xmi:id="_yxw7Q--sEduH59KSHV8vgA" general="_yxKfFu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7RO-sEduH59KSHV8vgA" name="guid" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7Re-sEduH59KSHV8vgA" annotatedElement="_yxw7RO-sEduH59KSHV8vgA">
          <body>Every instance of Method Element has a global unique id.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7Ru-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7R--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7SO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7Se-sEduH59KSHV8vgA" name="briefDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7Su-sEduH59KSHV8vgA" annotatedElement="_yxw7Se-sEduH59KSHV8vgA">
          <body>Every instance of Method Element shall be briefly described with one or two sentences summarizing the element.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7S--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7TO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7Te-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7Tu-sEduH59KSHV8vgA" name="ownedRules" visibility="public" type="_yxw7cu-sEduH59KSHV8vgA" aggregation="composite" association="_yxw7jO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7T--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7UO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7Ue-sEduH59KSHV8vgA" name="methodElementProperty" visibility="public" type="_yxw7hu-sEduH59KSHV8vgA" aggregation="composite" association="_yx6FMO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7Uu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7U--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFD--sEduH59KSHV8vgA" name="suppressed" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zGLFEO-sEduH59KSHV8vgA" annotatedElement="_zGLFD--sEduH59KSHV8vgA">
          <body>If a Variability Element is derived from another Variability Element using the Extends Variability Specialization then this attribute can be used to suppress inherited Method Elements that were part of the based-on Variability Element, which can be any type of Method Element.  In other words, if this attribute is set to true on a Method Element that has the same name than an inherited method element then it will not be regarded as inherited at all.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zGLFEe-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>false</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFEu-sEduH59KSHV8vgA" name="orderingGuide" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zGLFE--sEduH59KSHV8vgA" annotatedElement="_zGLFEu-sEduH59KSHV8vgA">
          <body>This attribute is used for CASE tool realizations of this model to contain information about layout and ordering of the method element and its parts.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGLFFO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGLFFe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zGLFFu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_zGLFF--sEduH59KSHV8vgA" name="VariabilityType">
      <ownedComment xmi:id="_zGLFGO-sEduH59KSHV8vgA" annotatedElement="_zGLFF--sEduH59KSHV8vgA">
        <body>Variability Type is an Enumeration used for values for instances of Variability Element's attribute variabilityType.  It defines the nature of how a Variability Element extends another Variability Element. See enumeration literals for definitions for each type.</body>
      </ownedComment>
      <ownedLiteral xmi:id="_zGLFGe-sEduH59KSHV8vgA" name="na">
        <ownedComment xmi:id="_zGLFGu-sEduH59KSHV8vgA" annotatedElement="_zGLFGe-sEduH59KSHV8vgA">
          <body>This is the default &quot;not assigned&quot; value of a Variabillity Element's variabilityType attribute which is set in the case no variability association is present between the Variability Element and other Variability Elements.
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_zGLFG--sEduH59KSHV8vgA" name="contributes">
        <ownedComment xmi:id="_zGLFHO-sEduH59KSHV8vgA" annotatedElement="_zGLFG--sEduH59KSHV8vgA">
          <body>Contributes provides a way for instances of Variability Elements to contribute their properties into their base Variability Element without directly altering any of its existing properties, i.e. in an additive fashion.  Properties contributed are: attribute values and association instances.  The effect after interpretation of contribution is that the base Variability Element is logically replaced with an augmented variant of the element that combines attribute values and association instances.  The way this combination is realized depends on the type of the attribute or association.  For example, String attributes are concatenated resolving embedded commands for dependent text or merging text fragments (e.g. descriptions for content elements).  Additional elements in to-many associations are added (e.g. additional Guidance elements or Task Descriptors of an Activity).  Different elements in to-one associations are ignored (e.g. the one Primary Performer of a Task).  Multiple Content Elements can contribute to the same base element and all of these contributions properties are added to the base in the same fashion. The following table provides the detailed list of interpretation rules:
attribute values:	String values from the special Variability Element are concatenated with values from the based-on Variability Element.  Other values from the special Variability Element of any other type such as Integer, Date are ignored.
The identifying attributes guid and name of Method Element are exempt from this rule and will not be modified.
0..1-association instances:	The one association instance of the based-on Variability Element is kept and any association from the contributing special Variability Element is ignored.
0..n-association instances:	Association instances of the special Variability Element are added to the already existing association instances of the based-on element.  If both Variability Elements refer to the same object then only one instance of the association will remain.
</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_zGLFHe-sEduH59KSHV8vgA" name="extends">
        <ownedComment xmi:id="_zGLFHu-sEduH59KSHV8vgA" annotatedElement="_zGLFHe-sEduH59KSHV8vgA">
          <body>Extension allows Method Plugins to easily reuse elements from a Base Plugin by providing a kind of inheritance for the special Variability Element.  Attribute values and Association instances are inherited from the based-on Variability Element to the special Variability Element.  The result of interpretation is that the special element has the same properties as the based-on has, but might define its own additions.  Hence extends is not used to modify content of the base Plugin, but to provide the ability for the extending Plugin to define its own content which is a variant of content already defined (e.g. a special version of a generic Review Record for a specific type of review).  The effect of this is that the base Variability Element and any number of extending Variability Elements can be used side by side, but refer to each other via the extends relationship.  Extends also provides the key mechanism for binding Capability Patterns to Processes: A pattern is applied by defining an extends relationships from an Activity of the applying Processes to the Pattern.  The Activity inherits associations instances from the pattern and the pattern appears to be part of the resulting Process after Interpretation.
attribute values:	Values from the based-on Variability element are inherited and used to populate the special Variability Elements attributes.  If the special element attributes are already populated the inherited values are ignored.  
The identifying attributes guid and name of Method Element are exempt from this rule and will not be modified.
0..1-association instances:	The one association instance of the based-on Variability Element is inherited to the special Variability Element.  If the special Variability Element defines its own association instance then the inherited one is ignored.
0..n-association instances:	Association instances defined for the based-on Variability Element are inherited to the special Variability Element.  The special element can add additional association instances.

</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_zGLFH--sEduH59KSHV8vgA" name="replaces">
        <ownedComment xmi:id="_zGLFIO-sEduH59KSHV8vgA" annotatedElement="_zGLFH--sEduH59KSHV8vgA">
          <body>Replaces provides a way for Variability Elements to replace a base Variability Element without directly changing any of its existing properties.  This is in most cases used for Method Plugins that aim to replace specific Content Elements such as Roles, Task, or Activities with either a complete new variant or to change fundamental relationships of these elements (e.g. Role-Artifact responsibility).  Properties replaced are attribute values and association instances.  The effect of this is that the base Content Element is logically replaced with this new variant of the element to which all incoming associations still point as before, but which has potentially new attribute values and outgoing association properties.  This provides a very powerful mechanism to replace, for example, whole Activities in a Process with complete new realizations of the Activity.  For instance, replacing an Activity doing use case-based design with an activity doing agile code-centric development doing the same work using a different development technique utilizing different Roles, Tasks, etc.  Another example, would be to replace an Activity that describes database design for an RDBMS with an Activity that describes database design for an OODBMS.  A Variability Element can only be replaced by one other element at a time.  For example, if two Method Plugins replace the same element only one Method Plugin can be used for interpretation (see concept of Method Configuration for more details on how to resolve such conflicts, Section 7.1.2).  The following table provides the detailed list of interpretation rules:
attribute values:	Values from the special Variability Element are replaced with values from the based-on Variability Element including unassigned values.
The identifying attributes guid and name of Method Element are exempt from this rule and will not be modified.
0..1-association instances:	The one association instance of the based-on Variability Element is replaced with the association instance from the replacing special Variability Element.  If the special Variability Element does not have an association instance then resulting element will also not have an association.
0..n-association instances:	Association instances of the special Variability Element replace all association instances of the based-on Variability Element.

</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="_zGLFIe-sEduH59KSHV8vgA" name="localContribution"/>
      <ownedLiteral xmi:id="_zGLFIu-sEduH59KSHV8vgA" name="localReplacement"/>
      <ownedLiteral xmi:id="_zGLFI--sEduH59KSHV8vgA" name="extendsReplaces"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zGLFJO-sEduH59KSHV8vgA" name="VariabilityElement" isAbstract="true">
      <ownedComment xmi:id="_zGLFJe-sEduH59KSHV8vgA" annotatedElement="_zGLFJO-sEduH59KSHV8vgA">
        <body>Variability Element is an abstract class derived from Method Element that provides new capabilities for content variation and extension to Content Elements or any other Method Element that derives from it.  It has been placed in-between the classes Method Element and Content Element in the overall UMA taxonomy of classes using the UML 2.0 package merge mechanism.  The association Variability Specialization shall only be instantiated between two subclasses of Variability Element of the same type.  The element on varaibilitySpecialElement side of the relationship defines a value for the attribute variabilityType defining the nature of the relationship using a literal from the enumeration Variability Type.
Variability Element of the meta-model package Method Plugins adds the capabilities of variation and extension to Method Elements that derive from it.  By default all Content Elements such as Role, Task, Guidance Types, or Activities are defined to be Variability Elements.
Variability and extension provides unique mechanisms for customizing method content without actually directly modifying the original content, but by just be able to describe with separate objects the differences (additions, changes, omissions) relative to the original.  This plug-in concept allows users to factor their method content and processes in interrelated units and even to architect method content and processes in layers that extend each other with new capabilities.  The resulting method and process design can be dynamically combined and applied on demand using the interpretation rules defined for Variability Element Specializations assembling to process practitioners the most accurate method and process descriptions possible.  It also allows process practitioners to extends and tailor method content and processes they do not own and to easily upgrade to newer versions by simply reapply their personal changes to these upgrades.
Variability Element defines two types of variability and one type of extension which are formally defined for the enumeration Variability Type.
</body>
      </ownedComment>
      <generalization xmi:id="_zGLFJu-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zGLFJ--sEduH59KSHV8vgA" name="variabilityType" visibility="public" type="_zGLFF--sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zGLFKO-sEduH59KSHV8vgA" annotatedElement="_zGLFJ--sEduH59KSHV8vgA">
          <body>If in instance of the variabilitySpecialization association between two Variability Elements of the same type exists, then the variabilityType attribute specifies how the element at the variabilitySpecialElement end of the association changes the Content Element at the variabilityBasedOnElement end. See the Variability Type enumeration class for definitions for the different types of variability.</body>
        </ownedComment>
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zGLFKe-sEduH59KSHV8vgA">
          <body>na</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFKu-sEduH59KSHV8vgA" name="variabilityBasedOnElement" visibility="public" type="_zGLFJO-sEduH59KSHV8vgA" association="_zGU2Cu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGLFK--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGLFLO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7Yu-sEduH59KSHV8vgA" name="Section">
      <ownedComment xmi:id="_yxw7Y--sEduH59KSHV8vgA" annotatedElement="_yxw7Yu-sEduH59KSHV8vgA">
        <body>A Section is a special Method Element that represents structural subsections of a Content Description's sectionDescription attribute.  It is used for either large scale documentation of Content Elements organized into sections as well as to flexibly add new Sections to Content Elements using contribution variability added to the Section concept for Method Plug-ins.</body>
      </ownedComment>
      <ownedComment xmi:id="_zGLFLe-sEduH59KSHV8vgA" annotatedElement="_yxw7Yu-sEduH59KSHV8vgA">
        <body>Section in the package Method Plugin inherits from Variability Element and extends Section defined in Method Core :: Basic Elements with new capabilities for variability. 
For example, when a Task contributes to another Task its Presentation association is contributed including its Sections (i.e. its Steps), which are modeled as parts of the Content Description instance.  Sections can be nested and therefore Task Descriptions can be flexibly organized in Steps with sub-Steps.  Sections are Variability Elements themselves, so they can contribute to each other.  For example, one could model a Task step as a Section instance without relating it to a Task Description that directly contributes to (or replaces) another Section which is part of a Task Description.  This contribution (or replacement) would add new description text to the original step description (or replace the original step description).  Another example would be to contribute new Check List items organized as Sections to an existing Check List (defined as guidance).  

</body>
      </ownedComment>
      <generalization xmi:id="_zGLFLu-sEduH59KSHV8vgA" general="_zGLFJO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7Ze-sEduH59KSHV8vgA" name="sectionName" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7Zu-sEduH59KSHV8vgA" annotatedElement="_yxw7Ze-sEduH59KSHV8vgA">
          <body>Every Section has a name used for external presentation of the section, e.g. when published or when section heading are listed in a table of contents.  This attribute is similar to Presentation Name for Content Elements.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7Z--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7aO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7ae-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7au-sEduH59KSHV8vgA" name="sectionDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7a--sEduH59KSHV8vgA" annotatedElement="_yxw7au-sEduH59KSHV8vgA">
          <body>This attributes store the description text for a Content Description's Section.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7bO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7be-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7bu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7b--sEduH59KSHV8vgA" name="subSections" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" aggregation="composite" association="_yxw7lO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7cO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7ce-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFL--sEduH59KSHV8vgA" name="predecessor" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" association="_zGU2D--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGLFMO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGLFMe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y7mMsO-sEduH59KSHV8vgA" name="Activity">
      <ownedComment xmi:id="_y7mMse-sEduH59KSHV8vgA" annotatedElement="_y7mMsO-sEduH59KSHV8vgA">
        <body>An Activity is a Work Breakdown Element and Work Definition which supports the nesting and logical grouping of related Breakdown Elements forming breakdown structures.  Although Activity is a concrete meta-class, other classes which represent breakdown structures derive from it; such as Phase, Iteration, Delivery Process, or Capability Pattern.
Activity represents a grouping element for other Breakdown Elements such as Activities, Descriptors, Milestones, etc.  It is not per-se a 'high-level' grouping of only work as in other meta-models, but groups any kind of Breakdown Elements.  For example, one can define valid Activities that group only Work Products Descriptors without any matching Task Descriptors.  Activities also inherit all properties from Work Breakdown Element and indirectly from Process Element; i.e. Activity is ready to have a full content description attached to it.
</body>
      </ownedComment>
      <ownedComment xmi:id="_y-4KSO-sEduH59KSHV8vgA" annotatedElement="_y7mMsO-sEduH59KSHV8vgA">
        <body>This definition of Activity extends Activity introduced in the package Breakdown with new capabilities and is the basis for the definition of the class Process.
Extends Activity with an association to Roadmap.  This definition of Activity also participates in the extension of the Discipline category.
</body>
      </ownedComment>
      <ownedComment xmi:id="_zGLFMu-sEduH59KSHV8vgA" annotatedElement="_y7mMsO-sEduH59KSHV8vgA">
        <body>Activity in the package Method Plugin inherits from Variability Element to extend Activity with new capabilities for variability.&#xD;
Activity inherits the semantics of Variability Element which provides key mechanism to enable dynamic binding of Capability Patterns in Processes as well as Process Contributions.  Variability is used in the following way for Activities:&#xD;
- Extend: To apply a Capability Pattern to a process one would create an Activity which extends the pattern's top-level activity.  Through extension the extending Activity inherits the patterns Breakdown Elements.&#xD;
- Replace: To replace an Activity of an applied Capability Pattern or an existing process for which one develops a Process Contribution (or a combination of both) one would create an Activity and specify the replace variability specialization between them.&#xD;
- Contribute: To contribute new Breakdown Elements to an existing Activity one would define an Activity with Breakdown Elements that relates via the Contributes Variability Specialization to this existing Activity.  The contributing Activity's Breakdown Elements will be added to the contributed Activity.&#xD;
&#xD;
</body>
      </ownedComment>
      <generalization xmi:id="_y7mMsu-sEduH59KSHV8vgA" general="_y7vXKe-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_y7mMs--sEduH59KSHV8vgA" general="_yyzdTO-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_zGLFM--sEduH59KSHV8vgA" general="_zGLFJO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y7mMtO-sEduH59KSHV8vgA" name="breakdownElements" visibility="public" type="_y7vWvO-sEduH59KSHV8vgA" association="_y_BURu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7mMte-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7mMtu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KSe-sEduH59KSHV8vgA" name="roadmaps" visibility="public" type="_y-4KRe-sEduH59KSHV8vgA" association="_y_BUN--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KSu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KS--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KTO-sEduH59KSHV8vgA" name="supportingMaterials" visibility="public" type="_yz1-8--sEduH59KSHV8vgA" association="_y_BUUe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KTe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KTu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KT--sEduH59KSHV8vgA" name="checklists" visibility="public" type="_yz1-5O-sEduH59KSHV8vgA" association="_y_BUVu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KUO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KUe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KUu-sEduH59KSHV8vgA" name="concepts" visibility="public" type="_yz1-4e-sEduH59KSHV8vgA" association="_y_BUW--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KU--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KVO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KVe-sEduH59KSHV8vgA" name="examples" visibility="public" type="_yz1-5--sEduH59KSHV8vgA" association="_y_BUYO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KVu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KV--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KWO-sEduH59KSHV8vgA" name="guidelines" visibility="public" type="_yz1-6u-sEduH59KSHV8vgA" association="_y_BUZe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KWe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KWu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y-4KW--sEduH59KSHV8vgA" name="reusableAssets" visibility="public" type="_yz_v_O-sEduH59KSHV8vgA" association="_y_BUau-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KXO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KXe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zGU2AO-sEduH59KSHV8vgA" memberEnd="_zGU2Au-sEduH59KSHV8vgA _zGLFBu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zGU2Ae-sEduH59KSHV8vgA" annotatedElement="_zGU2AO-sEduH59KSHV8vgA">
        <body>This composition association represents that every Method Package (either Content Package, Process Package, or Process Component) is part of exactly one Method Plugin.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zGU2Au-sEduH59KSHV8vgA" name="_methodPlugin" visibility="public" type="_zGLFAO-sEduH59KSHV8vgA" isUnique="false" association="_zGU2AO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGU2A--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGU2BO-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zGU2Be-sEduH59KSHV8vgA" name="Extension" memberEnd="_zGU2B--sEduH59KSHV8vgA _zGLFCe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zGU2Bu-sEduH59KSHV8vgA" annotatedElement="_zGU2Be-sEduH59KSHV8vgA">
        <body>This association defines how Method Plugins extend many other Method Plugins.  The extending plug-in contains new method elements, extends existing method elements and processes using content element variability mechanisms (e.g. contribution, replace, etc.), provides additional Delivery and Capability Processes for a Method Framework, etc.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zGU2B--sEduH59KSHV8vgA" name="plugins" visibility="public" type="_zGLFAO-sEduH59KSHV8vgA" association="_zGU2Be-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGU2CO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGU2Ce-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zGU2Cu-sEduH59KSHV8vgA" name="variabilitySpecialization" memberEnd="_zGU2DO-sEduH59KSHV8vgA _zGLFKu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zGU2C--sEduH59KSHV8vgA" annotatedElement="_zGU2Cu-sEduH59KSHV8vgA">
        <body>This 1-to-many association defines in combination with the variabilityType attribute that a number of special Variability Elements of the same type represent a variation of exactly one other Variability Element.  See the Variability Type enumeration class for definitions for the different types of variability.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zGU2DO-sEduH59KSHV8vgA" name="variabilitySpecialElement" visibility="public" type="_zGLFJO-sEduH59KSHV8vgA" association="_zGU2Cu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGU2De-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGU2Du-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zGU2D--sEduH59KSHV8vgA" memberEnd="_zGLFL--sEduH59KSHV8vgA _zGU2Ee-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zGU2EO-sEduH59KSHV8vgA" annotatedElement="_zGU2D--sEduH59KSHV8vgA">
        <body>This association describes the order in which contributed Sections shall be inserted into an  existing list of Sections maintained for a Content Description.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zGU2Ee-sEduH59KSHV8vgA" name="_section" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" isUnique="false" association="_zGU2D--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGU2Eu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGU2E--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWkO-sEduH59KSHV8vgA" name="Point">
      <ownedAttribute xmi:id="_zJAWke-sEduH59KSHV8vgA" name="x" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWku-sEduH59KSHV8vgA" name="y" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWk--sEduH59KSHV8vgA" name="GraphElement" isAbstract="true">
      <generalization xmi:id="_zJAWlO-sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWle-sEduH59KSHV8vgA" name="position" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWlu-sEduH59KSHV8vgA" name="contained" visibility="public" type="_zJAWpe-sEduH59KSHV8vgA" aggregation="composite" association="_zJKH6O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWl--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWmO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWme-sEduH59KSHV8vgA" name="link" visibility="public" type="_zJKHkO-sEduH59KSHV8vgA" aggregation="composite" association="_zJKH7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWmu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWm--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWnO-sEduH59KSHV8vgA" name="anchorage" visibility="public" type="_zJAWw--sEduH59KSHV8vgA" aggregation="composite" association="_zJKH7--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWne-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWnu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWn--sEduH59KSHV8vgA" name="semanticModel" visibility="public" type="_zJKHqe-sEduH59KSHV8vgA" aggregation="composite" association="_zJKH9u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWoO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWoe-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWou-sEduH59KSHV8vgA" name="Dimension">
      <ownedAttribute xmi:id="_zJAWo--sEduH59KSHV8vgA" name="width" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWpO-sEduH59KSHV8vgA" name="height" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWpe-sEduH59KSHV8vgA" name="DiagramElement" isAbstract="true">
      <generalization xmi:id="_zJAWpu-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWp--sEduH59KSHV8vgA" name="isVisible" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zJAWqO-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>true</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWqe-sEduH59KSHV8vgA" name="container" visibility="public" type="_zJAWk--sEduH59KSHV8vgA" association="_zJKH6O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWqu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWq--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWrO-sEduH59KSHV8vgA" name="reference" visibility="public" type="_zJAWsu-sEduH59KSHV8vgA" association="_zJKH6e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWre-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWru-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWr--sEduH59KSHV8vgA" name="property" visibility="public" type="_zJAWue-sEduH59KSHV8vgA" aggregation="composite" association="_zJKH6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWsO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWse-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWsu-sEduH59KSHV8vgA" name="Reference">
      <generalization xmi:id="_zJAWs--sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWtO-sEduH59KSHV8vgA" name="isIndividualRepresentation" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_zJAWte-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWtu-sEduH59KSHV8vgA" name="referenced" visibility="public" type="_zJAWpe-sEduH59KSHV8vgA" association="_zJKH6e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWt--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWuO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWue-sEduH59KSHV8vgA" name="Property">
      <generalization xmi:id="_zJAWuu-sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWu--sEduH59KSHV8vgA" name="key" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWvO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWve-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJAWvu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWv--sEduH59KSHV8vgA" name="value" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWwO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWwe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJAWwu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWw--sEduH59KSHV8vgA" name="GraphConnector">
      <generalization xmi:id="_zJAWxO-sEduH59KSHV8vgA" general="_zJAWk--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWxe-sEduH59KSHV8vgA" name="graphElement" visibility="public" type="_zJAWk--sEduH59KSHV8vgA" association="_zJKH7--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWxu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWx--sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAWyO-sEduH59KSHV8vgA" name="graphEdge" visibility="public" type="_zJAWy--sEduH59KSHV8vgA" association="_zJKH8O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWye-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWyu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJAWy--sEduH59KSHV8vgA" name="GraphEdge">
      <generalization xmi:id="_zJAWzO-sEduH59KSHV8vgA" general="_zJAWk--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJAWze-sEduH59KSHV8vgA" name="anchor" visibility="public" type="_zJAWw--sEduH59KSHV8vgA" association="_zJKH8O-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAWzu-sEduH59KSHV8vgA" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAWz--sEduH59KSHV8vgA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJAW0O-sEduH59KSHV8vgA" name="waypoints" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA" aggregation="composite" association="_zJKH8e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJAW0e-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJAW0u-sEduH59KSHV8vgA" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHkO-sEduH59KSHV8vgA" name="DiagramLink">
      <generalization xmi:id="_zJKHke-sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHku-sEduH59KSHV8vgA" name="zoom" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHk--sEduH59KSHV8vgA" name="viewport" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHlO-sEduH59KSHV8vgA" name="graphElement" visibility="public" type="_zJAWk--sEduH59KSHV8vgA" association="_zJKH7u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHle-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHlu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKHl--sEduH59KSHV8vgA" name="diagram" visibility="public" type="_zJKHne-sEduH59KSHV8vgA" association="_zJKH9e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHmO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHme-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHmu-sEduH59KSHV8vgA" name="GraphNode">
      <generalization xmi:id="_zJKHm--sEduH59KSHV8vgA" general="_zJAWk--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHnO-sEduH59KSHV8vgA" name="size" visibility="public" type="_zJAWou-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHne-sEduH59KSHV8vgA" name="Diagram">
      <generalization xmi:id="_zJKHnu-sEduH59KSHV8vgA" general="_zJKHmu-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHn--sEduH59KSHV8vgA" name="zoom" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHoO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHoe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKHou-sEduH59KSHV8vgA" name="viewpoint" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHo--sEduH59KSHV8vgA" name="diagramLink" visibility="public" type="_zJKHkO-sEduH59KSHV8vgA" association="_zJKH9e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHpO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHpe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKHpu-sEduH59KSHV8vgA" name="namespace" visibility="public" type="_zJKHqe-sEduH59KSHV8vgA" aggregation="composite" association="_zJTRgO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHp--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHqO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHqe-sEduH59KSHV8vgA" name="SemanticModelBridge" isAbstract="true">
      <generalization xmi:id="_zJKHqu-sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHq--sEduH59KSHV8vgA" name="presentation" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHrO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHre-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJKHru-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKHr--sEduH59KSHV8vgA" name="graphElement" visibility="public" type="_zJAWk--sEduH59KSHV8vgA" association="_zJKH9u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHsO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHse-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKHsu-sEduH59KSHV8vgA" name="diagram" visibility="public" type="_zJKHne-sEduH59KSHV8vgA" association="_zJTRgO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHs--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHtO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHte-sEduH59KSHV8vgA" name="SimpleSemanticModelElement">
      <generalization xmi:id="_zJKHtu-sEduH59KSHV8vgA" general="_zJKHqe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHt--sEduH59KSHV8vgA" name="typeInfo" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHuO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHue-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJKHuu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHu--sEduH59KSHV8vgA" name="UMASemanticModelBridge">
      <generalization xmi:id="_zJKHvO-sEduH59KSHV8vgA" general="_zJKHqe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHve-sEduH59KSHV8vgA" name="element" visibility="public" type="_yxw7Qe-sEduH59KSHV8vgA" association="_zJTRhe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHvu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHv--sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHwO-sEduH59KSHV8vgA" name="CoreSemanticModelBridge">
      <generalization xmi:id="_zJKHwe-sEduH59KSHV8vgA" general="_zJKHqe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHwu-sEduH59KSHV8vgA" name="element" visibility="public" type="_yxKfDe-sEduH59KSHV8vgA" association="_zJTRge-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHw--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHxO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHxe-sEduH59KSHV8vgA" name="LeafElement" isAbstract="true">
      <generalization xmi:id="_zJKHxu-sEduH59KSHV8vgA" general="_zJAWpe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHx--sEduH59KSHV8vgA" name="TextElement">
      <generalization xmi:id="_zJKHyO-sEduH59KSHV8vgA" general="_zJKHxe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHye-sEduH59KSHV8vgA" name="text" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKHyu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKHy--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJKHzO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKHze-sEduH59KSHV8vgA" name="Image">
      <generalization xmi:id="_zJKHzu-sEduH59KSHV8vgA" general="_zJKHxe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKHz--sEduH59KSHV8vgA" name="uri" visibility="public" type="_yxUPZu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKH0O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKH0e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJKH0u-sEduH59KSHV8vgA" type="_yxUPZu-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKH0--sEduH59KSHV8vgA" name="mimeType" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKH1O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKH1e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zJKH1u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKH1--sEduH59KSHV8vgA" name="GraphicPrimitive" isAbstract="true">
      <generalization xmi:id="_zJKH2O-sEduH59KSHV8vgA" general="_zJKHxe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKH2e-sEduH59KSHV8vgA" name="Polyline">
      <generalization xmi:id="_zJKH2u-sEduH59KSHV8vgA" general="_zJKH1--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH2--sEduH59KSHV8vgA" name="closed" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zJKH3O-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>true</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zJKH3e-sEduH59KSHV8vgA" name="waypoints" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA" aggregation="composite" association="_zJTRie-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKH3u-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKH3--sEduH59KSHV8vgA" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zJKH4O-sEduH59KSHV8vgA" name="Ellipse">
      <generalization xmi:id="_zJKH4e-sEduH59KSHV8vgA" general="_zJKH1--sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH4u-sEduH59KSHV8vgA" name="center" visibility="public" type="_zJAWkO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH4--sEduH59KSHV8vgA" name="radiusX" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH5O-sEduH59KSHV8vgA" name="radiusY" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH5e-sEduH59KSHV8vgA" name="rotation" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH5u-sEduH59KSHV8vgA" name="startAngle" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zJKH5--sEduH59KSHV8vgA" name="endAngle" visibility="public" type="_yxUPcO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH6O-sEduH59KSHV8vgA" memberEnd="_zJAWlu-sEduH59KSHV8vgA _zJAWqe-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH6e-sEduH59KSHV8vgA" memberEnd="_zJAWtu-sEduH59KSHV8vgA _zJAWrO-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH6u-sEduH59KSHV8vgA" memberEnd="_zJAWr--sEduH59KSHV8vgA _zJKH6--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zJKH6--sEduH59KSHV8vgA" name="_diagramElement" visibility="public" type="_zJAWpe-sEduH59KSHV8vgA" isUnique="false" association="_zJKH6u-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKH7O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKH7e-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH7u-sEduH59KSHV8vgA" memberEnd="_zJAWme-sEduH59KSHV8vgA _zJKHlO-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH7--sEduH59KSHV8vgA" memberEnd="_zJAWnO-sEduH59KSHV8vgA _zJAWxe-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH8O-sEduH59KSHV8vgA" memberEnd="_zJAWyO-sEduH59KSHV8vgA _zJAWze-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH8e-sEduH59KSHV8vgA" memberEnd="_zJAW0O-sEduH59KSHV8vgA _zJKH8u-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zJKH8u-sEduH59KSHV8vgA" name="_graphEdge" visibility="public" type="_zJAWy--sEduH59KSHV8vgA" isUnique="false" association="_zJKH8e-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJKH8--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJKH9O-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH9e-sEduH59KSHV8vgA" memberEnd="_zJKHo--sEduH59KSHV8vgA _zJKHl--sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJKH9u-sEduH59KSHV8vgA" memberEnd="_zJAWn--sEduH59KSHV8vgA _zJKHr--sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJTRgO-sEduH59KSHV8vgA" memberEnd="_zJKHpu-sEduH59KSHV8vgA _zJKHsu-sEduH59KSHV8vgA"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJTRge-sEduH59KSHV8vgA" memberEnd="_zJKHwu-sEduH59KSHV8vgA _zJTRgu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zJTRgu-sEduH59KSHV8vgA" name="_coreSemanticModelBridge" visibility="public" type="_zJKHwO-sEduH59KSHV8vgA" isUnique="false" association="_zJTRge-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJTRg--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJTRhO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJTRhe-sEduH59KSHV8vgA" memberEnd="_zJKHve-sEduH59KSHV8vgA _zJTRhu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zJTRhu-sEduH59KSHV8vgA" name="_uMASemanticModelBridge" visibility="public" type="_zJKHu--sEduH59KSHV8vgA" isUnique="false" association="_zJTRhe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJTRh--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJTRiO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zJTRie-sEduH59KSHV8vgA" memberEnd="_zJKH3e-sEduH59KSHV8vgA _zJTRiu-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zJTRiu-sEduH59KSHV8vgA" name="_polyline" visibility="public" type="_zJKH2e-sEduH59KSHV8vgA" isUnique="false" association="_zJTRie-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zJTRi--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zJTRjO-sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zDpViu-sEduH59KSHV8vgA" name="ProcessPackage">
      <ownedComment xmi:id="_zDpVi--sEduH59KSHV8vgA" annotatedElement="_zDpViu-sEduH59KSHV8vgA">
        <body>Process Package is a special Method Package that contains Process Elements, only.
A key separation of concerns in UMA is the distinction between Method Content and Process.  This separation is enforced by special package types, which do not allow the mixing of method content with processes.
</body>
      </ownedComment>
      <generalization xmi:id="_zDpVjO-sEduH59KSHV8vgA" general="_y4eAMe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zDpVje-sEduH59KSHV8vgA" name="processElements" visibility="public" type="_y7vXOO-sEduH59KSHV8vgA" aggregation="composite" association="_zDpVqe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVju-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVj--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zLitMO-sEduH59KSHV8vgA" name="diagrams" visibility="public" type="_zJKHne-sEduH59KSHV8vgA" aggregation="composite" association="_zLitM--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zLitMe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zLitMu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zLitM--sEduH59KSHV8vgA" memberEnd="_zLitMO-sEduH59KSHV8vgA _zLitNe-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zLitNO-sEduH59KSHV8vgA" annotatedElement="_zLitM--sEduH59KSHV8vgA">
        <body>This association is the only member of the umadiagrams package.  It defines that Diagrams can be packaged in Process Packages.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zLitNe-sEduH59KSHV8vgA" name="_processPackage" visibility="public" type="_zDpViu-sEduH59KSHV8vgA" isUnique="false" association="_zLitM--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zLitNu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zLitN--sEduH59KSHV8vgA" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zGLFAO-sEduH59KSHV8vgA" name="MethodPlugin">
      <ownedComment xmi:id="_zGLFAe-sEduH59KSHV8vgA" annotatedElement="_zGLFAO-sEduH59KSHV8vgA">
        <body>A Method Plugin is a Method Element that represents a physical container for Method Packages.  It defines a granularity level for the modularization and organization of method content and processes.  A Method Plugin can extend many other Method Plugins and it can be extended by many Method Plugins.  It can also be used stand-alone, i.e. with no Extension relationship to other plug-ins.
Method Plugin conceptually represents a unit for configuration, modularization, extension, packaging, and deployment of method content and processes.  A Process Engineer shall design his Plugins and allocate his content to these Plugins with requirements for extensibility, modularity, reuse, and maintainability in mind.
Special extensibility mechanisms defined for the meta-classes Variability Element and Process Contribution allow Plugin content to directly contribute new content, replace existing content, or to cross-reference to any Content Element or Process within another Plugin that it extends.  Similar to UML 2.0's 'package merge' mechanism transformation interpretations, interpreting these Method Plugin mechanisms results into new extended Method Content and Processes.
</body>
      </ownedComment>
      <generalization xmi:id="_zGLFA--sEduH59KSHV8vgA" general="_yxUPVO-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_zN7S0O-sEduH59KSHV8vgA" general="_zN7S0u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zGLFBO-sEduH59KSHV8vgA" name="userChangeable" visibility="public" type="_yxUPbu-sEduH59KSHV8vgA">
        <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_zGLFBe-sEduH59KSHV8vgA" type="_yxUPbu-sEduH59KSHV8vgA">
          <body>true</body>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFBu-sEduH59KSHV8vgA" name="methodPackages" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" aggregation="composite" association="_zGU2AO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGLFB--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGLFCO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zGLFCe-sEduH59KSHV8vgA" name="bases" visibility="public" type="_zGLFAO-sEduH59KSHV8vgA" association="_zGU2Be-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zGLFCu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zGLFC--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zDpVcO-sEduH59KSHV8vgA" name="ProcessComponent">
      <ownedComment xmi:id="_zDpVce-sEduH59KSHV8vgA" annotatedElement="_zDpVcO-sEduH59KSHV8vgA">
        <body>A Process Component is a special Process Package that applies the principles of encapsulation.  A Process Component realizes one or more Interfaces which specify inputs and outputs of the component. There might be many components realizing the same interfaces, but using different techniques to achieve similar outputs for similar inputs.  Whereas the Component Interfaces represent component specifications (black box descriptions of the component), good candidates for component realizations can be found in Capability Patterns (white box descriptions for the component).
UMA supports replaceable and reusable Process Components realizing the principles of encapsulation. Certain situations in a software development project might require that concrete realizations of parts of the process remain undecided or will be decided by the executing team itself (e.g. in outsourcing situations).  UMA provides a unique component concept defining interfaces for work product input and output, allowing treating the actual definition of the work that produces the outputs as a &quot;black box&quot;.  At any point during a project the component &quot;realization&quot; detailing the work can be added to the process.  The component approach also allows that different styles or techniques of doing work can be replaced with one another.  For example, a software code output of a component could be produced with a model-driven development or a code-centric technique.  The component concept encapsulates the actual work and lets the development team choose the appropriate technique and fill the component's realization with their choice of Activities that produce the required outputs.
</body>
      </ownedComment>
      <generalization xmi:id="_zDpVcu-sEduH59KSHV8vgA" general="_zDpViu-sEduH59KSHV8vgA">
        <eAnnotations xmi:id="_zDpVc--sEduH59KSHV8vgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_zDpVdO-sEduH59KSHV8vgA" key="extend"/>
        </eAnnotations>
      </generalization>
      <generalization xmi:id="_zN7S0e-sEduH59KSHV8vgA" general="_zN7S0u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zDpVde-sEduH59KSHV8vgA" name="interfaces" visibility="public" type="_zDpVge-sEduH59KSHV8vgA" association="_zDpVkO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVdu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVd--sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zDpVeO-sEduH59KSHV8vgA" name="process" visibility="public" type="_y-4KOe-sEduH59KSHV8vgA" aggregation="composite" association="_zDpVpO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zDpVee-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zDpVeu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zN7S0u-sEduH59KSHV8vgA" name="MethodUnit" isAbstract="true">
      <ownedComment xmi:id="_zN7S0--sEduH59KSHV8vgA" annotatedElement="_zN7S0u-sEduH59KSHV8vgA">
        <body>A Method Unit is a special Method Element that shall be maintained in a Method Library as a separate unit of control.</body>
      </ownedComment>
      <generalization xmi:id="_zN7S1O-sEduH59KSHV8vgA" general="_yxw7Qe-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zN7S1e-sEduH59KSHV8vgA" name="authors" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zN7S1u-sEduH59KSHV8vgA" annotatedElement="_zN7S1e-sEduH59KSHV8vgA">
          <body>Every Method Unit is being created and owned by an author or authoring team.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zN7S1--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zN7S2O-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zN7S2e-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN7S2u-sEduH59KSHV8vgA" name="changeDate" visibility="public" type="_yxUPZO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zN7S2--sEduH59KSHV8vgA" annotatedElement="_zN7S2u-sEduH59KSHV8vgA">
          <body>The date the last change that resulted into this version has been made.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zN7S3O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zN7S3e-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN7S3u-sEduH59KSHV8vgA" name="changeDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zN7S3--sEduH59KSHV8vgA" annotatedElement="_zN7S3u-sEduH59KSHV8vgA">
          <body>The description of the last change that resulted into this version.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zN7S4O-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zN7S4e-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zN7S4u-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN7S4--sEduH59KSHV8vgA" name="version" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_zN7S5O-sEduH59KSHV8vgA" annotatedElement="_zN7S4--sEduH59KSHV8vgA">
          <body>Every Package has a version number used to track changes.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zN7S5e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zN7S5u-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_zN7S5--sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN7S6O-sEduH59KSHV8vgA" name="copyrightStatement" visibility="public" type="_yz1-8--sEduH59KSHV8vgA" association="_zOEcwe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zN7S6e-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zN7S6u-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yxw7V--sEduH59KSHV8vgA" name="ContentDescription">
      <ownedComment xmi:id="_yxw7WO-sEduH59KSHV8vgA" annotatedElement="_yxw7V--sEduH59KSHV8vgA">
        <body>Content Description is a Method Element that is used to store the textual description for a Content Element.  It defines standard attributes applicable for all Content Element types.  Specific Content Element sub-types can define their own matching Content Description sub-types. </body>
      </ownedComment>
      <generalization xmi:id="_zOEcwO-sEduH59KSHV8vgA" general="_zN7S0u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_yxw7Wu-sEduH59KSHV8vgA" name="mainDescription" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_yxw7W--sEduH59KSHV8vgA" annotatedElement="_yxw7Wu-sEduH59KSHV8vgA">
          <body>This attribute store the main descriptive text for the Content Element.  All text that is not part of any of the more specific attributes shall be stored here.  If the Content Description is divided into sections using the Section class, then only the text from the 'start' of the content description to the first section will be stored here (similar to a normal document where you can place text between its beginning to its first diction heading).</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7XO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7Xe-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_yxw7Xu-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yxw7X--sEduH59KSHV8vgA" name="sections" visibility="public" type="_yxw7Yu-sEduH59KSHV8vgA" aggregation="composite" association="_yxw7j--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yxw7YO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yxw7Ye-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDMO-sEduH59KSHV8vgA" name="externalId" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDMe-sEduH59KSHV8vgA" annotatedElement="_y1MDMO-sEduH59KSHV8vgA">
          <body>An external visible number that is used to reference this artifact. Used like a synonym.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDMu-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDM--sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDNO-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_y1MDNe-sEduH59KSHV8vgA" name="keyConsiderations" visibility="public" type="_yxUPaO-sEduH59KSHV8vgA">
        <ownedComment xmi:id="_y1MDNu-sEduH59KSHV8vgA" annotatedElement="_y1MDNe-sEduH59KSHV8vgA">
          <body>Key Considerations provides advise and guidance of a critical nature for the content element as well as warnings, cautions, pitfalls, dangers.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y1MDN--sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y1MDOO-sEduH59KSHV8vgA"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_y1MDOe-sEduH59KSHV8vgA" type="_yxUPaO-sEduH59KSHV8vgA" value=""/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zOEcwe-sEduH59KSHV8vgA" memberEnd="_zN7S6O-sEduH59KSHV8vgA _zOEcw--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zOEcwu-sEduH59KSHV8vgA" annotatedElement="_zOEcwe-sEduH59KSHV8vgA">
        <body>A Method Unit can have exactly one Copyright Statement securing the intellectual capital it represents.  It will be published with the respective concrete Element.  Note, that Copyright Statements for Method Libraries and Method Plugins define the default statement for its contained elements, which can be 'overwritten' with revised statements for every Content Description or Process Component.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zOEcw--sEduH59KSHV8vgA" name="_methodUnit" visibility="public" type="_zN7S0u-sEduH59KSHV8vgA" association="_zOEcwe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zOEcxO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zOEcxe-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zQdCYO-sEduH59KSHV8vgA" name="MethodConfiguration">
      <ownedComment xmi:id="_zQdCYe-sEduH59KSHV8vgA" annotatedElement="_zQdCYO-sEduH59KSHV8vgA">
        <body>A Method Configuration is a collection of selected Method Models and MethodPackages. A configuration can be exported into its own standalone library when it includes the full transitive closure of all elements all other elements depend on.</body>
      </ownedComment>
      <generalization xmi:id="_zQdCYu-sEduH59KSHV8vgA" general="_zN7S0u-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zQdCY--sEduH59KSHV8vgA" name="methodPluginSelection" visibility="public" type="_zGLFAO-sEduH59KSHV8vgA" association="_zQmzbu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCZO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCZe-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCZu-sEduH59KSHV8vgA" name="methodPackageSelection" visibility="public" type="_y4eAMe-sEduH59KSHV8vgA" association="_zQmzc--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCZ--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCaO-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCae-sEduH59KSHV8vgA" name="processViews" visibility="public" type="_y2Oknu-sEduH59KSHV8vgA" association="_zQmzje-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCau-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCa--sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCbO-sEduH59KSHV8vgA" name="defaultView" visibility="public" type="_y2Oknu-sEduH59KSHV8vgA" association="_zQmzke-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCbe-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCbu-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCb--sEduH59KSHV8vgA" name="baseConfigurations" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" association="_zQmzle-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCcO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCce-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCcu-sEduH59KSHV8vgA" name="subtractedCategory" visibility="public" type="_y2Oknu-sEduH59KSHV8vgA" association="_zQmzmu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCc--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCdO-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCde-sEduH59KSHV8vgA" name="addedCategory" visibility="public" type="_y2Oknu-sEduH59KSHV8vgA" association="_zQmznu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCdu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCd--sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zQdCeO-sEduH59KSHV8vgA" name="ProcessFamily">
      <ownedComment xmi:id="_zQdCee-sEduH59KSHV8vgA" annotatedElement="_zQdCeO-sEduH59KSHV8vgA">
        <body>A Delivery Model Family is a convenient grouping of Delivery Processes and Capability Patterns of interest to some specific user community.</body>
      </ownedComment>
      <generalization xmi:id="_zQdCeu-sEduH59KSHV8vgA" general="_zQdCYO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zQdCe--sEduH59KSHV8vgA" name="deliveryProcesses" visibility="public" type="_y-4KMO-sEduH59KSHV8vgA" association="_zQmzeO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCfO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCfe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_y-4KOe-sEduH59KSHV8vgA" name="Process" isAbstract="true">
      <ownedComment xmi:id="_y-4KOu-sEduH59KSHV8vgA" annotatedElement="_y-4KOe-sEduH59KSHV8vgA">
        <body>A Process is a special Activity that describes a structure for particular types of development projects.  To perform such a development project a Processes would be 'instantiated' and adapted for the specific situation.  Process is an abstract class and this meta-model defines different special types of Processes for different process management applications and different situations of process reuse.  Every Process comprises of and is the top-level element of an n-level breakdown structure using the Nesting association defined on Activity.
Core Method Content provides step-by-step explanations, describing how very specific development goals are achieved independent of the placement of these steps within a development lifecycle.  Processes take these method elements and relate them into semi-ordered sequences that are customized to specific types of projects.  Thus, a process is a set of partially ordered work descriptions intended to reach a higher development goal, such as the release of a specific software system.  A process and the process meta-model structure defined in this specification focuses on the lifecycle and the sequencing of work in breakdown structures.  To achieve this it uses the Descriptor concept referencing method content and allowing defining time-specific customizations of the referenced content (e.g. defining a focus on different steps of the same Task and providing input Work Products in different states within the different Phases of a process lifecycle in which the same Task is performed).
</body>
      </ownedComment>
      <ownedComment xmi:id="_zQdCfu-sEduH59KSHV8vgA" annotatedElement="_y-4KOe-sEduH59KSHV8vgA">
        <body>Process in the package Library Configuration extends the class Process with association relating a Process to one default and many optional valid Configurations.
These configurations describe valid contexts for the Process within a Method Library indicating under which Configurations a Process is well defined.
</body>
      </ownedComment>
      <generalization xmi:id="_y-4KO--sEduH59KSHV8vgA" general="_y7mMsO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_y-4KPO-sEduH59KSHV8vgA" name="includesPatterns" visibility="public" type="_y_BUJ--sEduH59KSHV8vgA" association="_y_BUKu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y-4KPe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y-4KPu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQdCf--sEduH59KSHV8vgA" name="defaultContext" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" association="_zQmzg--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQdCgO-sEduH59KSHV8vgA" value="1"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQdCge-sEduH59KSHV8vgA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQmzYO-sEduH59KSHV8vgA" name="validContext" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" association="_zQmziO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzYe-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzYu-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zQmzY--sEduH59KSHV8vgA" name="MethodLibrary">
      <ownedComment xmi:id="_zQmzZO-sEduH59KSHV8vgA" annotatedElement="_zQmzY--sEduH59KSHV8vgA">
        <body>A Method Library is a physical container for Method Plugins and Method Configuration definitions.  All Method Elements are stored in a Method Library.</body>
      </ownedComment>
      <generalization xmi:id="_zQmzZe-sEduH59KSHV8vgA" general="_zN7S0u-sEduH59KSHV8vgA"/>
      <generalization xmi:id="_zQmzZ--sEduH59KSHV8vgA" general="_yxUPVO-sEduH59KSHV8vgA"/>
      <ownedAttribute xmi:id="_zQmzaO-sEduH59KSHV8vgA" name="methodPlugins" visibility="public" type="_zGLFAO-sEduH59KSHV8vgA" aggregation="composite" association="_zQmzfe-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzae-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzau-sEduH59KSHV8vgA"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zQmza--sEduH59KSHV8vgA" name="predefinedConfigurations" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" aggregation="composite" association="_zQmzgO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzbO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzbe-sEduH59KSHV8vgA"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzbu-sEduH59KSHV8vgA" memberEnd="_zQmzcO-sEduH59KSHV8vgA _zQdCY--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzb--sEduH59KSHV8vgA" annotatedElement="_zQmzbu-sEduH59KSHV8vgA">
        <body>A selection of packages to be included in the configuration.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzcO-sEduH59KSHV8vgA" name="_methodConfiguration" visibility="private" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzbu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzce-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzcu-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzc--sEduH59KSHV8vgA" memberEnd="_zQmzde-sEduH59KSHV8vgA _zQdCZu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzdO-sEduH59KSHV8vgA" annotatedElement="_zQmzc--sEduH59KSHV8vgA">
        <body>A selection of packages to be included in the configuration.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzde-sEduH59KSHV8vgA" name="_methodConfiguration" visibility="private" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzc--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzdu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzd--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzeO-sEduH59KSHV8vgA" memberEnd="_zQmzeu-sEduH59KSHV8vgA _zQdCe--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzee-sEduH59KSHV8vgA" annotatedElement="_zQmzeO-sEduH59KSHV8vgA">
        <body>Delivery Process can be organized in many Process Families.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzeu-sEduH59KSHV8vgA" name="processFamilies" visibility="public" type="_zQdCeO-sEduH59KSHV8vgA" association="_zQmzeO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmze--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzfO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzfe-sEduH59KSHV8vgA" memberEnd="_zQmzf--sEduH59KSHV8vgA _zQmzaO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzfu-sEduH59KSHV8vgA" annotatedElement="_zQmzfe-sEduH59KSHV8vgA">
        <body>A Method Library physically comprises of Method Plugins.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzf--sEduH59KSHV8vgA" name="_methodLibrary" visibility="private" type="_zQmzY--sEduH59KSHV8vgA" isUnique="false" association="_zQmzfe-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzgO-sEduH59KSHV8vgA" memberEnd="_zQmza--sEduH59KSHV8vgA _zQmzgu-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzge-sEduH59KSHV8vgA" annotatedElement="_zQmzgO-sEduH59KSHV8vgA">
        <body>A Method Library stores a set of predefined Method Configurations that are regularly used by the library authors (e.g. the configurations that they ship to their users).</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzgu-sEduH59KSHV8vgA" name="_methodLibrary" visibility="public" type="_zQmzY--sEduH59KSHV8vgA" isUnique="false" association="_zQmzgO-sEduH59KSHV8vgA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzg--sEduH59KSHV8vgA" memberEnd="_zQmzhe-sEduH59KSHV8vgA _zQdCf--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzhO-sEduH59KSHV8vgA" annotatedElement="_zQmzg--sEduH59KSHV8vgA">
        <body>A Process has exactly on default configuration.  This is in most cases the configuration in which the process has been created.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzhe-sEduH59KSHV8vgA" name="_process" visibility="public" type="_y-4KOe-sEduH59KSHV8vgA" isUnique="false" association="_zQmzg--sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzhu-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzh--sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmziO-sEduH59KSHV8vgA" memberEnd="_zQmziu-sEduH59KSHV8vgA _zQmzYO-sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzie-sEduH59KSHV8vgA" annotatedElement="_zQmziO-sEduH59KSHV8vgA">
        <body>A Process can have many additional configurations that have been verified to also produce valid results.  Process Elements (e.g. Descriptors) that refer to content packages that are defined outside the scope of such a configuration would not be shown in the process when published or used under such a configuration.  This allows to easily remove content from a process by removing content packages to from the related configuration.</body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmziu-sEduH59KSHV8vgA" name="_process" visibility="public" type="_y-4KOe-sEduH59KSHV8vgA" isUnique="false" association="_zQmziO-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzi--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzjO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzje-sEduH59KSHV8vgA" memberEnd="_zQmzju-sEduH59KSHV8vgA _zQdCae-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zQmzju-sEduH59KSHV8vgA" name="_methodConfiguration" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzje-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzj--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzkO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzke-sEduH59KSHV8vgA" memberEnd="_zQdCbO-sEduH59KSHV8vgA _zQmzku-sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zQmzku-sEduH59KSHV8vgA" name="_methodConfiguration" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzke-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzk--sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzlO-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzle-sEduH59KSHV8vgA" memberEnd="_zQdCb--sEduH59KSHV8vgA _zQmzl--sEduH59KSHV8vgA">
      <ownedComment xmi:id="_zQmzlu-sEduH59KSHV8vgA" annotatedElement="_zQmzle-sEduH59KSHV8vgA">
        <body>The definition of a configuration can be based on the definitions of other configurations.  For example, a configuration A could be defined as the superset of configurations B, C, and D plus add more selected Plugins and Packages.  In such a case A would list B, C, and D as its baseConfigurations.  If any of these base configurations changes all updates would be automatically valid for A as well reducing maintainability overhead for overlapping/dependent configurations. </body>
      </ownedComment>
      <ownedEnd xmi:id="_zQmzl--sEduH59KSHV8vgA" name="_methodConfiguration" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzle-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmzmO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzme-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmzmu-sEduH59KSHV8vgA" memberEnd="_zQdCcu-sEduH59KSHV8vgA _zQmzm--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zQmzm--sEduH59KSHV8vgA" name="_methodConfiguration" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmzmu-sEduH59KSHV8vgA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zQmznO-sEduH59KSHV8vgA" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zQmzne-sEduH59KSHV8vgA"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_zQmznu-sEduH59KSHV8vgA" memberEnd="_zQdCde-sEduH59KSHV8vgA _zQmzn--sEduH59KSHV8vgA">
      <ownedEnd xmi:id="_zQmzn--sEduH59KSHV8vgA" name="_methodConfiguration" visibility="public" type="_zQdCYO-sEduH59KSHV8vgA" isUnique="false" association="_zQmznu-sEduH59KSHV8vgA"/>
    </packagedElement>
    <profileApplication xmi:id="_J7tG1eyCEdu5-vVjlfVsfQ">
      <eAnnotations xmi:id="_J7tG1uyCEdu5-vVjlfVsfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_J7tG1-yCEdu5-vVjlfVsfQ">
      <eAnnotations xmi:id="_J7tG2OyCEdu5-vVjlfVsfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML2_MSL_PROFILES/Default.epx#_IN8k8MmBEdqBcN1R6EvWUw?Default/Default?"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML2_MSL_PROFILES/Default.epx#_a_S3wNWLEdiy4IqP8whjFA?Default?"/>
    </profileApplication>
    <profileApplication xmi:id="_J7tG2eyCEdu5-vVjlfVsfQ">
      <eAnnotations xmi:id="_J7tG2uyCEdu5-vVjlfVsfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML2_MSL_PROFILES/Deployment.epx#_IrdAUMmBEdqBcN1R6EvWUw?Deployment/Deployment?"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML2_MSL_PROFILES/Deployment.epx#_vjbuwOvHEdiDX5bji0iVSA?Deployment?"/>
    </profileApplication>
    <profileApplication xmi:id="_T_ccoOyCEdu5-vVjlfVsfQ">
      <eAnnotations xmi:id="_T_ccoeyCEdu5-vVjlfVsfQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_vy-HUYinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Ecore:EPackage xmi:id="_U9Iz8OyCEdu5-vVjlfVsfQ" base_Package="_J7tG0OyCEdu5-vVjlfVsfQ" packageName="uma" nsPrefix="org.eclipse.epf.uma" nsURI="http://www.eclipse.org/epf/uma/1.0.4/uma.ecore" basePackage="org.eclipse.epf"/>
  <Default:Documentation xmi:id="_yxUPW--sEduH59KSHV8vgA" base_Comment="_yxKfC--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPXO-sEduH59KSHV8vgA" base_Comment="_yxKfDu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPXe-sEduH59KSHV8vgA" base_Comment="_yxKfEO-sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yxUPXu-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxKfEu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPX--sEduH59KSHV8vgA" base_Comment="_yxKfF--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPYO-sEduH59KSHV8vgA" base_Comment="_yxUPUe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPYe-sEduH59KSHV8vgA" base_Comment="_yxUPVe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPYu-sEduH59KSHV8vgA" base_Comment="_yxUPWe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPce-sEduH59KSHV8vgA" base_Comment="_yxUPY--sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxUPcu-sEduH59KSHV8vgA" instanceClassName="java.util.Date" base_PrimitiveType="_yxUPZO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPc--sEduH59KSHV8vgA" base_Comment="_yxUPZe-sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxUPdO-sEduH59KSHV8vgA" instanceClassName="java.net.URI" base_PrimitiveType="_yxUPZu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPde-sEduH59KSHV8vgA" base_Comment="_yxUPZ--sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxUPdu-sEduH59KSHV8vgA" instanceClassName="java.lang.String" base_PrimitiveType="_yxUPaO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxUPd--sEduH59KSHV8vgA" base_Comment="_yxUPae-sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxUPeO-sEduH59KSHV8vgA" instanceClassName="java.util.Set" base_PrimitiveType="_yxUPau-sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxUPee-sEduH59KSHV8vgA" instanceClassName="java.util.List" base_PrimitiveType="_yxUPa--sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxdZQO-sEduH59KSHV8vgA" instanceClassName="int" base_PrimitiveType="_yxUPbO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxdZQe-sEduH59KSHV8vgA" base_Comment="_yxUPbe-sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxdZQu-sEduH59KSHV8vgA" instanceClassName="java.lang.Boolean" base_PrimitiveType="_yxUPbu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yxdZQ--sEduH59KSHV8vgA" base_Comment="_yxUPb--sEduH59KSHV8vgA"/>
  <Ecore:EDataType xmi:id="_yxdZRO-sEduH59KSHV8vgA" instanceClassName="java.lang.Double" base_PrimitiveType="_yxUPcO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FMu-sEduH59KSHV8vgA" base_Comment="_yxw7QO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FM--sEduH59KSHV8vgA" base_Comment="_yxw7Qu-sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FNO-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7RO-sEduH59KSHV8vgA" isID="true"/>
  <Default:Documentation xmi:id="_yx6FNe-sEduH59KSHV8vgA" base_Comment="_yxw7Re-sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FNu-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7Se-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FN--sEduH59KSHV8vgA" base_Comment="_yxw7Su-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FOO-sEduH59KSHV8vgA" base_Comment="_yxw7Ve-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FOe-sEduH59KSHV8vgA" base_Comment="_yxw7WO-sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FOu-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7Wu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FO--sEduH59KSHV8vgA" base_Comment="_yxw7W--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FPO-sEduH59KSHV8vgA" base_Comment="_yxw7Y--sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FPe-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7Ze-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FPu-sEduH59KSHV8vgA" base_Comment="_yxw7Zu-sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FP--sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7au-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FQO-sEduH59KSHV8vgA" base_Comment="_yxw7a--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FQe-sEduH59KSHV8vgA" base_Comment="_yxw7c--sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FQu-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7de-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FQ--sEduH59KSHV8vgA" base_Comment="_yxw7du-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FRO-sEduH59KSHV8vgA" base_Comment="_yxw7e--sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FRe-sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7fu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FRu-sEduH59KSHV8vgA" base_Comment="_yxw7f--sEduH59KSHV8vgA"/>
  <Ecore:EAttribute xmi:id="_yx6FR--sEduH59KSHV8vgA" isUnsettable="true" base_Property="_yxw7iO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FSO-sEduH59KSHV8vgA" base_Comment="_yxw7je-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FSe-sEduH59KSHV8vgA" base_Comment="_yxw7kO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FSu-sEduH59KSHV8vgA" base_Comment="_yxw7le-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yx6FS--sEduH59KSHV8vgA" base_Comment="_yxw7mu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OKu-sEduH59KSHV8vgA" base_Comment="_yyzdEO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OK--sEduH59KSHV8vgA" base_Comment="_yyzdEu-sEduH59KSHV8vgA"/>
  <Ecore:EReference xmi:id="_yy9OLO-sEduH59KSHV8vgA" isTransient="true" base_Property="_yyzdFO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OLe-sEduH59KSHV8vgA" base_Comment="_yyzdG--sEduH59KSHV8vgA"/>
  <Ecore:EReference xmi:id="_yy9OLu-sEduH59KSHV8vgA" isTransient="true" base_Property="_yyzdLe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OL--sEduH59KSHV8vgA" base_Comment="_yyzdMe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OMO-sEduH59KSHV8vgA" base_Comment="_yyzdNO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OMe-sEduH59KSHV8vgA" base_Comment="_yyzdN--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OMu-sEduH59KSHV8vgA" base_Comment="_yyzdQO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OM--sEduH59KSHV8vgA" base_Comment="_yyzdRu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9ONO-sEduH59KSHV8vgA" base_Comment="_yyzdSe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9ONe-sEduH59KSHV8vgA" base_Comment="_yyzdTe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9ONu-sEduH59KSHV8vgA" base_Comment="_yyzdVu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9ON--sEduH59KSHV8vgA" base_Comment="_yyzdW--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OOO-sEduH59KSHV8vgA" base_Comment="_yyzdYO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OOe-sEduH59KSHV8vgA" base_Comment="_yyzdZe-sEduH59KSHV8vgA"/>
  <Ecore:EReference xmi:id="_yy9OOu-sEduH59KSHV8vgA" isTransient="true" base_Property="_yyzdZu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OO--sEduH59KSHV8vgA" base_Comment="_yyzdau-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OPO-sEduH59KSHV8vgA" base_Comment="_yy9OEe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OPe-sEduH59KSHV8vgA" base_Comment="_yy9OFu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OPu-sEduH59KSHV8vgA" base_Comment="_yy9OGO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OP--sEduH59KSHV8vgA" base_Comment="_yy9OHe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OQO-sEduH59KSHV8vgA" base_Comment="_yy9OIu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OQe-sEduH59KSHV8vgA" base_Comment="_yy9OJe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_yy9OQu-sEduH59KSHV8vgA" base_Comment="_yy9OKO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg-u-sEduH59KSHV8vgA" base_Comment="_yz1-4O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg---sEduH59KSHV8vgA" base_Comment="_yz1-4u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg_O-sEduH59KSHV8vgA" base_Comment="_yz1-5e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg_e-sEduH59KSHV8vgA" base_Comment="_yz1-6O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg_u-sEduH59KSHV8vgA" base_Comment="_yz1-6--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0Jg_--sEduH59KSHV8vgA" base_Comment="_yz1-7u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhAO-sEduH59KSHV8vgA" base_Comment="_yz1-8e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhAe-sEduH59KSHV8vgA" base_Comment="_yz1-9O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhAu-sEduH59KSHV8vgA" base_Comment="_yz1-9--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhA--sEduH59KSHV8vgA" base_Comment="_yz1--u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhBO-sEduH59KSHV8vgA" base_Comment="_yz1-_e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhBe-sEduH59KSHV8vgA" base_Comment="_yz1_AO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhBu-sEduH59KSHV8vgA" base_Comment="_yz1_CO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhB--sEduH59KSHV8vgA" base_Comment="_yz1_Fe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhCO-sEduH59KSHV8vgA" base_Comment="_yz_v5u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhCe-sEduH59KSHV8vgA" base_Comment="_yz_v_e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhCu-sEduH59KSHV8vgA" base_Comment="_yz_wAO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhC--sEduH59KSHV8vgA" base_Comment="_yz_wA--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhDO-sEduH59KSHV8vgA" base_Comment="_yz_wCO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhDe-sEduH59KSHV8vgA" base_Comment="_yz_wDe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhDu-sEduH59KSHV8vgA" base_Comment="_yz_wEu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhD--sEduH59KSHV8vgA" base_Comment="_yz_wF--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhEO-sEduH59KSHV8vgA" base_Comment="_yz_wHO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhEe-sEduH59KSHV8vgA" base_Comment="_yz_wIe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhEu-sEduH59KSHV8vgA" base_Comment="_yz_wJu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhE--sEduH59KSHV8vgA" base_Comment="_yz_wK--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhFO-sEduH59KSHV8vgA" base_Comment="_y0Jg4e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y0JhFe-sEduH59KSHV8vgA" base_Comment="_y0Jg5u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzsO-sEduH59KSHV8vgA" base_Comment="_y1CRsO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzse-sEduH59KSHV8vgA" base_Comment="_y1MCs--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzsu-sEduH59KSHV8vgA" base_Comment="_y1MCuO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzs--sEduH59KSHV8vgA" base_Comment="_y1MCx--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VztO-sEduH59KSHV8vgA" base_Comment="_y1MCzO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzte-sEduH59KSHV8vgA" base_Comment="_y1MC0--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vztu-sEduH59KSHV8vgA" base_Comment="_y1MC2O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzt--sEduH59KSHV8vgA" base_Comment="_y1MC3e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzuO-sEduH59KSHV8vgA" base_Comment="_y1MC5O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzue-sEduH59KSHV8vgA" base_Comment="_y1MC6e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzuu-sEduH59KSHV8vgA" base_Comment="_y1MC8O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzu--sEduH59KSHV8vgA" base_Comment="_y1MC9e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzvO-sEduH59KSHV8vgA" base_Comment="_y1MC-u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzve-sEduH59KSHV8vgA" base_Comment="_y1MDAe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzvu-sEduH59KSHV8vgA" base_Comment="_y1MDCO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzv--sEduH59KSHV8vgA" base_Comment="_y1MDDe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzwO-sEduH59KSHV8vgA" base_Comment="_y1MDEu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzwe-sEduH59KSHV8vgA" base_Comment="_y1MDF--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzwu-sEduH59KSHV8vgA" base_Comment="_y1MDHO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzw--sEduH59KSHV8vgA" base_Comment="_y1MDIe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzxO-sEduH59KSHV8vgA" base_Comment="_y1MDJe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzxe-sEduH59KSHV8vgA" base_Comment="_y1MDJ--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzxu-sEduH59KSHV8vgA" base_Comment="_y1MDLO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1Vzx--sEduH59KSHV8vgA" base_Comment="_y1MDMe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y1VzyO-sEduH59KSHV8vgA" base_Comment="_y1MDNu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVgO-sEduH59KSHV8vgA" base_Comment="_y2FakO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVge-sEduH59KSHV8vgA" base_Comment="_y2Okge-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVgu-sEduH59KSHV8vgA" base_Comment="_y2Okiu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVg--sEduH59KSHV8vgA" base_Comment="_y2OkkO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVhO-sEduH59KSHV8vgA" base_Comment="_y2Okme-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVhe-sEduH59KSHV8vgA" base_Comment="_y2Okn--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVhu-sEduH59KSHV8vgA" base_Comment="_y2Okou-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVh--sEduH59KSHV8vgA" base_Comment="_y2OkqO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YViO-sEduH59KSHV8vgA" base_Comment="_y2Okru-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVie-sEduH59KSHV8vgA" base_Comment="_y2OktO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YViu-sEduH59KSHV8vgA" base_Comment="_y2Okve-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVi--sEduH59KSHV8vgA" base_Comment="_y2Okwu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVjO-sEduH59KSHV8vgA" base_Comment="_y2Okx--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVje-sEduH59KSHV8vgA" base_Comment="_y2Okyu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVju-sEduH59KSHV8vgA" base_Comment="_y2Okz--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVj--sEduH59KSHV8vgA" base_Comment="_y2Ok1O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVkO-sEduH59KSHV8vgA" base_Comment="_y2Ok2e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVke-sEduH59KSHV8vgA" base_Comment="_y2Ok3u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVku-sEduH59KSHV8vgA" base_Comment="_y2Ok4--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y2YVk--sEduH59KSHV8vgA" base_Comment="_y2Ok6O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAU--sEduH59KSHV8vgA" base_Comment="_y4eAMO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAVO-sEduH59KSHV8vgA" base_Comment="_y4eAMu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAVe-sEduH59KSHV8vgA" base_Comment="_y4eANu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAVu-sEduH59KSHV8vgA" base_Comment="_y4eAP--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAV--sEduH59KSHV8vgA" base_Comment="_y4eARe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAWO-sEduH59KSHV8vgA" base_Comment="_y4eASu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y4eAWe-sEduH59KSHV8vgA" base_Comment="_y4eAT--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4oO-sEduH59KSHV8vgA" base_Comment="_y7mMse-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4oe-sEduH59KSHV8vgA" base_Comment="_y7mMuO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ou-sEduH59KSHV8vgA" base_Comment="_y7mMu--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4o--sEduH59KSHV8vgA" base_Comment="_y7mMvu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4pO-sEduH59KSHV8vgA" base_Comment="_y7mMwe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4pe-sEduH59KSHV8vgA" base_Comment="_y7vWoe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4pu-sEduH59KSHV8vgA" base_Comment="_y7vWo--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4p--sEduH59KSHV8vgA" base_Comment="_y7vWpe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4qO-sEduH59KSHV8vgA" base_Comment="_y7vWp--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4qe-sEduH59KSHV8vgA" base_Comment="_y7vWqe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4qu-sEduH59KSHV8vgA" base_Comment="_y7vWq--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4q--sEduH59KSHV8vgA" base_Comment="_y7vWru-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4rO-sEduH59KSHV8vgA" base_Comment="_y7vWtO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4re-sEduH59KSHV8vgA" base_Comment="_y7vWt--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ru-sEduH59KSHV8vgA" base_Comment="_y7vWue-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4r--sEduH59KSHV8vgA" base_Comment="_y7vWu--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4sO-sEduH59KSHV8vgA" base_Comment="_y7vWve-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4se-sEduH59KSHV8vgA" base_Comment="_y7vWwe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4su-sEduH59KSHV8vgA" base_Comment="_y7vWxu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4s--sEduH59KSHV8vgA" base_Comment="_y7vWye-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4tO-sEduH59KSHV8vgA" base_Comment="_y7vWzO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4te-sEduH59KSHV8vgA" base_Comment="_y7vW2--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4tu-sEduH59KSHV8vgA" base_Comment="_y7vW4O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4t--sEduH59KSHV8vgA" base_Comment="_y7vW7O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4uO-sEduH59KSHV8vgA" base_Comment="_y7vXC--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ue-sEduH59KSHV8vgA" base_Comment="_y7vXDu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4uu-sEduH59KSHV8vgA" base_Comment="_y7vXE--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4u--sEduH59KSHV8vgA" base_Comment="_y7vXJO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4vO-sEduH59KSHV8vgA" base_Comment="_y7vXKu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ve-sEduH59KSHV8vgA" base_Comment="_y7vXLe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4vu-sEduH59KSHV8vgA" base_Comment="_y7vXMO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4v--sEduH59KSHV8vgA" base_Comment="_y7vXM--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4wO-sEduH59KSHV8vgA" base_Comment="_y7vXOe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4we-sEduH59KSHV8vgA" base_Comment="_y7vXPO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4wu-sEduH59KSHV8vgA" base_Comment="_y75Hoe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4w--sEduH59KSHV8vgA" base_Comment="_y75Ho--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4xO-sEduH59KSHV8vgA" base_Comment="_y75HqO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4xe-sEduH59KSHV8vgA" base_Comment="_y75Hre-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4xu-sEduH59KSHV8vgA" base_Comment="_y75Hsu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4x--sEduH59KSHV8vgA" base_Comment="_y75Ht--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4yO-sEduH59KSHV8vgA" base_Comment="_y75HvO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ye-sEduH59KSHV8vgA" base_Comment="_y75Hwe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4yu-sEduH59KSHV8vgA" base_Comment="_y75Hxu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4y--sEduH59KSHV8vgA" base_Comment="_y75HyO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4zO-sEduH59KSHV8vgA" base_Comment="_y75Hze-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4ze-sEduH59KSHV8vgA" base_Comment="_y75H0u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4zu-sEduH59KSHV8vgA" base_Comment="_y75H1--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C4z--sEduH59KSHV8vgA" base_Comment="_y75H3O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C40O-sEduH59KSHV8vgA" base_Comment="_y75H4e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C40e-sEduH59KSHV8vgA" base_Comment="_y75H5u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C40u-sEduH59KSHV8vgA" base_Comment="_y75H7--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C40--sEduH59KSHV8vgA" base_Comment="_y75H9O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y8C41O-sEduH59KSHV8vgA" base_Comment="_y75H-e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFIO-sEduH59KSHV8vgA" base_Comment="_y-4KMe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFIe-sEduH59KSHV8vgA" base_Comment="_y-4KOu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFIu-sEduH59KSHV8vgA" base_Comment="_y-4KQO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFI--sEduH59KSHV8vgA" base_Comment="_y-4KRu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFJO-sEduH59KSHV8vgA" base_Comment="_y-4KSO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFJe-sEduH59KSHV8vgA" base_Comment="_y_BUIO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFJu-sEduH59KSHV8vgA" base_Comment="_y_BUKO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFJ--sEduH59KSHV8vgA" base_Comment="_y_BUK--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFKO-sEduH59KSHV8vgA" base_Comment="_y_BUMO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFKe-sEduH59KSHV8vgA" base_Comment="_y_BUNe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFKu-sEduH59KSHV8vgA" base_Comment="_y_BUOO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFK--sEduH59KSHV8vgA" base_Comment="_y_BUPe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFLO-sEduH59KSHV8vgA" base_Comment="_y_BUQu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFLe-sEduH59KSHV8vgA" base_Comment="_y_BUR--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFLu-sEduH59KSHV8vgA" base_Comment="_y_BUSe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFL--sEduH59KSHV8vgA" base_Comment="_y_BUUu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFMO-sEduH59KSHV8vgA" base_Comment="_y_BUV--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFMe-sEduH59KSHV8vgA" base_Comment="_y_BUXO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFMu-sEduH59KSHV8vgA" base_Comment="_y_BUYe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFM--sEduH59KSHV8vgA" base_Comment="_y_BUZu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_y_LFNO-sEduH59KSHV8vgA" base_Comment="_y_BUa--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6EO-sEduH59KSHV8vgA" base_Comment="_zBZ5w--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Ee-sEduH59KSHV8vgA" base_Comment="_zBZ5yu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Eu-sEduH59KSHV8vgA" base_Comment="_zBZ5z--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6E--sEduH59KSHV8vgA" base_Comment="_zBZ51O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6FO-sEduH59KSHV8vgA" base_Comment="_zBZ52--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Fe-sEduH59KSHV8vgA" base_Comment="_zBZ54O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Fu-sEduH59KSHV8vgA" base_Comment="_zBZ55e-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6F--sEduH59KSHV8vgA" base_Comment="_zBZ56u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6GO-sEduH59KSHV8vgA" base_Comment="_zBZ57--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Ge-sEduH59KSHV8vgA" base_Comment="_zBZ59O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6Gu-sEduH59KSHV8vgA" base_Comment="_zBZ5---sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6G--sEduH59KSHV8vgA" base_Comment="_zBZ6AO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6HO-sEduH59KSHV8vgA" base_Comment="_zBZ6B--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zBZ6He-sEduH59KSHV8vgA" base_Comment="_zBZ6DO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVrO-sEduH59KSHV8vgA" base_Comment="_zDpVce-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVre-sEduH59KSHV8vgA" base_Comment="_zDpVfO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVru-sEduH59KSHV8vgA" base_Comment="_zDpVgu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVr--sEduH59KSHV8vgA" base_Comment="_zDpVi--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVsO-sEduH59KSHV8vgA" base_Comment="_zDpVke-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVse-sEduH59KSHV8vgA" base_Comment="_zDpVlu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVsu-sEduH59KSHV8vgA" base_Comment="_zDpVm--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVs--sEduH59KSHV8vgA" base_Comment="_zDpVoO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVtO-sEduH59KSHV8vgA" base_Comment="_zDpVpe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zDpVte-sEduH59KSHV8vgA" base_Comment="_zDpVqu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2FO-sEduH59KSHV8vgA" base_Comment="_zGLFAe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Fe-sEduH59KSHV8vgA" base_Comment="_zGLFDO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Fu-sEduH59KSHV8vgA" base_Comment="_zGLFDu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2F--sEduH59KSHV8vgA" base_Comment="_zGLFEO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2GO-sEduH59KSHV8vgA" base_Comment="_zGLFE--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Ge-sEduH59KSHV8vgA" base_Comment="_zGLFGO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Gu-sEduH59KSHV8vgA" base_Comment="_zGLFGu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2G--sEduH59KSHV8vgA" base_Comment="_zGLFHO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2HO-sEduH59KSHV8vgA" base_Comment="_zGLFHu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2He-sEduH59KSHV8vgA" base_Comment="_zGLFIO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Hu-sEduH59KSHV8vgA" base_Comment="_zGLFJe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2H--sEduH59KSHV8vgA" base_Comment="_zGLFKO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2IO-sEduH59KSHV8vgA" base_Comment="_zGLFLe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Ie-sEduH59KSHV8vgA" base_Comment="_zGLFMu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Iu-sEduH59KSHV8vgA" base_Comment="_zGU2Ae-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2I--sEduH59KSHV8vgA" base_Comment="_zGU2Bu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2JO-sEduH59KSHV8vgA" base_Comment="_zGU2C--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zGU2Je-sEduH59KSHV8vgA" base_Comment="_zGU2EO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zLitOO-sEduH59KSHV8vgA" base_Comment="_zLitNO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcxu-sEduH59KSHV8vgA" base_Comment="_zN7S0--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcx--sEduH59KSHV8vgA" base_Comment="_zN7S1u-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcyO-sEduH59KSHV8vgA" base_Comment="_zN7S2--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcye-sEduH59KSHV8vgA" base_Comment="_zN7S3--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcyu-sEduH59KSHV8vgA" base_Comment="_zN7S5O-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zOEcy--sEduH59KSHV8vgA" base_Comment="_zOEcwu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzoO-sEduH59KSHV8vgA" base_Comment="_zQdCYe-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzoe-sEduH59KSHV8vgA" base_Comment="_zQdCee-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzou-sEduH59KSHV8vgA" base_Comment="_zQdCfu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzo--sEduH59KSHV8vgA" base_Comment="_zQmzZO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzpO-sEduH59KSHV8vgA" base_Comment="_zQmzb--sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzpe-sEduH59KSHV8vgA" base_Comment="_zQmzdO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzpu-sEduH59KSHV8vgA" base_Comment="_zQmzee-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzp--sEduH59KSHV8vgA" base_Comment="_zQmzfu-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzqO-sEduH59KSHV8vgA" base_Comment="_zQmzge-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzqe-sEduH59KSHV8vgA" base_Comment="_zQmzhO-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzqu-sEduH59KSHV8vgA" base_Comment="_zQmzie-sEduH59KSHV8vgA"/>
  <Default:Documentation xmi:id="_zQmzq--sEduH59KSHV8vgA" base_Comment="_zQmzlu-sEduH59KSHV8vgA"/>
</xmi:XMI>
